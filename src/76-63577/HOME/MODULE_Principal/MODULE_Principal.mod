MODULE MODULE_Principal
    !Áreas de Trabalho
    !São o elemento mais importante pois garante o posicionamento de cada ponto
    !Este robô não faz o translado automático X/Y/Z de acordo com o 7o eixo, portanto,
    !Cada área de trabalho deverá ter uma posição de 7o eixo única
    !Para facilitar o trabalho, usaremos números redondos
	PERS wobjdata wBuffer_Esq:=[FALSE,TRUE,"",[[-1496.69,1441.74,167.277],[0.999985,0.000248147,0.000724201,0.00543068]],[[-1745.23,1108.35,145.45],[0.999999,4.69146E-06,-2.92366E-05,0.00131126]]];
	PERS wobjdata wBuffer_Dir:=[FALSE,TRUE,"",[[1299.71,-1300.57,-138.144],[0.00233014,-0.00251559,0.000491525,-0.999994]],[[-1.09887,-0.647902,1.21711],[0.999998,0.000178717,0.00166855,0.000629553]]];
	PERS wobjdata wBuffer_Front:=[FALSE,TRUE,"",[[0,0,0],[1,0,0,0]],[[1817.4,652.046,95.7393],[0.711267,5.89363E-05,4.0665E-05,-0.702922]]];
    PERS wobjdata wOD_FrameAtual;

    
    !Posições de Trabalho criadas indivualmente de modo a facilitar a remarcação dos mesmos através do TP (Modo "Manobra")
	
    !Pontos de Pega Pallet Entrada
    CONST robtarget pPega_Esteira_Entrada_Fam_1:=[[-892.30,-8.73,114.94],[0.00890689,0.505902,-0.86254,0.00289884],[1,0,1,0],[2789.87,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pPega_Esteira_Entrada_Fam_2:=[[-903.12,22.56,113.13],[0.00995181,0.502068,-0.864764,0.00345378],[1,0,1,0],[2790.48,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pPega_Esteira_Entrada_Fam_3:=[[-856.19,17.95,113.21],[0.011327,0.469326,-0.882951,0.00179029],[1,0,1,0],[2789.01,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pPega_Esteira_Entrada_Fam_4:=[[-859.63,53.62,114.16],[0.0118197,0.463249,-0.886146,0.00231831],[1,0,1,0],[2788.09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    !Pontos de Entrega Pallet Saída
    CONST robtarget pDepos_Esteira_Saída_Fam_1:=[[3914.59,-522.52,391.38],[0.00215515,-0.50478,0.863171,0.0113072],[-2,0,-1,0],[2786.14,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pDepos_Esteira_Saída_Fam_2:=[[3902.08,-490.79,391.46],[0.000724518,0.504333,-0.86348,-0.00693714],[-2,0,-1,0],[2786.08,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pDepos_Esteira_Saída_Fam_3:=[[3948.36,-498.11,391.19],[0.00179139,-0.467512,0.883916,0.0109667],[-2,0,-1,0],[2786.12,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pDepos_Esteira_Saída_Fam_4:=[[3946.87,-461.76,390.86],[0.00261336,-0.469104,0.88306,0.0117412],[-2,0,-1,0],[2786.2,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    !Pontos de Pega/Entrega no Buffer
    CONST robtarget pBuffer_Pos_1_Fam_1:=[[7.37,772.71,-227.00],[0.0094332,0.495816,-0.868359,-0.0055283],[0,0,0,0],[-2759.32,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_1_Fam_2:=[[-0.66,767.79,-228.84],[0.00851402,0.493992,-0.86941,-0.00504847],[0,0,0,0],[-2797.15,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_1_Fam_3:=[[43.89,758.64,-227.72],[0.00901302,0.460325,-0.887687,-0.00558647],[0,0,0,0],[-2799.3,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_1_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_2_Fam_1:=[[608.10,765.78,-229.47],[0.0063832,0.495807,-0.868392,-0.00544678],[0,0,0,0],[-2759.34,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_2_Fam_2:=[[600.64,759.03,-231.49],[0.00573984,0.493618,-0.869636,-0.00650033],[0,0,0,0],[-2797.15,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_2_Fam_3:=[[645.63,750.43,-228.60],[0.00739048,0.460305,-0.887707,-0.00641519],[-1,0,0,0],[-2799.28,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_2_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_3_Fam_1:=[[1209.28,761.76,-230.98],[0.00584909,0.495966,-0.868268,-0.00970648],[-1,0,0,0],[-2759.36,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_3_Fam_2:=[[1200.31,751.52,-231.26],[0.0057374,0.493612,-0.869639,-0.00650163],[-1,0,0,0],[-2797.15,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_3_Fam_3:=[[1244.75,745.62,-229.76],[0.005223,0.460289,-0.887722,-0.00752617],[-1,0,0,0],[-2799.28,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_3_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_4_Fam_1:=[[-2.50,174.28,-231.27],[0.00949105,0.487597,-0.873001,-0.00543135],[0,0,0,0],[-2759.32,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_4_Fam_2:=[[-11.16,208.47,-233.18],[0.00709565,0.493594,-0.869644,-0.00586796],[0,0,0,0],[-2759.44,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_4_Fam_3:=[[36.48,157.60,-231.80],[0.00787525,0.455081,-0.890394,-0.00615711],[0,0,0,0],[-2799.23,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_4_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_5_Fam_1:=[[599.44,167.93,-232.95],[0.0094876,0.487601,-0.872998,-0.00543164],[0,0,0,0],[-2759.31,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_5_Fam_2:=[[590.87,200.06,-233.35],[0.00565878,0.493614,-0.869647,-0.00521912],[0,0,0,0],[-2759.6,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_5_Fam_3:=[[635.63,153.60,-233.47],[0.00684399,0.455046,-0.890416,-0.00677203],[0,0,0,0],[-2799.05,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_5_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_6_Fam_1:=[[1200.41,161.74,-233.66],[0.00432847,0.4929,-0.870058,-0.00552864],[-1,0,0,0],[-2759.3,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_6_Fam_2:=[[1189.38,194.70,-233.82],[0.00347789,0.4936,-0.869658,-0.00644675],[-1,0,0,0],[-2759.62,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_6_Fam_3:=[[1234.45,147.88,-233.79],[0.00453908,0.455024,-0.89044,-0.00702546],[-1,0,0,0],[-2799.04,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_6_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_7_Fam_1:=[[-8.74,-424.53,-233.51],[0.00824777,0.492918,-0.87003,-0.00330778],[0,0,0,0],[-2759.46,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_7_Fam_2:=[[-20.43,-391.39,-233.72],[0.0079101,0.493635,-0.869632,-0.00167162],[0,0,0,0],[-2759.63,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_7_Fam_3:=[[25.77,-437.77,-235.43],[0.00809794,0.455052,-0.890423,-0.00286019],[0,0,0,0],[-2798.94,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_7_Fam_4:=[[24.69,-400.77,-236.20],[0.00788897,0.45765,-0.889093,-0.00270228],[0,0,0,0],[-2796.84,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_8_Fam_1:=[[589.21,-430.27,-235.91],[0.00552224,0.492893,-0.870059,-0.00485643],[0,0,0,0],[-2759.45,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_8_Fam_2:=[[578.62,-398.26,-236.16],[0.00496605,0.493626,-0.869654,-0.00334278],[0,0,0,0],[-2759.62,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_8_Fam_3:=[[623.75,-444.96,-236.14],[0.00608606,0.455024,-0.890442,-0.00542105],[0,0,0,0],[-2798.94,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_8_Fam_4:=[[623.08,-407.12,-237.24],[0.00560198,0.456852,-0.889514,-0.00442579],[0,0,0,0],[-2796.84,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_9_Fam_1:=[[1193.32,-437.13,-237.21],[0.00431508,0.492894,-0.870061,-0.00553895],[-1,0,0,0],[-2759.45,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_9_Fam_2:=[[1182.06,-404.47,-236.51],[0.00203753,0.493601,-0.869656,-0.0072623],[-1,0,0,0],[-2759.62,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_9_Fam_3:=[[1227.16,-451.23,-237.34],[0.00266379,0.455005,-0.890456,-0.00714614],[-1,0,0,0],[-2799.01,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_9_Fam_4:=[[1225.35,-413.49,-239.82],[0.00246302,0.458101,-0.888865,-0.00757263],[-1,0,0,0],[-2796.83,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_10_Fam_1:=[[3125.16,1295.11,-278.62],[0.000446659,0.50559,-0.862743,-0.00729887],[0,0,-1,0],[-2797.3,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_10_Fam_2:=[[3112.96,1327.02,-281.21],[0.000553013,0.501343,-0.865199,-0.00928539],[0,0,-1,0],[-2799.21,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_10_Fam_3:=[[3163.99,1318.37,-279.58],[0.0014156,0.470862,-0.882151,-0.00983912],[0,0,0,0],[-2794.37,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_10_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_11_Fam_1:=[[3129.03,697.14,-282.67],[0.00304567,-0.505555,0.862778,0.00440034],[0,0,-1,0],[-2797.29,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_11_Fam_2:=[[3114.49,729.80,-282.57],[0.00259125,-0.501318,0.86524,0.00576668],[0,0,-1,0],[-2799.22,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_11_Fam_3:=[[3158.91,721.31,-282.76],[0.00123676,-0.46643,0.884528,0.00712026],[0,0,-1,0],[-2799.55,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_11_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_12_Fam_1:=[[3130.51,99.52,-284.20],[0.00448454,-0.503093,0.864216,0.00280231],[0,0,-1,0],[-2798.44,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_12_Fam_2:=[[3118.15,130.90,-283.93],[0.00431243,-0.503101,0.864206,0.00429509],[0,0,-1,0],[-2798.43,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_12_Fam_3:=[[3162.13,126.88,-284.98],[0.00302053,-0.46775,0.883832,0.0064599],[0,0,-1,0],[-2799.55,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_12_Fam_4:=[[3163.44,160.26,-285.10],[0.0022069,-0.467021,0.884221,0.006347],[0,0,-1,0],[-2799.23,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_13_Fam_1:=[[-158.75,-116.17,-4.91],[0.0123223,0.500683,-0.865536,0.00345105],[-1,0,0,0],[-2796.99,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_13_Fam_2:=[[-165.38,-84.85,-3.78],[0.0114409,0.498343,-0.866902,0.00178928],[-1,0,0,0],[-2799.47,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_13_Fam_3:=[[-117.38,-89.72,-4.62],[0.0102711,0.466731,-0.884339,0.0012348],[-1,0,0,0],[-2799.74,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_13_Fam_4:=[[-121.23,-53.97,-4.53],[0.010564,0.46415,-0.885693,0.000186544],[-1,0,0,0],[-2798.91,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_14_Fam_1:=[[-156.41,482.15,-2.96],[0.0108689,0.500563,-0.865632,-4.34409E-06],[-1,0,0,0],[-2796.99,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_14_Fam_2:=[[-163.33,513.87,-2.32],[0.0111238,0.498482,-0.866828,-0.000888953],[-1,0,0,0],[-2799.46,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_14_Fam_3:=[[-115.64,506.74,-3.07],[0.0103101,0.466825,-0.884288,-0.00140566],[-1,0,0,0],[-2799.73,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_14_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_15_Fam_1:=[[-155.63,1083.01,-0.45],[0.0141183,0.500784,-0.865455,-0.00165445],[-1,0,0,0],[-2799.58,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_15_Fam_2:=[[-169.06,1113.59,0.75],[0.0121729,0.497205,-0.867545,-0.00202287],[-1,0,0,0],[-2799.38,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_15_Fam_3:=[[-128.04,1107.45,-0.44],[0.014722,0.464342,-0.885519,-0.004981],[-1,0,0,0],[-2792.62,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_15_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_16_Fam_1:=[[2524.62,1290.64,-280.78],[0.00196235,0.505613,-0.862734,-0.00643011],[0,0,0,0],[-2797.31,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_16_Fam_2:=[[2512.03,1324.45,-281.03],[0.00159772,0.50134,-0.865205,-0.00866515],[0,0,0,0],[-2799.2,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_16_Fam_3:=[[2560.71,1316.70,-281.88],[0.0028629,0.466814,-0.884305,-0.00905087],[0,0,0,0],[-2794.36,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_16_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_17_Fam_1:=[[2527.18,692.95,-284.55],[0.00298032,0.505552,-0.862778,-0.0047235],[0,0,0,0],[-2797.29,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_17_Fam_2:=[[2513.98,725.52,-285.09],[0.00218883,0.496931,-0.867773,-0.00495018],[0,0,0,0],[-2799.33,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_17_Fam_3:=[[2557.99,719.47,-285.35],[0.00336496,0.466452,-0.884528,-0.00471416],[0,0,0,0],[-2799.59,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_17_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_18_Fam_1:=[[2671.70,97.54,-287.37],[0.000620284,-0.500034,0.865993,0.00461524],[0,0,-1,0],[-2654.76,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_18_Fam_2:=[[2517.56,129.06,-287.50],[0.000981776,-0.503118,0.864205,0.00461716],[0,0,-1,0],[-2798.39,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_18_Fam_3:=[[2559.31,122.07,-288.16],[0.00132667,-0.461565,0.887088,0.00559317],[0,0,0,0],[-2799.55,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_18_Fam_4:=[[2704.82,157.21,-288.30],[0.000713469,-0.462615,0.886537,0.00625544],[0,0,-1,0],[-2654.39,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_19_Fam_1:=[[247.25,-115.23,-8.82],[0.0100758,0.499175,-0.866442,-0.000533503],[-1,0,0,0],[-2603.04,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_19_Fam_2:=[[431.47,-84.00,-8.85],[0.00828028,0.498251,-0.866993,-0.000100739],[-1,0,0,0],[-2799.5,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_19_Fam_3:=[[478.78,-89.97,-9.22],[0.0072747,0.46038,-0.887692,-0.000363219],[-1,0,0,0],[-2799.7,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_19_Fam_4:=[[476.61,-54.20,-12.01],[0.00908702,0.463984,-0.885796,-0.00122794],[-1,0,0,0],[-2798.93,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_20_Fam_1:=[[442.19,484.20,-8.16],[0.00897564,0.5005,-0.865689,-0.00100385],[-1,0,0,0],[-2796.95,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_20_Fam_2:=[[436.42,515.49,-8.06],[0.00938834,0.498514,-0.866828,-0.00174327],[-1,0,0,0],[-2799.5,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_20_Fam_3:=[[483.48,508.61,-9.21],[0.0087904,0.466891,-0.884268,-0.00215587],[-1,0,0,0],[-2799.73,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_20_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_21_Fam_1:=[[444.34,1083.15,-5.86],[0.0110045,0.500821,-0.865474,-0.00339638],[-1,0,0,0],[-2799.62,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_21_Fam_2:=[[431.25,1115.20,-5.37],[0.00991956,0.497195,-0.867575,-0.00339667],[-1,0,0,0],[-2799.38,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_21_Fam_3:=[[471.23,1109.90,-7.35],[0.0128651,0.464421,-0.885491,-0.00724611],[-1,0,0,0],[-2792.75,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_21_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_22_Fam_1:=[[1925.85,1285.53,-282.34],[0.00457549,0.505638,-0.86272,-0.00492379],[0,0,0,0],[-2797.31,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_22_Fam_2:=[[1911.59,1317.51,-282.03],[0.00446013,0.499573,-0.866244,-0.00523818],[0,0,0,0],[-2799.2,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_22_Fam_3:=[[1962.14,1312.02,-282.41],[0.00531482,0.466823,-0.884305,-0.00729481],[0,0,0,0],[-2794.3,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_22_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_23_Fam_1:=[[1927.02,689.73,-286.85],[0.00515569,0.505554,-0.862773,-0.00343849],[0,0,0,0],[-2797.29,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_23_Fam_2:=[[1911.60,717.86,-287.23],[0.00517402,0.496948,-0.867758,-0.00326388],[0,0,0,0],[-2799.34,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_23_Fam_3:=[[1957.28,715.67,-288.65],[0.00491993,0.466469,-0.884515,-0.00390995],[0,0,0,0],[-2799.59,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_23_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_24_Fam_1:=[[2663.11,98.06,-288.42],[0.00116751,0.500025,-0.865984,-0.00666801],[0,0,-1,0],[-2063.51,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_24_Fam_2:=[[2535.00,129.62,-288.24],[0.00121205,-0.496956,0.867765,0.00402233],[0,0,-1,0],[-2181.79,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_24_Fam_3:=[[2559.29,123.44,-288.19],[0.00082535,0.461562,-0.887089,-0.00575442],[0,0,0,0],[-2200.36,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_24_Fam_4:=[[2700.89,159.24,-290.65],[0.000617972,0.462618,-0.886535,-0.00623967],[0,0,-1,0],[-2060.88,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_25_Fam_1:=[[245.95,-116.26,-10.97],[0.0100521,0.499219,-0.866417,-0.000518542],[-1,0,0,0],[-2001.28,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_25_Fam_2:=[[431.62,-85.11,-11.52],[0.0095487,0.498099,-0.867067,7.76038E-05],[-1,0,0,0],[-2197.42,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_25_Fam_3:=[[519.38,-91.47,-12.79],[0.00927501,0.46599,-0.884741,-0.000791446],[-1,0,0,0],[-2239.66,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_25_Fam_4:=[[487.69,-54.01,-12.64],[0.00936216,0.466524,-0.884457,-0.00172347],[-1,0,0,0],[-2210.41,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_26_Fam_1:=[[1039.75,488.24,-10.93],[0.00783253,0.500451,-0.865727,-0.00168735],[-1,0,0,0],[-2796.8,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_26_Fam_2:=[[1034.07,518.86,-11.33],[0.00650328,0.498632,-0.866782,-0.00331716],[-1,0,0,0],[-2799.68,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_26_Fam_3:=[[1078.67,511.03,-11.14],[0.00705562,0.464967,-0.885294,-0.00298736],[-1,0,0,0],[-2799.74,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_26_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_27_Fam_1:=[[1042.86,1085.68,-8.40],[0.00827455,0.500802,-0.865508,-0.00492626],[-1,0,0,0],[-2799.63,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_27_Fam_2:=[[1030.84,1118.73,-7.82],[0.00994246,0.49718,-0.867583,-0.003481],[-1,0,0,0],[-2799.44,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_27_Fam_3:=[[1070.44,1111.05,-8.07],[0.0118123,0.464399,-0.885512,-0.00783361],[-1,0,0,0],[-2792.74,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_27_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_28_Fam_1:=[[1782.98,1285.49,-282.71],[0.00338834,0.505642,-0.862732,-0.00276693],[0,0,0,0],[-2336.77,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_28_Fam_2:=[[1638.63,1316.32,-283.52],[0.00375355,0.49957,-0.866256,-0.00403912],[1,0,0,0],[-2470.08,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_28_Fam_3:=[[1716.39,1310.78,-283.69],[0.0044712,0.466813,-0.884334,-0.00441116],[1,0,0,0],[-2438.04,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_28_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_29_Fam_1:=[[1822.16,688.62,-286.78],[0.00516746,0.497758,-0.867294,-0.00337856],[0,0,0,0],[-2298.6,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_29_Fam_2:=[[1843.74,720.36,-287.91],[0.00404249,0.496957,-0.867756,-0.00395428],[0,0,0,0],[-2266.26,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_29_Fam_3:=[[1861.80,713.22,-287.63],[0.00392706,0.463819,-0.88591,-0.00445136],[0,0,0,0],[-2293.56,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_29_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_30_Fam_1:=[[2642.62,95.23,-288.64],[0.00224662,0.500028,-0.865985,-0.00606912],[0,0,-1,0],[-1485.32,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_30_Fam_2:=[[2541.72,124.82,-288.18],[0.0017361,0.49697,-0.867747,-0.00567991],[0,0,-1,0],[-1573.81,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_30_Fam_3:=[[2563.09,120.53,-288.74],[0.00168923,0.461564,-0.887074,-0.00743247],[0,0,-1,0],[-1597.57,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_30_Fam_4:=[[2703.53,155.59,-288.97],[0.0013036,0.46384,-0.885886,-0.00746395],[0,0,-1,0],[-1456.76,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_31_Fam_1:=[[243.48,-114.03,-14.74],[0.0100277,0.499257,-0.866395,-0.000511688],[-1,0,0,0],[-1396.57,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_31_Fam_2:=[[437.17,-82.09,-15.83],[0.00774399,0.49808,-0.867096,0.000473401],[-1,0,0,0],[-1601.39,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_31_Fam_3:=[[533.39,-88.37,-16.27],[0.00909205,0.464298,-0.885632,-3.17004E-05],[-1,0,0,0],[-1653.32,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_31_Fam_4:=[[497.94,-50.90,-16.73],[0.00868669,0.466443,-0.884508,-0.000387174],[-1,0,0,0],[-1621.13,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_32_Fam_1:=[[1358.26,488.66,-14.56],[0.00681182,0.500356,-0.865778,-0.00511396],[-2,0,0,0],[-2513.26,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_32_Fam_2:=[[1344.93,518.90,-14.56],[0.00627394,0.498703,-0.866733,-0.00536525],[-2,0,0,0],[-2509.49,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_32_Fam_3:=[[1427.58,512.67,-14.41],[0.00696358,0.460636,-0.887544,-0.00551732],[-2,0,0,0],[-2547.72,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_32_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_33_Fam_1:=[[1312.14,1085.67,-11.56],[0.00664458,0.500821,-0.865506,-0.00579817],[-2,0,0,0],[-2468.64,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_33_Fam_2:=[[1345.00,1118.26,-11.37],[0.00551493,0.49713,-0.867636,-0.00613064],[-2,0,0,0],[-2510.62,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_33_Fam_3:=[[1242.36,1110.67,-10.66],[0.00731422,0.46227,-0.886691,-0.00561763],[-1,0,0,0],[-2363.61,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_33_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_34_Fam_1:=[[1768.10,1286.96,-284.23],[0.00340406,0.505681,-0.862709,-0.00277148],[0,0,0,0],[-1752.12,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_34_Fam_2:=[[1650.67,1317.84,-283.12],[0.00371953,0.499567,-0.866266,-0.00157232],[1,0,0,0],[-1857.3,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_34_Fam_3:=[[1707.34,1311.98,-283.04],[0.00510305,0.466812,-0.884336,-0.00307721],[1,0,0,0],[-1847.51,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_34_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_35_Fam_1:=[[1819.95,689.11,-285.23],[0.007297,0.497747,-0.867288,-0.00245814],[0,0,0,0],[-1703.69,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_35_Fam_2:=[[1821.50,721.36,-285.61],[0.00582775,0.496975,-0.86774,-0.00295089],[0,0,0,0],[-1692.88,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_35_Fam_3:=[[1836.64,713.26,-287.23],[0.00584335,0.463808,-0.885906,-0.00420086],[0,0,0,0],[-1720.67,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_35_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_36_Fam_1:=[[2644.64,96.12,-286.93],[0.000675154,0.500007,-0.865993,-0.00698479],[0,0,-1,0],[-884.851,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_36_Fam_2:=[[2537.97,125.18,-287.00],[0.00175226,0.496962,-0.867752,-0.00566446],[0,0,-1,0],[-981.621,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_36_Fam_3:=[[2568.49,120.50,-288.84],[0.00280298,0.46158,-0.887068,-0.00683608],[0,0,-1,0],[-994.596,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_36_Fam_4:=[[2707.39,155.38,-289.00],[0.00190621,0.465774,-0.884872,-0.00716648],[0,0,-1,0],[-855.928,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_37_Fam_1:=[[252.45,-113.49,-16.65],[0.00998731,0.49932,-0.86636,-0.000489631],[-1,0,0,0],[-807.591,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_37_Fam_2:=[[443.36,-80.86,-16.12],[0.00776528,0.49806,-0.867107,0.000456071],[-1,0,0,0],[-1011.47,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_37_Fam_3:=[[570.98,-86.11,-16.88],[0.00863572,0.461549,-0.887072,-0.00031525],[-1,0,0,0],[-1093.21,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_37_Fam_4:=[[507.76,-51.01,-18.49],[0.00818392,0.463271,-0.886178,-0.000678099],[-1,0,0,0],[-1029.32,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_38_Fam_1:=[[1366.11,490.05,-16.53],[0.00680012,0.500336,-0.865789,-0.00518632],[-2,0,0,0],[-1921.92,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_38_Fam_2:=[[1351.36,520.29,-15.91],[0.00562361,0.498748,-0.866718,-0.00408944],[-2,0,0,0],[-1919.92,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_38_Fam_3:=[[1406.65,514.74,-15.59],[0.00666625,0.460641,-0.887546,-0.00512707],[-2,0,0,0],[-1930.3,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_38_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_39_Fam_1:=[[1286.64,1087.21,-13.03],[0.00663902,0.50081,-0.865512,-0.00577238],[-1,0,0,0],[-1843.62,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_39_Fam_2:=[[1350.94,1118.90,-13.10],[0.00660301,0.497111,-0.867643,-0.00558901],[-2,0,0,0],[-1919.04,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_39_Fam_3:=[[1251.47,1112.56,-12.46],[0.00732971,0.462279,-0.886686,-0.0056375],[-1,0,0,0],[-1773.6,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_39_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_40_Fam_1:=[[1770.60,1285.90,-282.98],[0.00535388,0.505792,-0.862617,-0.00615671],[0,0,0,0],[-1148.89,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_40_Fam_2:=[[1660.90,1318.18,-282.59],[0.0054149,0.49952,-0.866273,-0.00455208],[1,0,0,0],[-1250.37,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_40_Fam_3:=[[1723.54,1311.79,-283.24],[0.00627482,0.466783,-0.884327,-0.00628366],[1,0,0,0],[-1230.39,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_40_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_41_Fam_1:=[[1827.26,688.17,-287.26],[0.00413711,0.497731,-0.867311,-0.00426522],[0,0,0,0],[-1095.78,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_41_Fam_2:=[[1785.60,721.20,-287.43],[0.00306313,0.496973,-0.867755,-0.0031133],[0,0,0,0],[-1124.75,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_41_Fam_3:=[[1799.02,713.54,-287.43],[0.00433364,0.463819,-0.885905,-0.00500816],[0,0,0,0],[-1157.69,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_41_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_42_Fam_1:=[[2651.34,96.58,-290.01],[0.000713554,0.499998,-0.865998,-0.0069817],[0,0,-1,0],[-272.092,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_42_Fam_2:=[[2527.15,125.39,-290.71],[4.37496E-05,0.500451,-0.865739,-0.00659654],[0,0,-1,0],[-385.622,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_42_Fam_3:=[[2575.96,119.00,-291.58],[0.000825384,-0.461569,0.887082,0.00621158],[0,0,-1,0],[-385.269,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_42_Fam_4:=[[2717.70,157.60,-292.06],[0.000276995,-0.4662,0.884644,0.00789705],[0,0,-1,0],[-243.358,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_43_Fam_1:=[[244.23,-115.28,-15.39],[0.00994492,0.499377,-0.866327,-0.000457617],[-1,0,0,0],[-197.006,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_43_Fam_2:=[[457.88,-82.77,-15.68],[0.00894542,0.498015,-0.867121,0.00109616],[-1,0,0,0],[-422.71,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_43_Fam_3:=[[602.05,-88.63,-17.36],[0.00867055,0.462588,-0.886531,-0.000413146],[-1,0,0,0],[-521.605,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_43_Fam_4:=[[494.83,-52.12,-17.18],[0.00906401,0.46317,-0.886222,-0.000225781],[-1,0,0,0],[-414.192,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_44_Fam_1:=[[1381.00,490.00,-15.74],[0.00680586,0.50032,-0.865798,-0.00523047],[-2,0,0,0],[-1334.48,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_44_Fam_2:=[[1354.56,520.39,-15.97],[0.00563617,0.498766,-0.866708,-0.00402638],[-2,0,0,0],[-1319.24,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_44_Fam_3:=[[1390.35,514.67,-15.88],[0.00668673,0.460668,-0.887533,-0.00503717],[-2,0,0,0],[-1311.47,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_44_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_45_Fam_1:=[[1274.45,1086.19,-13.87],[0.0080957,0.500914,-0.865445,-0.00487319],[-1,0,0,0],[-1228.18,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_45_Fam_2:=[[1359.02,1120.15,-13.66],[0.0066563,0.497092,-0.867653,-0.00561775],[-2,0,0,0],[-1321.89,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_45_Fam_3:=[[1282.23,1110.40,-16.48],[0.00741651,0.462255,-0.886698,-0.00563769],[-1,0,0,0],[-1200.66,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_45_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_46_Fam_1:=[[1764.09,1285.30,-283.57],[0.00658523,0.50577,-0.862626,-0.00542593],[0,0,0,0],[-555.661,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_46_Fam_2:=[[1673.82,1315.18,-283.09],[0.0053906,0.49951,-0.866279,-0.00457099],[1,0,0,0],[-635.655,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_46_Fam_3:=[[1726.80,1309.96,-284.22],[0.00627914,0.466774,-0.884332,-0.006271],[1,0,0,0],[-627.394,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_46_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_47_Fam_1:=[[1821.32,687.47,-288.25],[0.00413304,0.497735,-0.867308,-0.00425432],[0,0,0,0],[-501.547,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_47_Fam_2:=[[1763.77,720.06,-287.89],[0.0039132,0.496958,-0.867753,-0.00461004],[0,0,0,0],[-545.875,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_47_Fam_3:=[[1798.77,713.10,-288.53],[0.00486163,0.463888,-0.885868,-0.00473882],[0,0,0,0],[-556.556,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_47_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_48_Fam_1:=[[2682.39,94.19,-291.30],[0.000715134,0.499996,-0.865999,-0.00699782],[0,0,-1,0],[355.49,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_48_Fam_2:=[[2530.91,124.59,-291.09],[0.000302613,0.500506,-0.865719,-0.00483038],[0,0,-1,0],[217.016,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_48_Fam_3:=[[2580.46,119.18,-291.48],[0.000693414,0.461565,-0.88708,-0.00679481],[0,0,-1,0],[221.239,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_48_Fam_4:=[[2739.43,154.78,-291.87],[0.000259635,0.466206,-0.884643,-0.007628],[0,0,-1,0],[379.734,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_49_Fam_1:=[[225.36,-113.69,-16.94],[0.0099188,0.499412,-0.866307,-0.000444793],[-1,0,0,0],[422.659,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_49_Fam_2:=[[465.96,-80.59,-17.24],[0.00952119,0.495476,-0.868568,0.00133438],[-1,0,0,0],[168.51,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_49_Fam_3:=[[608.83,-88.19,-17.68],[0.00975154,0.462072,-0.886788,-0.000510673],[-1,0,0,0],[71.5663,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_49_Fam_4:=[[513.74,-51.77,-18.92],[0.00966128,0.463072,-0.886267,5.74076E-06],[-1,0,0,0],[166.883,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_50_Fam_1:=[[1381.94,487.07,-17.92],[0.00686179,0.498139,-0.867053,-0.00526923],[-2,0,0,0],[-735.544,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_50_Fam_2:=[[1351.81,519.79,-17.88],[0.00562963,0.498764,-0.86671,-0.00400438],[-2,0,0,0],[-716.355,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_50_Fam_3:=[[1391.38,513.95,-17.82],[0.00630587,0.460705,-0.887519,-0.00438148],[-2,0,0,0],[-711.624,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_50_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_51_Fam_1:=[[1329.73,1084.68,-15.40],[0.00696125,0.500946,-0.865433,-0.00544548],[-2,0,0,0],[-681.131,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_51_Fam_2:=[[1370.10,1118.58,-15.94],[0.00667984,0.497115,-0.86764,-0.00570276],[-2,0,0,0],[-732.812,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_51_Fam_3:=[[1261.17,1110.85,-16.59],[0.00768166,0.462325,-0.886663,-0.00497675],[-1,0,0,0],[-577.244,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_51_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_52_Fam_1:=[[1756.43,1282.39,-284.83],[0.00450295,0.505777,-0.862627,-0.00665815],[0,0,0,0],[36.5678,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_52_Fam_2:=[[1681.35,1313.42,-283.90],[0.00380976,0.49949,-0.866294,-0.00546938],[1,0,0,0],[-27.2656,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_52_Fam_3:=[[1717.09,1308.00,-283.32],[0.00517599,0.466761,-0.884341,-0.00684583],[1,0,0,0],[-36.4831,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_52_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_53_Fam_1:=[[1826.14,683.07,-288.07],[0.00635188,0.497752,-0.867291,-0.00295489],[0,0,0,0],[104.084,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_53_Fam_2:=[[1721.53,715.85,-288.08],[0.00499157,0.496966,-0.867746,-0.00399965],[1,0,0,0],[12.2434,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_53_Fam_3:=[[1789.22,709.59,-288.94],[0.00578812,0.463902,-0.885852,-0.00530683],[0,0,0,0],[33.5166,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_53_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_54_Fam_1:=[[2702.51,92.41,-291.37],[0.000228226,-0.504888,0.863151,0.00755281],[0,0,-1,0],[975.068,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_54_Fam_2:=[[2540.05,122.80,-291.18],[0.00121633,-0.500511,0.86571,0.00567605],[0,0,-1,0],[825.275,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_54_Fam_3:=[[2572.40,115.18,-291.68],[0.000662279,0.465236,-0.88516,-0.00678874],[0,0,-1,0],[811.552,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_54_Fam_4:=[[2730.34,153.10,-291.68],[0.000582596,-0.467769,0.883807,0.00877936],[0,0,-1,0],[970.338,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_55_Fam_1:=[[268.28,-116.52,-16.01],[0.00989175,0.499449,-0.866286,-0.000430681],[-1,0,0,0],[977.61,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_55_Fam_2:=[[478.54,-85.01,-17.59],[0.00730179,0.495273,-0.868702,0.00250536],[-1,0,0,0],[753.621,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_55_Fam_3:=[[568.54,-90.45,-17.95],[0.00726668,0.461873,-0.886916,5.61412E-05],[-1,0,0,0],[709.676,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_55_Fam_4:=[[525.94,-54.00,-19.17],[0.00706989,0.464303,-0.885648,0.000579169],[-1,0,0,0],[753.838,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_56_Fam_1:=[[1390.67,489.53,-17.74],[0.00687398,0.498113,-0.867068,-0.00529954],[-2,0,0,0],[-145.002,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_56_Fam_2:=[[1335.48,520.31,-17.18],[0.00667387,0.498791,-0.86669,-0.00336529],[-2,0,0,0],[-99.0909,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_56_Fam_3:=[[1392.20,514.48,-18.00],[0.00710729,0.465236,-0.885149,-0.00395632],[-2,0,0,0],[-109.66,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_56_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_57_Fam_1:=[[1474.86,1086.32,-16.50],[0.00695469,0.501091,-0.86535,-0.00537192],[-2,0,0,0],[-227.983,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_57_Fam_2:=[[1386.65,1117.64,-15.91],[0.00668737,0.49709,-0.867654,-0.00575562],[-2,0,0,0],[-150.986,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_57_Fam_3:=[[1276.70,1109.74,-16.02],[0.00768524,0.462328,-0.886661,-0.00506365],[-1,0,0,0],[4.56282,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_57_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_58_Fam_1:=[[1737.69,1280.99,-284.79],[0.00455285,0.505787,-0.862621,-0.00663299],[0,0,0,0],[618.11,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_58_Fam_2:=[[1697.19,1311.99,-284.77],[0.00380015,0.499486,-0.866296,-0.00546657],[1,0,0,0],[588.219,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_58_Fam_3:=[[1726.90,1306.74,-284.89],[0.00476217,0.466747,-0.884349,-0.00705952],[1,0,0,0],[572.019,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_58_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_59_Fam_1:=[[1838.68,683.98,-288.32],[0.00518523,0.497729,-0.867309,-0.00360982],[0,0,0,0],[716.964,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_59_Fam_2:=[[1725.22,715.37,-289.13],[0.00451436,0.494657,-0.869066,-0.00430058],[1,0,0,0],[615.847,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_59_Fam_3:=[[1816.10,709.10,-289.23],[0.00528331,0.463852,-0.885879,-0.00557268],[0,0,0,0],[660.695,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_59_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_60_Fam_1:=[[2704.27,91.50,-292.19],[0.000229676,-0.504888,0.863151,0.00756568],[0,0,-1,0],[1578.26,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_60_Fam_2:=[[2532.27,120.47,-292.28],[7.01687E-05,-0.500533,0.865692,0.00659218],[0,0,-1,0],[1416.31,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_60_Fam_3:=[[2567.92,115.68,-293.51],[0.000482064,-0.46638,0.884553,0.00736816],[0,0,-1,0],[1407.91,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_60_Fam_4:=[[2749.81,152.93,-293.77],[0.000568324,-0.467769,0.883807,0.00879122],[0,0,-1,0],[1588.86,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_61_Fam_1:=[[253.63,-115.31,-17.66],[0.00986029,0.499508,-0.866253,-0.000406856],[-1,0,0,0],[1593.25,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_61_Fam_2:=[[487.54,-82.81,-17.72],[0.00905124,0.49515,-0.868758,0.00193938],[-1,0,0,0],[1346.65,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_61_Fam_3:=[[589.97,-89.18,-18.24],[0.00839163,0.461785,-0.886951,0.000623567],[-1,0,0,0],[1290.58,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_61_Fam_4:=[[538.32,-52.55,-19.65],[0.00832037,0.464233,-0.885673,0.000558956],[-1,0,0,0],[1340.22,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_62_Fam_1:=[[1417.04,487.51,-19.35],[0.00596105,0.498089,-0.867097,-0.0036255],[-2,0,0,0],[430.332,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_62_Fam_2:=[[1325.38,518.14,-18.24],[0.00541541,0.498842,-0.866675,-0.00120408],[-2,0,0,0],[510.952,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_62_Fam_3:=[[1380.97,513.72,-19.14],[0.00548994,0.465312,-0.885123,-0.00337232],[-2,0,0,0],[501.275,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_62_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_63_Fam_1:=[[1464.92,1085.36,-16.34],[0.00691865,0.501108,-0.86534,-0.00535469],[-2,0,0,0],[383.129,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_63_Fam_2:=[[1380.89,1117.35,-17.01],[0.00671174,0.497091,-0.867653,-0.00576659],[-2,0,0,0],[457.218,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_63_Fam_3:=[[1289.01,1110.38,-17.18],[0.00772643,0.462631,-0.886502,-0.00509532],[-1,0,0,0],[596.755,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_63_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_64_Fam_1:=[[1713.74,1281.21,-284.57],[0.00457695,0.505693,-0.862676,-0.00660777],[1,0,0,0],[1195.17,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_64_Fam_2:=[[1689.73,1312.89,-285.41],[0.00456874,0.499443,-0.866307,-0.00684788],[1,0,0,0],[1182.32,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_64_Fam_3:=[[1726.88,1306.06,-285.02],[0.00476282,0.466735,-0.884356,-0.00704281],[1,0,0,0],[1171.86,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_64_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_65_Fam_1:=[[1839.03,682.87,-289.00],[0.00518089,0.497722,-0.867313,-0.00360994],[0,0,0,0],[1315.58,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_65_Fam_2:=[[1716.11,713.88,-288.15],[0.00430218,0.494637,-0.869074,-0.00511293],[1,0,0,0],[1204.08,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_65_Fam_3:=[[1780.73,707.18,-289.26],[0.00535943,0.463882,-0.885864,-0.00547517],[0,0,0,0],[1223.46,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_65_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_66_Fam_1:=[[2697.49,89.16,-292.88],[0.000156709,-0.49834,0.866948,0.00758643],[0,0,-1,0],[2169.97,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_66_Fam_2:=[[2534.08,121.37,-292.83],[0.000636413,-0.500538,0.865687,0.00688246],[0,0,-1,0],[2018.52,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_66_Fam_3:=[[2562.48,115.12,-293.89],[0.000148329,0.466385,-0.88454,-0.00858781],[0,0,-1,0],[2001.87,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_66_Fam_4:=[[2747.13,150.88,-294.05],[0.0005216,-0.465185,0.885169,0.00879306],[0,0,-1,0],[2187.61,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_67_Fam_1:=[[274.50,-115.84,-17.56],[0.00984181,0.499526,-0.866242,-0.000381146],[-1,0,0,0],[2171.75,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_67_Fam_2:=[[493.70,-83.59,-17.71],[0.00744844,0.495039,-0.868837,0.00145293],[-1,0,0,0],[1938.45,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_67_Fam_3:=[[606.84,-90.94,-18.33],[0.00798658,0.461738,-0.88698,0.00037655],[-1,0,0,0],[1873.39,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_67_Fam_4:=[[522.67,-55.82,-19.72],[0.00838679,0.464143,-0.88572,0.000491553],[-1,0,0,0],[1956.87,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_68_Fam_1:=[[1443.92,487.54,-19.11],[0.00593325,0.498086,-0.867099,-0.00367665],[-2,0,0,0],[1001.87,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_68_Fam_2:=[[1323.25,516.58,-18.94],[0.00534781,0.500703,-0.865601,-0.00117763],[-2,0,0,0],[1112.89,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_68_Fam_3:=[[1384.50,513.74,-18.40],[0.00583252,0.465346,-0.8851,-0.00407207],[-2,0,0,0],[1097.35,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_68_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_69_Fam_1:=[[1447.86,1084.24,-16.68],[0.00597419,0.49808,-0.867102,-0.00368806],[-2,0,0,0],[1001.87,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_69_Fam_2:=[[1383.63,1117.52,-15.87],[0.00620104,0.49713,-0.867631,-0.00615661],[-2,0,0,0],[1056.02,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_69_Fam_3:=[[1302.57,1108.99,-16.68],[0.00703368,0.462767,-0.886429,-0.00623371],[-2,0,0,0],[1182.05,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_69_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_70_Fam_1:=[[1715.00,1278.50,-283.30],[0.0035712,0.50572,-0.86266,-0.00718151],[1,0,0,0],[1794.99,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_70_Fam_2:=[[1690.21,1309.38,-282.45],[0.00455332,0.499421,-0.86632,-0.00684586],[1,0,0,0],[1781.39,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_70_Fam_3:=[[1751.83,1305.54,-283.46],[0.00529163,0.469325,-0.882972,-0.00812284],[0,0,0,0],[1799.78,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_70_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_71_Fam_1:=[[1848.87,682.27,-289.05],[0.00333715,0.497711,-0.867327,-0.00398678],[0,0,0,0],[1929.78,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_71_Fam_2:=[[1744.89,712.86,-288.63],[0.00227586,0.494698,-0.869053,-0.00391225],[0,0,0,0],[1838.89,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_71_Fam_3:=[[1769.59,705.13,-289.13],[0.00326351,0.463835,-0.885897,-0.00573036],[0,0,0,0],[1817.41,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_71_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_72_Fam_1:=[[2717.85,90.90,-290.36],[0.00080742,0.49833,-0.866977,-0.00413346],[0,0,-1,0],[2796.2,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_72_Fam_2:=[[2547.59,122.61,-290.90],[0.000258218,-0.500536,0.8657,0.00523468],[0,0,-1,0],[2636.88,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_72_Fam_3:=[[2568.30,117.49,-292.60],[0.00113376,0.46639,-0.884549,-0.00714313],[0,0,-1,0],[2611.91,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_72_Fam_4:=[[2752.77,151.37,-293.44],[0.000161778,0.4652,-0.885183,-0.00637692],[0,0,-1,0],[2796.03,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_73_Fam_1:=[[253.86,-115.08,-16.92],[0.0098269,0.499625,-0.866185,-0.000549819],[-1,0,0,0],[2790.38,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_73_Fam_2:=[[492.53,-83.12,-17.50],[0.00684724,0.494942,-0.868898,0.00103433],[-1,0,0,0],[2538.34,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_73_Fam_3:=[[615.52,-89.29,-19.66],[0.00712448,0.461619,-0.887047,-0.00200042],[-1,0,0,0],[2462.11,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_73_Fam_4:=[[509.06,-52.54,-20.86],[0.00734599,0.461401,-0.887161,-0.000109284],[-1,0,0,0],[2570.23,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_74_Fam_1:=[[1022.77,485.55,-18.02],[0.00661965,0.499573,-0.866242,-0.00244811],[-1,0,0,0],[2024.15,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_74_Fam_2:=[[1322.78,518.37,-17.23],[0.00740316,0.497085,-0.867657,-0.00477183],[-2,0,0,0],[1716.91,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_74_Fam_3:=[[1367.43,512.80,-18.28],[0.00606186,0.465396,-0.88507,-0.00454774],[-2,0,0,0],[1716.2,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_74_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_75_Fam_1:=[[1021.59,1083.86,-15.01],[0.00664117,0.499551,-0.866255,-0.00247433],[-1,0,0,0],[2024.15,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_75_Fam_2:=[[1388.55,1117.34,-15.62],[0.00680674,0.497126,-0.867643,-0.003709],[-2,0,0,0],[1648.96,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_75_Fam_3:=[[1301.42,1108.60,-15.41],[0.00811666,0.46245,-0.886598,-0.00423385],[-2,0,0,0],[1781.82,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_75_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_76_Fam_1:=[[1714.33,1279.75,-284.42],[0.00297869,0.502165,-0.864733,-0.00757903],[0,0,0,0],[2394.9,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_76_Fam_2:=[[1690.15,1310.92,-283.39],[0.00353124,0.499405,-0.86633,-0.00740701],[1,0,0,0],[2380.32,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_76_Fam_3:=[[1754.72,1301.26,-285.77],[0.00567527,0.466803,-0.884302,-0.0084763],[0,0,0,0],[2400.06,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_76_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_77_Fam_1:=[[1860.32,682.19,-289.24],[0.00665999,0.497689,-0.867304,-0.00663946],[0,0,0,0],[2540.11,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_77_Fam_2:=[[1736.57,711.92,-290.08],[0.00396581,0.494665,-0.869065,-0.00401577],[1,0,0,0],[2429.15,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_77_Fam_3:=[[1764.82,706.36,-289.67],[0.00483136,0.461431,-0.887146,-0.00540903],[0,0,0,0],[2408.8,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_77_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_78_Fam_1:=[[967.61,76.49,-291.39],[0.00751337,0.499319,-0.866384,0.00143592],[1,0,0,0],[1649.18,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_78_Fam_2:=[[914.98,109.47,-291.65],[0.00579369,0.496271,-0.868148,0.000347338],[1,0,0,0],[1607.84,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_78_Fam_3:=[[988.21,101.84,-292.05],[0.00658989,0.462047,-0.88683,-0.000808939],[1,0,0,0],[1635.58,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_78_Fam_4:=[[957.20,136.75,-292.46],[0.00619087,0.46359,-0.886028,-0.000358125],[1,0,0,0],[1604.02,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_79_Fam_1:=[[2238.99,-106.78,-20.39],[0.00190352,0.499456,-0.86632,-0.00535927],[-2,0,-1,0],[1411.77,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_79_Fam_2:=[[2035.53,-78.41,-20.41],[0.00320184,0.494916,-0.86892,-0.00509002],[-2,0,-1,0],[1601.62,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_79_Fam_3:=[[2078.62,-84.16,-21.48],[0.00306507,0.461601,-0.887068,-0.00497637],[-2,0,0,0],[1606.55,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_79_Fam_4:=[[2079.77,-47.74,-22.00],[0.00220055,0.46279,-0.886442,-0.00637948],[-2,0,0,0],[1603.63,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_80_Fam_1:=[[1623.83,488.08,-19.14],[0.00470448,0.499494,-0.866296,-0.00367224],[-2,0,0,0],[2024.15,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_80_Fam_2:=[[1320.24,516.25,-20.22],[0.00529607,0.497148,-0.867642,-0.00363286],[-2,0,0,0],[2317.96,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_80_Fam_3:=[[1355.35,510.79,-19.22],[0.00558321,0.465506,-0.885014,-0.00473045],[-2,0,0,0],[2329.48,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_80_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_81_Fam_1:=[[1622.01,1085.65,-16.59],[0.00516931,0.499532,-0.866273,-0.00336584],[-2,0,0,0],[2024.15,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_81_Fam_2:=[[1396.57,1115.54,-16.41],[0.00505515,0.49705,-0.867694,-0.00478781],[-2,0,0,0],[2240.34,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_81_Fam_3:=[[1327.27,1109.12,-16.75],[0.00814692,0.464326,-0.885589,-0.00808557],[-2,0,0,0],[2358.37,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_81_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_82_Fam_1:=[[1514.79,1276.73,-283.34],[0.00584167,0.502156,-0.864736,-0.00594749],[1,0,0,0],[2794.9,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_82_Fam_2:=[[1507.52,1307.20,-283.41],[0.00564579,0.498065,-0.867092,-0.00703485],[1,0,0,0],[2797.97,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_82_Fam_3:=[[1553.88,1301.49,-284.24],[0.00576875,0.466783,-0.884313,-0.00841483],[1,0,0,0],[2799.14,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_82_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_83_Fam_1:=[[1516.14,678.98,-289.79],[0.00496289,0.497712,-0.867326,-0.00204902],[1,0,0,0],[2796.07,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_83_Fam_2:=[[1506.71,710.91,-289.92],[0.00461122,0.494684,-0.869057,-0.00233173],[1,0,0,0],[2798.4,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_83_Fam_3:=[[1552.89,705.40,-290.34],[0.00497393,0.461462,-0.887135,-0.00432402],[1,0,0,0],[2799.2,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_83_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_84_Fam_1:=[[932.29,74.76,-291.09],[0.00752397,0.499336,-0.866375,0.00142414],[1,0,0,0],[2211.37,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_84_Fam_2:=[[911.82,106.66,-291.99],[0.00632518,0.496278,-0.86814,0.000621691],[1,0,0,0],[2203.16,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_84_Fam_3:=[[968.88,100.56,-293.00],[0.0071194,0.462065,-0.886817,-0.000569375],[1,0,0,0],[2215.26,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_84_Fam_4:=[[959.83,134.89,-292.38],[0.00671206,0.463607,-0.886015,-0.000100238],[1,0,0,0],[2203.68,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_85_Fam_1:=[[2223.02,-105.66,-20.03],[0.00189351,0.499455,-0.866321,-0.00534023],[-2,0,-1,0],[2024.14,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_85_Fam_2:=[[2048.15,-77.83,-20.09],[0.00186766,0.494945,-0.868914,-0.00372234],[-2,0,-1,0],[2189.94,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_85_Fam_3:=[[2081.47,-82.25,-20.76],[0.00169985,0.461593,-0.887075,-0.00500566],[-2,0,0,0],[2201.1,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_85_Fam_4:=[[2072.90,-48.20,-21.16],[0.0015771,0.462816,-0.886438,-0.00511141],[-2,0,0,0],[2207.94,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_86_Fam_1:=[[1456.99,487.17,-18.40],[0.00542298,0.499679,-0.866176,-0.00537788],[-2,0,0,0],[2790.38,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_86_Fam_2:=[[1438.93,518.59,-17.67],[0.00452773,0.500057,-0.865971,-0.0039542],[-2,0,0,0],[2796.93,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_86_Fam_3:=[[1484.48,511.16,-17.92],[0.00432284,0.465657,-0.884943,-0.00455232],[-2,0,0,0],[2796.91,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_86_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_87_Fam_1:=[[1459.52,1085.41,-15.43],[0.00538691,0.499697,-0.866167,-0.00535429],[-2,0,0,0],[2790.37,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_87_Fam_2:=[[1441.66,1117.97,-15.26],[0.00617079,0.497044,-0.867693,-0.0041996],[-2,0,0,0],[2796.9,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_87_Fam_3:=[[1486.03,1109.29,-16.29],[0.00701914,0.4657,-0.884895,-0.00590653],[-2,0,0,0],[2796.86,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_87_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_88_Fam_1:=[[912.97,1271.98,-282.81],[0.00635965,0.50218,-0.864721,-0.00566336],[1,0,0,0],[2794.89,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_88_Fam_2:=[[908.09,1303.54,-282.68],[0.00613066,0.498057,-0.867096,-0.00673529],[1,0,0,0],[2797.97,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_88_Fam_3:=[[953.35,1296.57,-283.58],[0.00670724,0.466774,-0.884316,-0.00789649],[1,0,0,0],[2799.14,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_88_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_89_Fam_1:=[[918.01,672.39,-287.81],[0.00797568,0.501086,-0.86536,-0.000315002],[1,0,0,0],[2796.15,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_89_Fam_2:=[[908.87,704.40,-288.27],[0.00670861,0.496213,-0.868174,-0.00117035],[1,0,0,0],[2798.39,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_89_Fam_3:=[[955.57,699.49,-287.96],[0.00759459,0.466772,-0.88434,-0.00305163],[1,0,0,0],[2799.19,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_89_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_90_Fam_1:=[[917.89,75.41,-289.98],[0.00955705,0.495735,-0.86842,0.000715146],[1,0,0,0],[2796.18,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_90_Fam_2:=[[906.67,109.24,-290.66],[0.00673379,0.49627,-0.868142,-5.90107E-05],[1,0,0,0],[2797.36,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_90_Fam_3:=[[953.39,103.09,-291.71],[0.00712131,0.46205,-0.886825,-0.000532414],[1,0,0,0],[2798.39,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_90_Fam_4:=[[954.00,137.67,-291.16],[0.00788114,0.462337,-0.886668,-0.00104045],[1,0,0,0],[2798.25,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_91_Fam_1:=[[2059.32,-108.88,-18.67],[0.00281817,0.499721,-0.86617,-0.0045295],[-2,0,-1,0],[2790.36,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_91_Fam_2:=[[2038.74,-77.03,-19.28],[0.00183314,0.494941,-0.868916,-0.00370894],[-2,0,-1,0],[2799.84,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_91_Fam_3:=[[2082.87,-83.97,-19.94],[0.00178658,0.4616,-0.887072,-0.00493655],[-2,0,0,0],[2799.23,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_91_Fam_4:=[[2087.92,-49.00,-20.97],[0.00246184,0.46284,-0.886426,-0.00460974],[-2,0,0,0],[2795.08,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_92_Fam_1:=[[2058.73,487.69,-17.47],[0.00284994,0.499711,-0.866175,-0.00454864],[-2,0,0,0],[2790.36,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_92_Fam_2:=[[2041.68,520.20,-17.39],[0.00183459,0.500068,-0.865966,-0.00545702],[-2,0,0,0],[2796.91,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_92_Fam_3:=[[2084.92,512.74,-18.14],[0.00279018,0.460972,-0.887393,-0.00538197],[-2,0,0,0],[2796.9,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_92_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_93_Fam_1:=[[2058.55,1086.09,-16.50],[0.00427667,0.499691,-0.866165,-0.00697817],[-2,0,0,0],[2790.37,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_93_Fam_2:=[[2041.26,1116.53,-16.48],[0.00551487,0.497025,-0.867691,-0.00688953],[-2,0,0,0],[2796.92,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_93_Fam_3:=[[2085.97,1110.57,-18.46],[0.00474862,0.465657,-0.884923,-0.00716437],[-2,0,0,0],[2796.86,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_93_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_94_Fam_1:=[[315.29,1269.06,-280.96],[0.00750305,0.501859,-0.864916,-0.00132623],[1,0,0,0],[2794.89,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_94_Fam_2:=[[309.05,1298.77,-281.26],[0.00844899,0.498038,-0.867105,-0.00403431],[1,0,0,0],[2797.98,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_94_Fam_3:=[[354.18,1293.70,-281.84],[0.00882582,0.466788,-0.884305,-0.0059183],[1,0,0,0],[2799.17,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_94_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_95_Fam_1:=[[320.89,670.24,-285.72],[0.00960383,0.503453,-0.863969,0.000619881],[1,0,0,0],[2796.17,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_95_Fam_2:=[[309.95,701.36,-285.59],[0.0100835,0.496224,-0.868136,0.000749127],[1,0,0,0],[2798.39,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_95_Fam_3:=[[359.45,697.24,-285.82],[0.00955408,0.466805,-0.884307,-0.00154336],[1,0,0,0],[2799.17,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_95_Fam_4:=[[249.32,680.96,-313.11],[0.00654749,0.496615,-0.867937,0.00386014],[1,0,0,0],[2749.71,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_96_Fam_1:=[[321.05,70.42,-287.44],[0.00959522,0.503439,-0.863977,0.000617132],[1,0,0,0],[2796.18,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_96_Fam_2:=[[310.86,101.07,-287.81],[0.00725321,0.500542,-0.865676,0.00319617],[1,0,0,0],[2797.34,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_96_Fam_3:=[[357.60,96.42,-288.97],[0.00792855,0.466451,-0.884511,0.000824655],[1,0,0,0],[2798.39,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_96_Fam_4:=[[358.72,131.00,-287.88],[0.00795447,0.469562,-0.882863,0.00136501],[1,0,0,0],[2798.24,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_97_Fam_1:=[[2662.02,-105.46,-18.32],[0.00150253,-0.504002,0.86368,0.00603414],[-2,0,-1,0],[2790.35,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_97_Fam_2:=[[2640.34,-74.72,-17.95],[0.00128119,-0.494936,0.868911,0.00544663],[-2,0,-1,0],[2799.84,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_97_Fam_3:=[[2684.68,-81.17,-17.79],[0.000352358,-0.461595,0.88707,0.00598164],[-2,0,-1,0],[2799.22,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_97_Fam_4:=[[2690.31,-45.48,-19.51],[0.000663623,-0.462826,0.886431,0.00555547],[-2,0,-1,0],[2795.06,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_98_Fam_1:=[[2660.35,490.99,-17.03],[0.00137896,0.50402,-0.863665,-0.00664567],[-2,0,-1,0],[2790.32,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_98_Fam_2:=[[2641.95,522.01,-16.81],[0.000822535,0.50006,-0.865969,-0.00600634],[-2,0,-1,0],[2796.93,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_98_Fam_3:=[[2687.42,517.04,-16.45],[0.00151833,0.465557,-0.88499,-0.00678621],[-2,0,-1,0],[2796.9,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_98_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_99_Fam_1:=[[2660.74,1088.68,-16],[0.00398024,0.504048,-0.863651,-0.00502508],[-2,0,-1,0],[2790.31,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_99_Fam_2:=[[2639.70,1118.52,-15.75],[0.00151818,0.500054,-0.865962,-0.00725569],[-2,0,0,0],[2796.94,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_99_Fam_3:=[[2687.29,1112.94,-16.97],[0.00276506,0.465646,-0.884928,-0.00824854],[-2,0,0,0],[2796.86,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_99_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]]; 
    CONST robtarget pFrente_Esteira_Entrada:=[[6.08,-250.88,883.94],[0.0100881,0.496647,-0.867864,0.00721933],[1,0,1,0],[2772.08,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pFrente_Esteira_Saida:=[[3007.43,-529.22,1142.44],[0.00765108,-0.508049,0.861227,0.0107125],[-2,0,-1,0],[2780.81,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pHome_Position:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pPosição_Trabalho:=[[1434.02,88.38,798.73],[0.0242018,-0.101336,0.994552,0.00339791],[0,0,-1,0],[2588.4,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    PERS jointtarget jCalib:=[[0,0,0,0,0,0],[0,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    CONST pos pOfst_Acima_Buffer:=[0,0,900];
    CONST pos pOfst_Acima_Buffer_Sem_Produto:=[0,0,600];
    CONST pos pOfst_Acima_Berço_Buffer:=[0,0,300];
    CONST pos pOfst_Aprox_Pega_Depos_Buffer:=[0,0,30];
    CONST pos pOfst_Aprox_Final_Depos:=[0,0,5];
    CONST pos pOfst_Aprox_Inicial_Pega:=[0,0,0];
    CONST pos pOfst_Aprox_Berço_Est_Entrada:=[0,0,300];
    CONST pos pOfst_Aprox_PegaEsteiraEntrada:=[0,0,50];
    CONST pos pOfst_Aprox_Berço_Est_Saida:=[0,0,500];
    CONST pos pOfst_Aprox_Depos_Est_Saida:=[0,0,50];
    CONST pos pOfst_ZY_Familia_3:=[0,10,40];
    CONST pos pOfst_Z_Familia_3:=[0,0,40];
    CONST pos pOfst_ZY_Familia_4:=[-4,-12,45];
    CONST pos pOfst_ZY_Est_Sai_Familia_4:=[4,-15,45];
    CONST pos pOfst_Z_Familia_4:=[0,0,45];
    
    VAR bool timeout_av;
    VAR bool timeout_rc;
    
    VAR robtarget pPosição_Atual:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR robtarget pPosição_Desejada:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR robtarget pPosição_Final_Est_Entrada:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR robtarget pPosição_Final_Est_Saida:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR robtarget pPosição_Final_Buffer:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR robtarget pMov_Pega_Esteira_Entrada:=[[-892.63,-9.52,114.94],[0.00890601,0.506032,-0.862464,0.00290069],[1,0,1,0],[2789.87,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR robtarget pMov_Depos_Esteira_Saída:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR robtarget pMov_Pega_Depos_Buffer:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR robtarget pMov_Posicionar_Home:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    VAR num nPos_Buffer;
    VAR num nNum_Fam;
    
    CONST num nAcc_Mov_Pega_Depos := 50;
    CONST num nRamp_Mov_Pega_Depos := 40 ;
    CONST num nAcc_Mov_Geral := 80;
    CONST num nRamp_Mov_Geral := 40;
    CONST num nSens_Colid_Mov_Geral := 200;
    CONST num nSens_Colid_Aprox := 80;
    CONST num nLimite_Home := 20;
    
    VAR num nAux_Limite_Max;
    VAR num nAux_Limite_Low;
    
    PERS tooldata tGarra:=[TRUE,[[0,0,622.752],[1,0,0,0]],[65,[482,30,70],[1,0,0,0],0,0,0]];
	PERS loaddata lFamilia_1:=[170,[1,1,1],[1,0,0,0],0,0,0];
	PERS loaddata lFamilia_2:=[228,[1,1,1],[1,0,0,0],0,0,0];
	PERS loaddata lFamilia_3:=[260,[1,1,1],[1,0,0,0],0,0,0];
	PERS loaddata lFamilia_4:=[282,[1,1,1],[1,0,0,0],0,0,0];
    
    CONST speeddata sMov_Geral_Sem_Produto := [1100, 100, 1700, 100];
    CONST speeddata sMov_Geral_Com_Produto := [800, 100, 1700, 100];
    CONST speeddata sMov_Aprox_Berço_Sem_Produto := [700, 100, 2000, 100];
    CONST speeddata sMov_Aprox_Berço_Com_Produto := [400, 100, 2000, 100];
    CONST speeddata SMov_Fina := [200, 100, 600, 100];
    CONST speeddata SMov_SuperFina := [10, 100, 50, 100];
    CONST speeddata SMov_Levanta_Com_Produto := [100, 100, 300, 100];
	
    CONST jointtarget jposRecolhidoEsteira:=[[153.109,-47.1242,51.2209,1.422,85.748,93.2914],[2772.08,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST jointtarget jposRecolhidoEsteiraSaida:=[[-153.109,-47.1241,51.2209,1.42205,85.748,-28.8738],[2772.09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	
    VAR bool timeout_av1:=FALSE;
	VAR bool timeout_av2:=FALSE;
	VAR bool timeout_av3:=FALSE;
	VAR bool timeout_av4:=FALSE;
	VAR bool timeout_rc1:=FALSE;
	VAR bool timeout_rc2:=FALSE;
	VAR bool timeout_rc3:=FALSE;
	VAR bool timeout_rc4:=FALSE;
	
    !Pontos de Afericao..
    CONST robtarget pCheck_00:=[[1572.55,-92.11,980.74],[0.00876174,-0.689037,-0.72434,-0.0219585],[-1,0,0,0],[255.75,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pCheck_01:=[[1572.56,-92.11,980.76],[0.00875702,-0.689037,-0.72434,-0.0219629],[-1,0,0,0],[-216.075,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pCheck_02:=[[1773.31,-1245.87,871.39],[0.00879832,0.40518,0.913936,0.0217377],[-1,0,0,0],[-1467.96,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pCheck_03:=[[0,0,0],[1,0,0,0],[0,0,0,0],[9E9,9E9,9E9,9E9,9E9,9E9]];
    CONST robtarget pCheck_04:=[[0,0,0],[1,0,0,0],[0,0,0,0],[9E9,9E9,9E9,9E9,9E9,9E9]];
    CONST robtarget pCheck_05:=[[0,0,0],[1,0,0,0],[0,0,0,0],[9E9,9E9,9E9,9E9,9E9,9E9]];
    CONST robtarget pCheck_06:=[[0,0,0],[1,0,0,0],[0,0,0,0],[9E9,9E9,9E9,9E9,9E9,9E9]];
    CONST robtarget pCheck_07:=[[0,0,0],[1,0,0,0],[0,0,0,0],[9E9,9E9,9E9,9E9,9E9,9E9]];
    CONST robtarget pCheck_08:=[[0,0,0],[1,0,0,0],[0,0,0,0],[9E9,9E9,9E9,9E9,9E9,9E9]];
    CONST robtarget pCheck_09:=[[0,0,0],[1,0,0,0],[0,0,0,0],[9E9,9E9,9E9,9E9,9E9,9E9]];
    CONST robtarget pCheck:=[[1898.81,-1954.60,334.06],[0.00879221,0.405181,0.913936,0.0217398],[-1,0,0,0],[-2141.35,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget RT_AuxFrames:=[[0,0,300],[0,0.881412,-0.472319,0],[-2,0,-1,0],[2800,9E+09,9E+09,9E+09,9E+09,9E+09]];
    TASK PERS wobjdata FRAME_BufferA:=[FALSE,TRUE,"",[[-1256.49,1438.58,160.877],[0.999979,0.000183924,0.000269214,0.006496]],[[0,0,0],[1,0,0,0]]];
    TASK PERS wobjdata FRAME_PalletEntrada:=[FALSE,TRUE,"",[[-2197.3,1274.56,425.547],[0.701353,0.0039156,-0.00227027,0.712799]],[[0,0,0],[1,0,0,0]]];
    TASK PERS wobjdata FRAME_PalletSaida:=[FALSE,TRUE,"",[[-2365.58,-1158.69,461.896],[0.701359,0.00301904,0.000504585,0.712801]],[[0,0,0],[1,0,0,0]]];
    
    
    !Criado aqui para facilitar, depois movimentar para o final
    !*****************************************************************************************************************************
    !FUNÇÕES EXTRAS: Teste de Posições no Buffer (Área "A" - à esquerda do robô quando de costas para as esteiras )
    !*****************************************************************************************************************************
    PROC EXTRAS_TesteBufferAreaA()
        !Este programa irá enviar o robô à partir de home, index-por-index (de trás para frente) relacionados à área "A" do Buffer
        
        VAR Num i;
        VAR Num f;
        
        VAR robtarget RT_PosicaoBuffer;
        VAR robtarget RT_PosicaoAuxiliar;
        VAR jointtarget RJ_PosicaoAuxiliar;
        
        !Primeiramente somente a família 1 (mais leve)
        f := 1;
        
        !Inicializa Parametros
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        motionsup \On \TuneValue:= nSens_Colid_Mov_Geral;
        
        !Está em Home?
        MoveJ pPosição_Trabalho, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=wobj0;
        
        !Vai para centro de massa
        !Ponto intermediario centro de massa
        RT_PosicaoAuxiliar := pBuffer_Pos_96_Fam_1;
	    RJ_PosicaoAuxiliar := CalcJointT(RT_PosicaoAuxiliar, tGarra \WObj:=wBuffer_Esq);
        RJ_PosicaoAuxiliar.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        RJ_PosicaoAuxiliar.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        RJ_PosicaoAuxiliar.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        RJ_PosicaoAuxiliar.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;

        MoveAbsJ RJ_PosicaoAuxiliar, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Esq; 
        
        !index-por-index (de trás para frente)
        FOR i FROM 99 TO 1 STEP -1 DO

            !Verifica se index corresponde à área "A"
            !Esta função somente faz posições da área "A"
            IF GetAreaBuffer(i) <> "A" THEN
                Break;
            ENDIF
            
            !Lê o valor da posição através da descrição da tag
            RT_PosicaoBuffer := GetPosicaoBuffer(i, f);
            
            !Lê qual o frame da posição atual
            wOD_FrameAtual := GetWObjBuffer(i);
            
            !Vai para posição acima do local de deposita
            RT_PosicaoAuxiliar := RT_PosicaoBuffer;
            RT_PosicaoAuxiliar.trans := RT_PosicaoAuxiliar.trans + pOfst_Acima_Buffer;
            
            MoveL RT_PosicaoAuxiliar, sMov_Geral_Com_Produto, fine, tGarra \WObj:=wOD_FrameAtual;
        
            !Verifica se já existe peça na posição selecionada
            GARRA_VerificarLaser;

            !Ponto acima do berço
            RT_PosicaoAuxiliar := RT_PosicaoBuffer;
            RT_PosicaoAuxiliar.trans := RT_PosicaoAuxiliar.trans + pOfst_Acima_Berço_Buffer;
            
            MoveL RT_PosicaoAuxiliar, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=wOD_FrameAtual;
        
            !Ponto de aproximação
            AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
            motionsup \On \TuneValue:= nSens_Colid_Aprox;
            
            RT_PosicaoAuxiliar := RT_PosicaoBuffer;
            RT_PosicaoAuxiliar.trans := RT_PosicaoAuxiliar.trans + pOfst_Aprox_Pega_Depos_Buffer;
            
            MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=wOD_FrameAtual;
            
            RT_PosicaoAuxiliar := RT_PosicaoBuffer;
            RT_PosicaoAuxiliar.trans := RT_PosicaoAuxiliar.trans + pOfst_Aprox_Final_Depos;
            
            MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wOD_FrameAtual;
            
            !Avisa usuário
            TPErase;
            TPWrite "Robô na Posição Buffer " + NumToStr(i, 0) + "para Família " + NumToStr(f, 0);
            Stop;
            
            !Usuário deu sequência: Sobe Garra e segue para a próxima
            RT_PosicaoAuxiliar := RT_PosicaoBuffer;
            RT_PosicaoAuxiliar.trans := RT_PosicaoAuxiliar.trans + pOfst_Acima_Berço_Buffer;
            
            MoveL RT_PosicaoAuxiliar, SMov_Levanta_Com_Produto, z80, tGarra \WObj:=wOD_FrameAtual;
            
            
        ENDFOR
       
    ENDPROC
    
    
    !*************************************************************************************************************************
    !Main: Rotina Principal
    !*************************************************************************************************************************
	PROC A_PI1800_RotinaPrincipal()
		!Inicio de Rotina Principal
        
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        motionsup \On \TuneValue:= nSens_Colid_Mov_Geral;
        
        !Vai para posição de trabalho
        !pPosição_Atual := CRobT(\Tool:=tGarra \WObj:=wobj0);
        !pPosição_Atual.trans.z := 1000;
        !MoveL pPosição_Atual, SMov_Fina, fine, tGarra \WObj:=wobj0;
        !MoveJ pPosição_Trabalho, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=wobj0;      
    verif: 
        pPosição_Atual := CRobT(\Tool:=tGarra \WObj:=wobj0);
        
    verif_x:
        nAux_Limite_Low := pPosição_Atual.trans.x - nLimite_Home;
        nAux_Limite_Max := pPosição_Atual.trans.x + nLimite_Home;
        IF (pPosição_Trabalho.trans.x > nAux_Limite_Low and pPosição_Trabalho.trans.x < nAux_Limite_Max) THEN
            GOTO verif_y;
        ELSE
            SetDO PN_OUT_Pos_Home_Manual, 1;
            TPErase;
            TPWrite "Posicione Robô em Home Position Manualmente";
            Stop;
            GOTO verif;
        ENDIF
        
    verif_y:
        nAux_Limite_Low := pPosição_Atual.trans.y - nLimite_Home;
        nAux_Limite_Max := pPosição_Atual.trans.y + nLimite_Home;
        IF (pPosição_Trabalho.trans.y > nAux_Limite_Low and pPosição_Trabalho.trans.y < nAux_Limite_Max) THEN
            GOTO verif_z;
        ELSE
            SetDO PN_OUT_Pos_Home_Manual, 1;
            TPErase;
            TPWrite "Posicione Robô em Home Position Manualmente";
            Stop;
            GOTO verif;
        ENDIF
        
    verif_z:
        nAux_Limite_Low := pPosição_Atual.trans.z - nLimite_Home;
        nAux_Limite_Max := pPosição_Atual.trans.z + nLimite_Home;
        IF (pPosição_Trabalho.trans.z > nAux_Limite_Low and pPosição_Trabalho.trans.z < nAux_Limite_Max) THEN
            GOTO init;
        ELSE
            SetDO PN_OUT_Pos_Home_Manual, 1;
            TPErase;
            TPWrite "Posicione Robô em Home Position Manualmente";
            Stop;
            GOTO verif;
        ENDIF
        
    init:
             
        !Aguarda clp enviar número de programa
        WaitGI PN_IN_Numero_Programa \NOTEQ, 0;
        
        ResetFlags;
        
        !Verifica qual rotina executar
        IF GInput (PN_IN_Numero_Programa) = 1 THEN
            !Home_Position;
            GOTO final;
        ENDIF
        
        IF GInput (PN_IN_Numero_Programa) = 2 THEN
            GARRA_VerificarGarraVazia;
            PegaEsteiraEntrada;
            GOTO final;
        ENDIF
        
        IF GInput (PN_IN_Numero_Programa) = 3 THEN 
            GARRA_VerificarLaser;
            PegaDepositaBuffer;
            GOTO final;
        ENDIF
        
        IF GInput (PN_IN_Numero_Programa) = 4 THEN
            GARRA_VerificarGarraVazia;
            PegaDepositaBuffer;
            GOTO final;
        ENDIF
        
        IF GInput (PN_IN_Numero_Programa) = 5 THEN
            DepositaEsteiraSaida;
            MoveJ pPosição_Trabalho, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=wobj0; 
            GOTO final;
        ENDIF    
  
    final:
        !Verifica se parada solicitada
        IF PN_IN_Parada_Solicitada = 1 THEN
            MoveJ pPosição_Trabalho, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=wobj0;
            GOTO fim;
        ENDIF
        
        GOTO init;
         
    fim:
	ENDPROC
	
    !*************************************************************************************************************************
    !Pega Redutor na Esteira de Entrada de Peças
    !*************************************************************************************************************************
    PROC PegaEsteiraEntrada()
		!Inicio de ciclo de pega peça na esteira de entrada
        
        !Aguarda número de família diferente de 0
        WaitGI PN_IN_Numero_Familia \NOTEQ, 0;
        
        !Verifica se a garra está vazia
        GARRA_VerificarGarraVazia;
        
        !Abre Garra
        GARRA_DestravarProduto;
        GARRA_AbrirGarra;
        
        !Vai para posição em frente à esteira
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        MoveJ pFrente_Esteira_Entrada, sMov_Geral_Sem_Produto, z150, tGarra \WObj:=wBuffer_Esq;
        
    
        !Verifica qual família selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 GOTO Fam_1;
        IF GInput (PN_IN_Numero_Familia) = 2 GOTO Fam_2;
        IF GInput (PN_IN_Numero_Familia) = 3 GOTO Fam_3;
        IF GInput (PN_IN_Numero_Familia) = 4 GOTO Fam_4;
        
    Fam_1:
    !Família 1
        
        !Carrega posição correspondente à familia selecionada
        pPosição_Final_Est_Entrada := pPega_Esteira_Entrada_Fam_1;
        GOTO movimento_1_2;
        
    Fam_2:
    !Família 2
        
        !Carrega posição correspondente à familia selecionada
        pPosição_Final_Est_Entrada := pPega_Esteira_Entrada_Fam_2;
        GOTO movimento_1_2;
    
    Fam_3:
    !Família 3
        
        !Carrega posição correspondente à familia selecionada
        pPosição_Final_Est_Entrada := pPega_Esteira_Entrada_Fam_3;
        GOTO movimento_3;  
        
    Fam_4:
    !Família 4
        
        !Carrega posição correspondente à familia selecionada
        pPosição_Final_Est_Entrada := pPega_Esteira_Entrada_Fam_4;
        GOTO movimento_4;     
        
    movimento_1_2:
    
        !Aproxima do Berço
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + pOfst_Aprox_Berço_Est_Entrada;
        MoveJ pMov_Pega_Esteira_Entrada, sMov_Aprox_Berço_Sem_Produto, z80, tGarra \WObj:=wBuffer_Esq;
          
        !Aproxima do produto
        motionsup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + pOfst_Aprox_PegaEsteiraEntrada;
        MoveL pMov_Pega_Esteira_Entrada, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=wBuffer_Esq;
        
        !Ponto de Pega
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        AccSet 50, 25;
        MoveL pMov_Pega_Esteira_Entrada, SMov_Fina, fine, tGarra \WObj:=wBuffer_Esq;
        
        !Pega Produto
        GARRA_FecharGarra;
        
        TEST nNum_Fam
          CASE 1:
            GripLoad lFamilia_1;
          CASE 2:
            GripLoad lFamilia_2;
          DEFAULT:
            EXIT;
        ENDTEST
                
        !Sai do Berço
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + pOfst_Aprox_Inicial_Pega;
        MoveL pMov_Pega_Esteira_Entrada, SMov_Levanta_Com_Produto, z1, tGarra \WObj:=wBuffer_Esq;
        
        !Trava o produto
        GARRA_TravarProduto;
        
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + pOfst_Aprox_PegaEsteiraEntrada;
        MoveL pMov_Pega_Esteira_Entrada, SMov_Levanta_Com_Produto, z50, tGarra \WObj:=wBuffer_Esq;
              
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + pOfst_Aprox_Berço_Est_Entrada;
        MoveL pMov_Pega_Esteira_Entrada, SMov_Levanta_Com_Produto, z80, tGarra \WObj:=wBuffer_Esq;
        
        GOTO sai_entrada;
        
    movimento_3:
        
        !Aproxima do Berço
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + pOfst_Aprox_Berço_Est_Entrada;
        MoveJ pMov_Pega_Esteira_Entrada, sMov_Aprox_Berço_Sem_Produto, z80, tGarra \WObj:=wBuffer_Esq;
          
        !Aproxima do produto
        motionsup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + pOfst_Aprox_PegaEsteiraEntrada;
        MoveL pMov_Pega_Esteira_Entrada, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=wBuffer_Esq;
        
        !Ponto de Pega
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        MoveL pMov_Pega_Esteira_Entrada, SMov_Fina, fine, tGarra \WObj:=wBuffer_Esq;
        
        !Pega Produto
        GARRA_FecharGarra;
        
        GripLoad lFamilia_3;
        
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + pOfst_Aprox_Inicial_Pega;
        MoveL pMov_Pega_Esteira_Entrada, SMov_SuperFina, z1, tGarra\WObj:=wBuffer_Esq;
       
        !Trava o produto
        GARRA_TravarProduto;
        
        !Aproximação 1
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + pOfst_Z_Familia_3;
        MoveL pMov_Pega_Esteira_Entrada, SMov_SuperFina, z10, tGarra\WObj:=wBuffer_Esq;
                     
        !Aproximação 2
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + pOfst_ZY_Familia_3;
        MoveL pMov_Pega_Esteira_Entrada, SMov_SuperFina, z10, tGarra\WObj:=wBuffer_Esq;
                
        !Sai do Berço
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + pOfst_Aprox_Berço_Est_Entrada;
        MoveL pMov_Pega_Esteira_Entrada, SMov_Fina, z80, tGarra \WObj:=wBuffer_Esq;
    
        GOTO sai_entrada;
        
    movimento_4:
    
        !Aproxima do Berço
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + pOfst_Aprox_Berço_Est_Entrada;
        MoveJ pMov_Pega_Esteira_Entrada, sMov_Aprox_Berço_Sem_Produto, z80, tGarra \WObj:=wBuffer_Esq;
          
        !Aproxima do produto
        motionsup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + pOfst_Aprox_PegaEsteiraEntrada;
        MoveL pMov_Pega_Esteira_Entrada, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=wBuffer_Esq;
        
        !Ponto de Pega
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        MoveL pMov_Pega_Esteira_Entrada, SMov_Fina, fine, tGarra \WObj:=wBuffer_Esq;
        
        !Pega Produto
        GARRA_FecharGarra;
        
        GripLoad lFamilia_4;
        
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + pOfst_Aprox_Inicial_Pega;
        MoveL pMov_Pega_Esteira_Entrada, SMov_SuperFina, z1, tGarra\WObj:=wBuffer_Esq;
        
        !Trava o produto
        GARRA_TravarProduto;
        
        !Aproximação 1
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + pOfst_Z_Familia_4;
        MoveL pMov_Pega_Esteira_Entrada, SMov_SuperFina, z10, tGarra\WObj:=wBuffer_Esq;
              
        !Aproximação 2
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + pOfst_ZY_Familia_4;
        MoveL pMov_Pega_Esteira_Entrada, SMov_SuperFina, z10, tGarra\WObj:=wBuffer_Esq;
                
        !Sai do Berço
        pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
        pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + pOfst_Aprox_Berço_Est_Entrada;
        MoveL pMov_Pega_Esteira_Entrada, SMov_Fina, z80, tGarra \WObj:=wBuffer_Esq;
        
    sai_entrada:
    
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        motionsup \On \TuneValue:= nSens_Colid_Mov_Geral;
        MoveJ pFrente_Esteira_Entrada, sMov_Geral_Com_Produto, z200, tGarra \WObj:=wBuffer_Esq;
        
        MoveAbsJ jposRecolhidoEsteira, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Esq; 
    
        !Avisa clp que finalizou rotina
        ComunicaCLP;
        
	ENDPROC
    
    !*************************************************************************************************************************
    !Deposita Redutor na Esteira de Saída de Peças
    !*************************************************************************************************************************
    PROC DepositaEsteiraSaida()
		!Inicio de ciclo de deposita peça na esteira de saida
        
        !Aguarda número de família diferente de 0
        WaitGI PN_IN_Numero_Familia \NOTEQ, 0;
        
        !Vai para posição em frente à esteira
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        
        MoveAbsJ jposRecolhidoEsteiraSaida, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Dir;
        
        MoveJ pFrente_Esteira_Saida, sMov_Geral_Com_Produto, z100, tGarra \WObj:=wBuffer_Dir;
    
        !Verifica qual família selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 GOTO Fam_1;
        IF GInput (PN_IN_Numero_Familia) = 2 GOTO Fam_2;
        IF GInput (PN_IN_Numero_Familia) = 3 GOTO Fam_3;
        IF GInput (PN_IN_Numero_Familia) = 4 GOTO Fam_4;
        
    Fam_1:
    !Família 1
        
        !Carrega posição correspondente à familia selecionada
        pPosição_Final_Est_Saida := pDepos_Esteira_Saída_Fam_1;
        GOTO movimento_1_2;
        
    Fam_2:
    !Família 2
        
        !Carrega posição correspondente à familia selecionada
        pPosição_Final_Est_Saida := pDepos_Esteira_Saída_Fam_2;
        GOTO movimento_1_2;
    
    Fam_3:
    !Família 3
        
        !Carrega posição correspondente à familia selecionada
        pPosição_Final_Est_Saida := pDepos_Esteira_Saída_Fam_3;
        GOTO movimento_3;  
        
    Fam_4:
    !Família 4
        
        !Carrega posição correspondente à familia selecionada
        pPosição_Final_Est_Saida := pDepos_Esteira_Saída_Fam_4;
        GOTO movimento_4;     
        
    movimento_1_2:
    
        !Aproxima do Berço
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + pOfst_Aprox_Berço_Est_Saida;
        MoveJ pMov_Depos_Esteira_Saída, sMov_Aprox_Berço_Com_Produto, z80, tGarra \WObj:=wBuffer_Dir;
          
        !Aproxima do produto
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        motionsup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + pOfst_Aprox_Depos_Est_Saida;
        MoveL pMov_Depos_Esteira_Saída, SMov_Fina, z50, tGarra \WObj:=wBuffer_Dir;
        
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + pOfst_Aprox_Final_Depos;
        MoveL pMov_Depos_Esteira_Saída, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Dir;
        
        !Destrava o produto
        GARRA_DestravarProduto;
        
        !Ponto de Deposita
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        MoveL pMov_Depos_Esteira_Saída, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Dir;
        
        GOTO deposita_saida;
        
    movimento_3:
        
        !Aproxima do Berço
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + pOfst_Aprox_Berço_Est_Saida;
        MoveJ pMov_Depos_Esteira_Saída, sMov_Aprox_Berço_Com_Produto, z80, tGarra \WObj:=wBuffer_Dir;
          
        !Aproxima do produto
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + pOfst_Aprox_Depos_Est_Saida + pOfst_ZY_Familia_3;
        MoveL pMov_Depos_Esteira_Saída, SMov_Fina, z50, tGarra \WObj:=wBuffer_Dir;
        
        !Aproximação 1
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        motionsup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + pOfst_ZY_Familia_3;
        MoveL pMov_Depos_Esteira_Saída, SMov_Fina, z10, tGarra \WObj:=wBuffer_Dir;
        
        !Aproximação 2
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + pOfst_Z_Familia_3;
        MoveL pMov_Depos_Esteira_Saída, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Dir;
        
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + pOfst_Aprox_Final_Depos;
        MoveL pMov_Depos_Esteira_Saída, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Dir;
        
        !Destrava o produto
        GARRA_DestravarProduto;
        
        !Ponto de Deposita
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        MoveL pMov_Depos_Esteira_Saída, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Dir;
        
        GOTO deposita_saida;
        
    movimento_4:
    
        !Aproxima do Berço
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + pOfst_Aprox_Berço_Est_Saida;
        MoveJ pMov_Depos_Esteira_Saída, sMov_Aprox_Berço_Com_Produto, z80, tGarra \WObj:=wBuffer_Dir;
          
        !Aproxima do produto
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + pOfst_Aprox_Depos_Est_Saida + pOfst_ZY_Est_Sai_Familia_4;
        MoveL pMov_Depos_Esteira_Saída, SMov_Fina, z50, tGarra \WObj:=wBuffer_Dir;
        
        !Aproximação 1
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        motionsup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + pOfst_ZY_Est_Sai_Familia_4;
        MoveL pMov_Depos_Esteira_Saída, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Dir;
        
        !Aproximação 2
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + pOfst_Z_Familia_4;
        MoveL pMov_Depos_Esteira_Saída, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Dir;
        
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + pOfst_Aprox_Final_Depos;
        MoveL pMov_Depos_Esteira_Saída, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Dir;
        
        !Destrava o produto
        GARRA_DestravarProduto;
        
        !Ponto de Deposita
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        MoveL pMov_Depos_Esteira_Saída, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Dir;
        
    deposita_saida:
    
        !Deposita Produto
        GARRA_AbrirGarra;
        
        GripLoad load0;
        
        !Sai do Berço
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + pOfst_Aprox_Berço_Est_Saida;
        MoveL pMov_Depos_Esteira_Saída, sMov_Aprox_Berço_Sem_Produto, z80, tGarra \WObj:=wBuffer_Dir;
        
        motionsup \On \TuneValue:= nSens_Colid_Mov_Geral;
        MoveJ pFrente_Esteira_Saida, sMov_Geral_Sem_Produto, z100, tGarra \WObj:=wBuffer_Dir;
        
        !Avisa clp que finalizou rotina
        ComunicaCLP;
            
	ENDPROC
    
    !*************************************************************************************************************************
    !Pega Redutor nas posições do Buffer
    !*************************************************************************************************************************
    PROC PegaDepositaBuffer()
		VAR robtarget pIntermedCentroMassa;
	    VAR jointtarget jposIntermedCentroMassa;
        VAR jointtarget jposRecolhidoAux;
        
        !Inicio de ciclo de buffer
        
        !Aguarda número da família e posição do buffer
        WaitGI PN_IN_Numero_Familia \NOTEQ, 0;
        WaitGI PN_IN_Posição_Buffer \NOTEQ, 0;
            
        nPos_Buffer := GInput (PN_IN_Posição_Buffer);
        motionsup \On \TuneValue:= nSens_Colid_Mov_Geral;
        
        !Verifica a posição do buffer selecionada
        
        IF nPos_Buffer = 1 GOTO pos_1;
        IF nPos_Buffer = 2 GOTO pos_2;
        IF nPos_Buffer = 3 GOTO pos_3;
        IF nPos_Buffer = 4 GOTO pos_4;
        IF nPos_Buffer = 5 GOTO pos_5;
        IF nPos_Buffer = 6 GOTO pos_6;
        IF nPos_Buffer = 7 GOTO pos_7;
        IF nPos_Buffer = 8 GOTO pos_8;
        IF nPos_Buffer = 9 GOTO pos_9;
        IF nPos_Buffer = 10 GOTO pos_10;
        IF nPos_Buffer = 11 GOTO pos_11;
        IF nPos_Buffer = 12 GOTO pos_12;
        IF nPos_Buffer = 13 GOTO pos_13;
        IF nPos_Buffer = 14 GOTO pos_14;
        IF nPos_Buffer = 15 GOTO pos_15;
        IF nPos_Buffer = 16 GOTO pos_16;
        IF nPos_Buffer = 17 GOTO pos_17;
        IF nPos_Buffer = 18 GOTO pos_18;
        IF nPos_Buffer = 19 GOTO pos_19;
        IF nPos_Buffer = 20 GOTO pos_20;
        IF nPos_Buffer = 21 GOTO pos_21;
        IF nPos_Buffer = 22 GOTO pos_22;
        IF nPos_Buffer = 23 GOTO pos_23;
        IF nPos_Buffer = 24 GOTO pos_24;
        IF nPos_Buffer = 25 GOTO pos_25;
        IF nPos_Buffer = 26 GOTO pos_26;
        IF nPos_Buffer = 27 GOTO pos_27;
        IF nPos_Buffer = 28 GOTO pos_28;
        IF nPos_Buffer = 29 GOTO pos_29;
        IF nPos_Buffer = 30 GOTO pos_30;
        IF nPos_Buffer = 31 GOTO pos_31;
        IF nPos_Buffer = 32 GOTO pos_32;
        IF nPos_Buffer = 33 GOTO pos_33;
        IF nPos_Buffer = 34 GOTO pos_34;
        IF nPos_Buffer = 35 GOTO pos_35;
        IF nPos_Buffer = 36 GOTO pos_36;
        IF nPos_Buffer = 37 GOTO pos_37;
        IF nPos_Buffer = 38 GOTO pos_38;
        IF nPos_Buffer = 39 GOTO pos_39;
        IF nPos_Buffer = 40 GOTO pos_40;
        IF nPos_Buffer = 41 GOTO pos_41;
        IF nPos_Buffer = 42 GOTO pos_42;
        IF nPos_Buffer = 43 GOTO pos_43;
        IF nPos_Buffer = 44 GOTO pos_44;
        IF nPos_Buffer = 45 GOTO pos_45;
        IF nPos_Buffer = 46 GOTO pos_46;
        IF nPos_Buffer = 47 GOTO pos_47;
        IF nPos_Buffer = 48 GOTO pos_48;
        IF nPos_Buffer = 49 GOTO pos_49;
        IF nPos_Buffer = 50 GOTO pos_50;
        IF nPos_Buffer = 51 GOTO pos_51;
        IF nPos_Buffer = 52 GOTO pos_52;
        IF nPos_Buffer = 53 GOTO pos_53;
        IF nPos_Buffer = 54 GOTO pos_54;
        IF nPos_Buffer = 55 GOTO pos_55;
        IF nPos_Buffer = 56 GOTO pos_56;
        IF nPos_Buffer = 57 GOTO pos_57;
        IF nPos_Buffer = 58 GOTO pos_58;
        IF nPos_Buffer = 59 GOTO pos_59;
        IF nPos_Buffer = 60 GOTO pos_60;
        IF nPos_Buffer = 61 GOTO pos_61;
        IF nPos_Buffer = 62 GOTO pos_62;
        IF nPos_Buffer = 63 GOTO pos_63;
        IF nPos_Buffer = 64 GOTO pos_64;
        IF nPos_Buffer = 65 GOTO pos_65;
        IF nPos_Buffer = 66 GOTO pos_66;
        IF nPos_Buffer = 67 GOTO pos_67;
        IF nPos_Buffer = 68 GOTO pos_68;
        IF nPos_Buffer = 69 GOTO pos_69;
        IF nPos_Buffer = 70 GOTO pos_70;
        IF nPos_Buffer = 71 GOTO pos_71;
        IF nPos_Buffer = 72 GOTO pos_72;
        IF nPos_Buffer = 73 GOTO pos_73;
        IF nPos_Buffer = 74 GOTO pos_74;
        IF nPos_Buffer = 75 GOTO pos_75;
        IF nPos_Buffer = 76 GOTO pos_76;
        IF nPos_Buffer = 77 GOTO pos_77;
        IF nPos_Buffer = 78 GOTO pos_78;
        IF nPos_Buffer = 79 GOTO pos_79;
        IF nPos_Buffer = 80 GOTO pos_80;
        IF nPos_Buffer = 81 GOTO pos_81;
        IF nPos_Buffer = 82 GOTO pos_82;
        IF nPos_Buffer = 83 GOTO pos_83;
        IF nPos_Buffer = 84 GOTO pos_84;
        IF nPos_Buffer = 85 GOTO pos_85;
        IF nPos_Buffer = 86 GOTO pos_86;
        IF nPos_Buffer = 87 GOTO pos_87;
        IF nPos_Buffer = 88 GOTO pos_88;
        IF nPos_Buffer = 89 GOTO pos_89;
        IF nPos_Buffer = 90 GOTO pos_90;
        IF nPos_Buffer = 91 GOTO pos_91;
        IF nPos_Buffer = 92 GOTO pos_92;
        IF nPos_Buffer = 93 GOTO pos_93;
        IF nPos_Buffer = 94 GOTO pos_94;
        IF nPos_Buffer = 95 GOTO pos_95;
        IF nPos_Buffer = 96 GOTO pos_96;
        IF nPos_Buffer = 97 GOTO pos_97;
        IF nPos_Buffer = 98 GOTO pos_98;
        IF nPos_Buffer = 99 GOTO pos_99;
        
    pos_1:
        !Posição 1
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_1_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_1_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_1_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_1_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_2:
        !Posição 2
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_2_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_2_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_2_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_2_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_3:
        !Posição 3
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_3_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_3_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_3_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_3_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_4:
        !Posição 4
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_4_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_4_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_4_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_4_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_5:
        !Posição 5
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_5_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_5_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_5_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_5_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_6:
        !Posição 6
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_6_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_6_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_6_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_6_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_7:
        !Posição 7
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_7_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_7_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_7_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_7_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_8:
        !Posição 8
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_8_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_8_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_8_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_8_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_9:
        !Posição 9
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_9_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_9_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_9_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_9_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_10:
        !Posição 10
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_10_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_10_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_10_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_10_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_11:
        !Posição 11
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_11_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_11_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_11_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_11_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_12:
        !Posição 12
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_12_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_12_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_12_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_12_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_13:
        !Posição 13
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_13_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_13_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_13_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_13_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_14:
        !Posição 14
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_14_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_14_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_14_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_14_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_15:
        !Posição 15
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_15_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_15_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_15_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_15_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_16:
        !Posição 16
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_16_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_16_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_16_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_16_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_17:
        !Posição 17
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_17_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_17_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_17_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_17_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_18:
        !Posição 18
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_18_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_18_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_18_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_18_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_19:
        !Posição 19
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_19_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_19_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_19_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_19_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_20:
        !Posição 20
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_20_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_20_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_20_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_20_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_21:
        !Posição 21
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_21_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_21_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_21_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_21_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_22:
        !Posição 22
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_22_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_22_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_22_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_22_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_23:
        !Posição 23
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_23_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_23_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_23_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_23_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_24: 
        !Posição 24
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_24_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_24_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_24_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_24_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_25:
        !Posição 25
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_25_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_25_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_25_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_25_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_26:
        !Posição 26
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_26_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_26_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_26_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_26_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_27:
        !Posição 27
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_27_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_27_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_27_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_27_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_28:
        !Posição 28
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_28_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_28_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_28_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_28_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_29:
        !Posição 29
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_29_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_29_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_29_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_29_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_30:
        !Posição 30
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_30_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_30_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_30_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_30_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_31:
        !Posição 31
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_31_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_31_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_31_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_31_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_32:
        !Posição 32
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_32_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_32_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_32_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_32_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_33:
        !Posição 33
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_33_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_33_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_33_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_33_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_34:
        !Posição 34
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_34_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_34_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_34_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_34_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_35:
        !Posição 35
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_35_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_35_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_35_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_35_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_36:
        !Posição 36
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_36_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_36_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_36_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_36_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_37:
        !Posição 37
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_37_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_37_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_37_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_37_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_38:
        !Posição 38
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_38_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_38_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_38_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_38_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_39:
        !Posição 39
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_39_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_39_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_39_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_39_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_40:
        !Posição 40
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_40_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_40_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_40_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_40_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_41:
        !Posição 41
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_41_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_41_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_41_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_41_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_42:
        !Posição 42
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_42_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_42_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_42_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_42_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_43:
        !Posição 43
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_43_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_43_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_43_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_43_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_44:
        !Posição 44
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_44_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_44_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_44_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_44_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_45:
        !Posição 45
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_45_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_45_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_45_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_45_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_46:
        !Posição 46
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_46_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_46_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_46_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_46_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_47:
        !Posição 47
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_47_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_47_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_47_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_47_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_48:
        !Posição 48
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_48_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_48_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_48_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_48_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_49:
        !Posição 49
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_49_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_49_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_49_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_49_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_50:
        !Posição 50
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_50_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_50_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_50_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_50_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_51:
        !Posição 51
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_51_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_51_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_51_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_51_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_52:
        !Posição 52
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_52_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_52_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_52_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_52_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_53:
        !Posição 53
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_53_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_53_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_53_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_53_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_54:
        !Posição 54
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_54_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_54_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_54_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_54_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_55:
        !Posição 55
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_55_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_55_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_55_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_55_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_56:
        !Posição 56
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_56_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_56_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_56_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_56_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_57:
        !Posição 57
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_57_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_57_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_57_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_57_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_58:
        !Posição 58
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_58_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_58_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_58_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_58_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_59:
        !Posição 59
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_59_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_59_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_59_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_59_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_60:
        !Posição 60
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_60_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_60_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_60_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_60_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_61:
        !Posição 61
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_61_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_61_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_61_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_61_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_62:
        !Posição 62
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_62_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_62_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_62_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_62_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_63:
        !Posição 63
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_63_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_63_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_63_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_63_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_64:
        !Posição 64
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_64_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_64_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_64_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_64_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_65:
        !Posição 65
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_65_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_65_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_65_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_65_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_66:
        !Posição 66
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_66_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_66_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_66_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_66_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_67:
        !Posição 67
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_67_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_67_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_67_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_67_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_68:
        !Posição 68
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_68_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_68_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_68_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_68_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_69:
        !Posição 69
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_69_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_69_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_69_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_69_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_70:
        !Posição 70
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_70_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_70_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_70_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_70_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_71:
        !Posição 71
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_71_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_71_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_71_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_71_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_72:
        !Posição 72
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_72_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_72_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_72_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_72_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_73:
        !Posição 73
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_73_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_73_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_73_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_73_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_74:
        !Posição 74
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_74_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_74_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_74_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_74_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_75:
        !Posição 75
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_75_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_75_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_75_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_75_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_76:
        !Posição 76
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_76_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_76_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_76_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_76_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_77:
        !Posição 77
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_77_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_77_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_77_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_77_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_78:
        !Posição 78
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_78_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_78_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_78_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_78_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_79:
        !Posição 79
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_79_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_79_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_79_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_79_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_80:
        !Posição 80
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_80_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_80_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_80_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_80_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_81:
        !Posição 81
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_81_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_81_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_81_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_81_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_82:
        !Posição 82
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_82_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_82_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_82_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_82_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_83:
        !Posição 83
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_83_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_83_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_83_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_83_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_84:
        !Posição 84
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_84_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_84_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_84_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_84_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_85:
        !Posição 85
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_85_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_85_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_85_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_85_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_86:
        !Posição 86
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_86_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_86_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_86_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_86_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_87:
        !Posição 87
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_87_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_87_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_87_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_87_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_88:
        !Posição 88
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_88_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_88_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_88_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_88_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_89:
        !Posição 89
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_89_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_89_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_89_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_89_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_90:
        !Posição 90
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_90_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_90_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_90_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_90_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_91:
        !Posição 91
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_91_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_91_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_91_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_91_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_92:
        !Posição 92
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_92_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_92_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_92_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_92_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_93:
        !Posição 93
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_93_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_93_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_93_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_93_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_94:
        !Posição 94
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_94_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_94_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_94_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_94_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_95:
        !Posição 95
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_95_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_95_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_95_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_95_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_96:
        !Posição 96
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_96_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_96_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_96_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_96_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_97:
        !Posição 97
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_97_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_97_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_97_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_97_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_98:
        !Posição 98
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_98_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_98_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_98_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_98_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
        
    pos_99:
        !Posição 99
        
        !Carrega posição correspondente à familia selecionada
        IF GInput (PN_IN_Numero_Familia) = 1 THEN
            pPosição_Final_Buffer := pBuffer_Pos_99_Fam_1;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 2 THEN
            pPosição_Final_Buffer := pBuffer_Pos_99_Fam_2;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 3 THEN
            pPosição_Final_Buffer := pBuffer_Pos_99_Fam_3;
        ENDIF
        IF GInput (PN_IN_Numero_Familia) = 4 THEN
            pPosição_Final_Buffer := pBuffer_Pos_99_Fam_4;
        ENDIF
        
        GOTO verifica_passo;
       
    verifica_passo:
        !Verifica Produto
        IF GInput (PN_IN_Numero_Familia) = 3 GOTO ver_fam_3;
        IF GInput (PN_IN_Numero_Familia) = 4 GOTO ver_Fam_4;
        
        !Verifica se ciclo é de pega peça ou deposita peça no buffer
        IF GInput (PN_IN_Numero_Programa) = 3 GOTO deposita_fam_1_2;
        IF GInput (PN_IN_Numero_Programa) = 4 GOTO pega_fam_1_2;
        
    ver_fam_3:
        !Verifica se ciclo é de pega peça ou deposita peça no buffer
        IF GInput (PN_IN_Numero_Programa) = 3 GOTO deposita_fam_3;
        IF GInput (PN_IN_Numero_Programa) = 4 GOTO pega_fam_3;
   
    ver_fam_4:
        !Verifica se ciclo é de pega peça ou deposita peça no buffer
        IF GInput (PN_IN_Numero_Programa) = 3 GOTO deposita_fam_4;
        IF GInput (PN_IN_Numero_Programa) = 4 GOTO pega_fam_4;
        
!*********************************************************************************************************************************************
!  DEPOSITA PRODUTO NO BUFFER FAMILIAS 1 E 2
!*********************************************************************************************************************************************

    deposita_fam_1_2:
        !Ciclo para depositar peça no buffer
        
        !Ponto intermediario centro de massa
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Dir);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
        
        
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Dir; 
        GOTO inpos_fam_1_2;
        ENDIF
        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Front);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Front; 
        GOTO inpos_fam_1_2;
        ELSE
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Esq);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Esq; 
        ENDIF 
             
        
inpos_fam_1_2:
        !Agora sim, vai para posição acima do local de deposita
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=wBuffer_Dir;
        GOTO verifica_fam_1_2;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=wBuffer_Front;
        GOTO verifica_fam_1_2;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    verifica_fam_1_2:   
        !Verifica se já existe peça na posição selecionada
        IF DInput (DI_Pres_Peça_Berço_1) = 0 AND DInput (DI_Pres_Peça_Berço_2) = 1 GOTO a_berço;
        
        !Caso exista produto no berço selecionado
        TPWrite "Já existe um produto na posição "\num:= nPos_Buffer;
        SetDO PN_OUT_Produto_Existente, 1;
        Stop;
        GOTO inpos_fam_1_2;
        
    a_berço:
        SetDO PN_OUT_Produto_Existente, 0;
    
        !Ponto acima do berço
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Berço_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=wBuffer_Dir;
        GOTO p_aprox;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=wBuffer_Front;
        GOTO p_aprox;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=wBuffer_Esq;
        ENDIF
                   
    p_aprox:
        !Ponto de aproximação
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        motionsup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Aprox_Pega_Depos_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=wBuffer_Dir;
        GOTO p_ant_ag_1_2;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=wBuffer_Front;
        GOTO p_ant_ag_1_2;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    p_ant_ag_1_2:    
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Aprox_Final_Depos;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra\WObj:=wBuffer_Dir;
        GOTO  p_depos;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Front;
        GOTO  p_depos;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Esq;
        ENDIF
    
    p_depos:
        !Destrava o produto
        GARRA_DestravarProduto;
        
        !Ponto final para depositar
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra\WObj:=wBuffer_Dir;
        GOTO a_garra;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Front;
        GOTO a_garra;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
        
      a_garra:
        !Deposita Produto
        GARRA_AbrirGarra;
        
        GripLoad load0;
        
        !Movimento de Recuo
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Berço_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=wBuffer_Dir;
        GOTO ad_buffer;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=wBuffer_Front;
        GOTO ad_buffer;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    ad_buffer:
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        motionsup \On \TuneValue:= nSens_Colid_Mov_Geral;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Buffer_Sem_Produto;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z200, tGarra \WObj:=wBuffer_Dir;
        GOTO inposf_fam_1_2;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z200, tGarra \WObj:=wBuffer_Front;
        GOTO inposf_fam_1_2;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z200, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        GOTO inposf_fam_1_2;
        
    inposf_fam_1_2:
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Dir;
        GOTO final;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Front;
        GOTO final;
        ELSE
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Esq;
        ENDIF
        GOTO final;
        
!*********************************************************************************************************************************************
!  PEGA PRODUTO NO BUFFER FAMILIAS 1 E 2
!*********************************************************************************************************************************************
    pega_fam_1_2:
        !Ciclo para pegar peça no buffer
        
        GARRA_VerificarGarraVazia;
        !Abre Garra
        GARRA_DestravarProduto;
        GARRA_AbrirGarra;
        
        !Vai para posição intermediária no centro de massa
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Dir);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Dir; 
        GOTO inpegapos_fam_1_2;
        ENDIF
        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Front);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Front; 
        GOTO inpegapos_fam_1_2;
        ELSE
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Esq);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Esq; 
        ENDIF
        
    inpegapos_fam_1_2:
        !Ponto acima da posição
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Buffer_Sem_Produto;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=wBuffer_Dir;
        GOTO  ap_berço;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=wBuffer_Front;
        GOTO  ap_berço;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=wBuffer_Esq;
        ENDIF
      
     ap_berço:
        !Ponto acima do berço
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Berço_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z100, tGarra \WObj:=wBuffer_Dir;
        GOTO  pp_aprox;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z100, tGarra \WObj:=wBuffer_Front;
        GOTO  pp_aprox;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z100, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    pp_aprox:        
        !Ponto de aproximação
        motionsup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Aprox_Pega_Depos_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=wBuffer_Dir;
        GOTO  p_peça;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=wBuffer_Front;
        GOTO  p_peça;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=wBuffer_Esq;
        ENDIF
          
    p_peça:
        !Ponto de pega
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Dir;
        GOTO f_garra;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Front;
        GOTO f_garra;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    f_garra:        
        !Pega Produto
        GARRA_FecharGarra;
        
        TEST nNum_Fam
          CASE 1:        
            GripLoad lFamilia_1;
          CASE 2:
            GripLoad lFamilia_2;
          DEFAULT:
            EXIT;
        ENDTEST
        
        !Movimento de Recuo
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Aprox_Inicial_Pega;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Dir;
        GOTO  tp_ac_1_2;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Front;
        GOTO  tp_ac_1_2;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    tp_ac_1_2:
        !Trava o produto
        GARRA_TravarProduto;
        
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Aprox_Pega_Depos_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z50, tGarra \WObj:=wBuffer_Dir;
        GOTO  tp_buffer;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z50, tGarra \WObj:=wBuffer_Front;
        GOTO  tp_buffer;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z50, tGarra \WObj:=wBuffer_Esq;
        ENDIF
       
    tp_buffer:
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Berço_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z80, tGarra\WObj:=wBuffer_Dir;
        GOTO  ap_buffer;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z80, tGarra \WObj:=wBuffer_Front;
        GOTO  ap_buffer;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z80, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    ap_buffer:        
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        motionsup \On \TuneValue:= nSens_Colid_Mov_Geral;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z100, tGarra \WObj:=wBuffer_Dir;
        GOTO  inpegaposf_fam_1_2;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z100, tGarra \WObj:=wBuffer_Front;
        GOTO  inpegaposf_fam_1_2;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z100, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        GOTO inpegaposf_fam_1_2;
        
    inpegaposf_fam_1_2:
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Dir;
        GOTO  final;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Front;
        GOTO  final;
        ELSE
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Esq;
        ENDIF
        GOTO final;
          
!*********************************************************************************************************************************************
!  DEPOSITA PRODUTO NO BUFFER FAMILIA 3
!*********************************************************************************************************************************************

    deposita_fam_3:
        !Ciclo para depositar peça no buffer
        
        !Ponto intermediario centro de massa
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Dir);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Dir; 
        GOTO inpos_fam_3;
        ENDIF
        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Front);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Front; 
        GOTO inpos_fam_3;
        ELSE
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Esq);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Esq; 
        ENDIF
        
inpos_fam_3:        
        !Ponto acima da posição
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=wBuffer_Dir;
        GOTO verifica_fam_3;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=wBuffer_Front;
        GOTO verifica_fam_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    verifica_fam_3:   
        !Verifica se já existe peça na posição selecionada
        IF DInput (DI_Pres_Peça_Berço_1) = 0 AND DInput (DI_Pres_Peça_Berço_2) = 1 GOTO a_berço_3;
        
        !Caso exista produto no berço selecionado
        TPWrite "Já existe um produto na posição "\num:= nPos_Buffer;
        SetDO PN_OUT_Produto_Existente, 1;
        Stop;
        GOTO inpos_fam_3;
        
    a_berço_3:
        SetDO PN_OUT_Produto_Existente, 0;
        
        !Ponto acima do berço
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Berço_Buffer + pOfst_ZY_Familia_3;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=wBuffer_Dir;
        GOTO p_aprox_3;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=wBuffer_Front;
        GOTO p_aprox_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=wBuffer_Esq;
        ENDIF
                   
    p_aprox_3:
        !Ponto de aproximação
        motionsup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_ZY_Familia_3;
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z10, tGarra \WObj:=wBuffer_Dir;
        GOTO p_a_dep_fam_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z10, tGarra \WObj:=wBuffer_Front;
        GOTO p_a_dep_fam_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z10, tGarra \WObj:=wBuffer_Esq;
        ENDIF
                
    p_a_dep_fam_3:
        !Ponto antes de depositar
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Z_Familia_3;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Dir;
        GOTO p_ant_ag_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Front;
        GOTO p_ant_ag_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    p_ant_ag_3:
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Aprox_Final_Depos;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Dir;
        GOTO p_depos_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Front;
        GOTO p_depos_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    p_depos_3:
        !Destrava o produto
        GARRA_DestravarProduto;
        
        !Ponto final para depositar
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Dir;
        GOTO a_garra_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Front;
        GOTO a_garra_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
        
      a_garra_3:
        !Deposita Produto
        GARRA_AbrirGarra;
        
        GripLoad load0;
        
        !Movimento de Recuo
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Berço_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=wBuffer_Dir;
        GOTO ad_buffer_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=wBuffer_Front;
        GOTO ad_buffer_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=wBuffer_Esq;
        ENDIF
               
    ad_buffer_3:
        motionsup \On \TuneValue:= nSens_Colid_Mov_Geral;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Buffer_Sem_Produto;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z100, tGarra \WObj:=wBuffer_Dir;
        GOTO inposf_fam_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z100, tGarra \WObj:=wBuffer_Front;
        GOTO inposf_fam_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z100, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        GOTO inposf_fam_3;
        
inposf_fam_3:
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Dir;
        GOTO final;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Front;
        GOTO final;
        ELSE
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Esq;
        ENDIF
        GOTO final;

!*********************************************************************************************************************************************
!  PEGA PRODUTO NO BUFFER FAMILIA 3
!*********************************************************************************************************************************************

     pega_fam_3:
        !Ciclo para pegar peça no buffer
    
        GARRA_VerificarGarraVazia;
        !Abre Garra
        GARRA_DestravarProduto;
        GARRA_AbrirGarra;
        
        !Vai para posição intermediária no centro de massa
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Dir);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Dir; 
        GOTO inpegapos_fam_3;
        ENDIF
        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Front);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Front; 
        GOTO inpegapos_fam_3;
        ELSE
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Esq);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Esq; 
        ENDIF
        
inpegapos_fam_3:
        !Ponto acima da posição
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Buffer_Sem_Produto;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=wBuffer_Dir;
        GOTO  ap_berço_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=wBuffer_Front;
        GOTO  ap_berço_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=wBuffer_Esq;
        ENDIF
      
      ap_berço_3:
        !Ponto acima do berço
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Berço_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z100, tGarra \WObj:=wBuffer_Dir;
        GOTO  pp_aprox_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z100, tGarra \WObj:=wBuffer_Front;
        GOTO  pp_aprox_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z100, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    pp_aprox_3:        
        !Ponto de aproximação
        motionsup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Aprox_Pega_Depos_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=wBuffer_Dir;
        GOTO  p_peça_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=wBuffer_Front;
        GOTO  p_peça_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=wBuffer_Esq;
        ENDIF
          
    p_peça_3:
        !Ponto de pega
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Dir;
        GOTO f_garra_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Front;
        GOTO f_garra_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    f_garra_3:        
        !Pega Produto
        GARRA_FecharGarra;
        
        GripLoad lFamilia_3;
        
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Aprox_Inicial_Pega;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Dir;
        GOTO   tp_ac_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Front;
        GOTO   tp_ac_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Esq;
        ENDIF
    
    tp_ac_3:
        !Trava o produto
        GARRA_TravarProduto;
    
        !Movimento 1 de Recuo
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Z_Familia_3;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Dir;
        GOTO   m_1_p_fam_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Front;
        GOTO   m_1_p_fam_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    m_1_p_fam_3:
        !Movimento 2 de Recuo
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_ZY_Familia_3;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Dir;
        GOTO   m_2_p_fam_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Front;
        GOTO   m_2_p_fam_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Esq;
        ENDIF    
    
    m_2_p_fam_3:    
        !Movimento de Recuo
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Berço_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z100, tGarra \WObj:=wBuffer_Dir;
        GOTO  ap_buffer_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z100, tGarra \WObj:=wBuffer_Front;
        GOTO  ap_buffer_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z100, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    ap_buffer_3:     
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        motionsup \On \TuneValue:= nSens_Colid_Mov_Geral;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, z100, tGarra \WObj:=wBuffer_Dir;
        GOTO  inpegaposf_fam_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, z100, tGarra \WObj:=wBuffer_Front;
        GOTO  inpegaposf_fam_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, z100, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        GOTO inpegaposf_fam_3;
        
    inpegaposf_fam_3:
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Dir;
        GOTO  final;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Front;
        GOTO  final;
        ELSE
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Esq;
        ENDIF
        GOTO final;

!*********************************************************************************************************************************************
!  DEPOSITA PRODUTO NO BUFFER FAMILIA 4
!*********************************************************************************************************************************************

    deposita_fam_4:
        !Ciclo para depositar peça no buffer
        
        !Ponto intermediario centro de massa
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Dir);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Dir; 
        GOTO inpos_fam_4;
        ENDIF
        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Front);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Front; 
        GOTO inpos_fam_4;
        ELSE
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Esq);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Esq; 
        ENDIF
        
inpos_fam_4:        
        !Ponto acima da posição
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveJ pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=wBuffer_Dir;
        GOTO verifica_fam_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveJ pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=wBuffer_Front;
        GOTO verifica_fam_4;
        ELSE
        MoveJ pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    verifica_fam_4:   
        !Verifica se já existe peça na posição selecionada
        IF DInput (DI_Pres_Peça_Berço_1) = 0 AND DInput (DI_Pres_Peça_Berço_2) = 1 GOTO a_berço_4;
        
        !Caso exista produto no berço selecionado
        TPWrite "Já existe um produto na posição "\num:= nPos_Buffer;
        SetDO PN_OUT_Produto_Existente, 1;
        Stop;
        GOTO inpos_fam_4;
        
    a_berço_4:
        SetDO PN_OUT_Produto_Existente, 0;
    
        !Ponto acima do berço
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Berço_Buffer + pOfst_ZY_Familia_4;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=wBuffer_Dir;
        GOTO p_aprox_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=wBuffer_Front;
        GOTO p_aprox_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=wBuffer_Esq;
        ENDIF
                   
    p_aprox_4:
        !Ponto de aproximação
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        motionsup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_ZY_Familia_4;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z10, tGarra \WObj:=wBuffer_Dir;
        GOTO p_a_dep_fam_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z10, tGarra \WObj:=wBuffer_Front;
        GOTO p_a_dep_fam_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z10, tGarra \WObj:=wBuffer_Esq;
        ENDIF
                
    p_a_dep_fam_4:
        !Ponto antes de depositar
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Z_Familia_4;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Dir;
        GOTO p_ant_ag_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Front;
        GOTO p_ant_ag_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    p_ant_ag_4:
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Aprox_Final_Depos;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Dir;
        GOTO p_depos_4;
        ENDIF
       IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Front;
        GOTO p_depos_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    p_depos_4:
        !Destrava o produto
        GARRA_DestravarProduto;
        
        !Ponto final para depositar
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Dir;
        GOTO a_garra_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Front;
        GOTO a_garra_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
        
      a_garra_4:
        !Deposita Produto
        GARRA_AbrirGarra;
        
        GripLoad load0;
        
        !Movimento de Recuo
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Berço_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=wBuffer_Dir;
        GOTO ad_buffer_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveJ pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z50, tGarra \WObj:=wBuffer_Front;
        GOTO ad_buffer_4;
        ELSE
        MoveJ pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=wBuffer_Esq;
        ENDIF
               
    ad_buffer_4:
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        motionsup \On \TuneValue:= nSens_Colid_Mov_Geral;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Buffer_Sem_Produto;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z50, tGarra \WObj:=wBuffer_Dir;
        GOTO inposf_fam_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z50, tGarra \WObj:=wBuffer_Front;
        GOTO inposf_fam_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z50, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        GOTO inposf_fam_4;
        
    inposf_fam_4:
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Dir;
        GOTO final;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Front;
        GOTO final;
        ELSE
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Esq;
        ENDIF
        GOTO final;
      
!*********************************************************************************************************************************************
!  PEGA PRODUTO NO BUFFER FAMILIA 4
!*********************************************************************************************************************************************

     pega_fam_4:
        !Ciclo para pegar peça no buffer
        
        GARRA_VerificarGarraVazia;
        !Abre Garra
        GARRA_DestravarProduto;
        GARRA_AbrirGarra;
        
        !Ponto acima da posição
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Dir);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Dir; 
        GOTO inpegapos_fam_4;
        ENDIF
        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Front);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Front; 
        GOTO inpegapos_fam_4;
        ELSE
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=wBuffer_Esq);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=wBuffer_Esq; 
        ENDIF
       
    inpegapos_fam_4:
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=wBuffer_Dir;
        GOTO  ap_berço_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=wBuffer_Front;
        GOTO  ap_berço_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    ap_berço_4:    
        !Ponto acima do berço
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Berço_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=wBuffer_Dir;
        GOTO  pp_aprox_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=wBuffer_Front;
        GOTO  pp_aprox_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    pp_aprox_4:        
        !Ponto de aproximação
        motionsup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Aprox_Pega_Depos_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=wBuffer_Dir;
        GOTO  p_peça_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=wBuffer_Front;
        GOTO  p_peça_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=wBuffer_Esq;
        ENDIF
          
    p_peça_4:
        !Ponto de pega
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Dir;
        GOTO f_garra_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveJ pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Front;
        GOTO f_garra_4;
        ELSE
        MoveJ pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    f_garra_4:        
        !Pega Produto
        GARRA_FecharGarra;
        
        GripLoad lFamilia_4;
        
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Aprox_Inicial_Pega;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Dir;
        GOTO   tp_ac_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveJ pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Front;
        GOTO   tp_ac_4;
        ELSE
        MoveJ pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    tp_ac_4:
        !Trava o produto
        GARRA_TravarProduto;   
    
        !Movimento 1 de Recuo
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Z_Familia_4;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Dir;
        GOTO   m_1_p_fam_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveJ pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Front;
        GOTO   m_1_p_fam_4;
        ELSE
        MoveJ pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    m_1_p_fam_4:   
        !Movimento 2 de Recuo
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_ZY_Familia_4;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Dir;
        GOTO   m_2_p_fam_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveJ pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Front;
        GOTO   m_2_p_fam_4;
        ELSE
        MoveJ pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=wBuffer_Esq;
        ENDIF    
    
    m_2_p_fam_4:    
        !Movimento de Recuo
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Berço_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z50, tGarra \WObj:=wBuffer_Dir;
        GOTO  ap_buffer_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveJ pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z50, tGarra \WObj:=wBuffer_Front;
        GOTO  ap_buffer_4;
        ELSE
        MoveJ pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z50, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        
    ap_buffer_4:
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        motionsup \On \TuneValue:= nSens_Colid_Mov_Geral;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Acima_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, z50, tGarra \WObj:=wBuffer_Dir;
        GOTO  inpegaposf_fam_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveJ pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, z50, tGarra \WObj:=wBuffer_Front;
        GOTO  inpegaposf_fam_4;
        ELSE
        MoveJ pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, z50, tGarra \WObj:=wBuffer_Esq;
        ENDIF
        GOTO inpegaposf_fam_4;
        
    inpegaposf_fam_4:
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Dir;
        GOTO  final;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Front;
        GOTO  final;
        ELSE
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=wBuffer_Esq;
        ENDIF
        GOTO final;
 
    final:
        IF GInput (PN_IN_Numero_Programa) = 3 THEN
        !Vai Posição de Trabalho
        MoveJ pPosição_Trabalho, sMov_Geral_Sem_Produto, z200, tGarra \WObj:=wobj0;
        GOTO fim;
        ENDIF
    
        IF (GInput (PN_IN_Numero_Programa) = 4 AND (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99)) GOTO fim;
   
        !Vai Posição de Trabalho
        MoveJ pPosição_Trabalho, sMov_Geral_Com_Produto, z200, tGarra \WObj:=wobj0;
              
    fim:
        !Avisa clp que finalizou rotina
        ComunicaCLP;
        
	ENDPROC
        
    !*************************************************************************************************************************
    !Troca de Dados CLP
    !*************************************************************************************************************************
    PROC ComunicaCLP()
        !Avisa clp que finalizou rotina
        Set PN_OUT_Programa_Finalizado;
        WaitGI PN_IN_Numero_Programa, 0;
        Reset PN_OUT_Programa_Finalizado;
    ENDPROC

    !*************************************************************************************************************************
    !Reset de flags
    !*************************************************************************************************************************
    PROC ResetFlags()
        SetDO \Sync, PN_OUT_Solicita_Abertura, 0;
        SetDO \Sync, PN_OUT_Solicita_Fecha_Garra, 0;
        SetDO\Sync, PN_OUT_Programa_Finalizado, 0;
    ENDPROC
    
    !*************************************************************************************************************************
    !Retorna wObjData (Frame) de um index qualquer do Buffer
    !*************************************************************************************************************************
     FUNC wobjdata GetWObjBuffer(Num i)
            
         !Area C (Robô de Costas para Esteira, à Direita
            IF (i >= 13 AND i <= 15) OR (i >= 19 AND i <= 21) OR (i >= 25 AND i <= 27) OR (i >= 31 AND i <=33) OR (i >= 37 AND i <= 39) OR (i >= 43 AND i <= 45) OR (i >= 49 AND i <= 51) OR (i >= 55 AND i <=57) OR (i >= 61 AND i <= 63) OR (i >= 67 AND i <= 69) OR (i >= 73 AND i <= 75) OR (i >= 79 AND i <= 81) OR (i >= 85 AND i <= 87) OR (i >= 91 AND i <= 93) OR (i >= 97 AND i <= 99) THEN
                Return wBuffer_Dir;
            
            !Area B (Robô de Costas para Esteira, à sua Frente
            ELSEIF (i >= 1 AND i <= 9) THEN
                RETURN wBuffer_Front;

            !Area A (Robô de Costas para Esteira, à sua Esquerda
            ELSE
                RETURN wBuffer_Esq;
            ENDIF
     ENDFUNC
     
    !*************************************************************************************************************************
    !Retorna área de um index qualquer do Buffer
    !*************************************************************************************************************************
     FUNC string GetAreaBuffer(Num i)
            
         !Area C (Robô de Costas para Esteira, à Direita
            IF (i >= 13 AND i <= 15) OR (i >= 19 AND i <= 21) OR (i >= 25 AND i <= 27) OR (i >= 31 AND i <=33) OR (i >= 37 AND i <= 39) OR (i >= 43 AND i <= 45) OR (i >= 49 AND i <= 51) OR (i >= 55 AND i <=57) OR (i >= 61 AND i <= 63) OR (i >= 67 AND i <= 69) OR (i >= 73 AND i <= 75) OR (i >= 79 AND i <= 81) OR (i >= 85 AND i <= 87) OR (i >= 91 AND i <= 93) OR (i >= 97 AND i <= 99) THEN
                Return "C";
            
            !Area B (Robô de Costas para Esteira, à sua Frente
            ELSEIF (i >= 1 AND i <= 9) THEN
                RETURN "B";

            !Area A (Robô de Costas para Esteira, à sua Esquerda
            ELSE
                RETURN "A";
            ENDIF
     ENDFUNC
    
    !*************************************************************************************************************************
    !Retorna a Posição Específica no Buffer (i= Index Buffer, f= Familia)
    !*************************************************************************************************************************
     FUNC robtarget GetPosicaoBuffer(Num i, Num f)
         VAR robtarget RT_PosicaoBuffer;
         
         GetDataVal "pBuffer_Pos_" + NumToStr(i, 0) + "_Fam_" + NumToStr(f, 0), RT_PosicaoBuffer;
         
         RETURN RT_PosicaoBuffer;
     ENDFUNC
 
    !*************************************************************************************************************************
    !Rotinas de Garra: Abrir (Recuar Servos Para Fora)
    !*************************************************************************************************************************
    PROC GARRA_AbrirGarra()
		!Inicio de ciclo de abertura de garra

        verifica_novamente:
            nNum_Fam := GInput(PN_IN_Numero_Familia);
            WaitTime 0.2;
            SetGO PN_GO_Modelo_Produto, nNum_Fam;
            WaitTime 0.2;
        
            IF GOutput (PN_GO_Modelo_Produto) = nNum_Fam THEN
                GOTO continue;
            ELSE
                TPWrite "CLP não carregou valor correto para abertura de garra";
                StopMove;
                GOTO verifica_novamente;
            ENDIF              
            
        continue:           
            !Revisa se cilindros estão recuados
            WaitDI DI_Fixa_Peça_1_Av, 0\MaxTime:= 5\TimeFlag:=timeout_rc1;
            WaitDI DI_Fixa_Peça_2_Av, 0\MaxTime:= 5\TimeFlag:=timeout_rc2;
            WaitDI DI_Fixa_Peça_1_Rc, 1\MaxTime:= 5\TimeFlag:=timeout_rc3;
            WaitDI DI_Fixa_Peça_2_Rc, 1\MaxTime:= 5\TimeFlag:=timeout_rc4;
            
            !Se inconsistente, avisa erro:
            IF (timeout_rc1 OR timeout_rc2 OR timeout_rc3 OR timeout_rc4) = TRUE THEN
                PulseDO\PLength:=1, PN_OUT_DO_Cil_NRc;
                TPWrite "Inconsistencia Processo, Travas nao estao recuadas!";
                Stop;
                GOTO continue;
            ENDIF
            
        !Solicita Abertura de Garra
        SetDO \Sync, PN_OUT_Solicita_Abertura, 1;
        WaitTime 0.5;
        WaitDI PN_IN_Garra_Fechada, 0\MaxTime:= 5\TimeFlag:=timeout_rc1;
        WaitDI PN_IN_Garra_Aberta, 1\MaxTime:= 5\TimeFlag:=timeout_rc2;
        
        !Se não abriu, avisa erro:
        IF (timeout_rc1 OR timeout_rc2) = TRUE THEN
            PulseDO\PLength:=1, PN_OUT_DO_Cil_NRc;
            SetDO \Sync, PN_OUT_Solicita_Abertura, 0;
            TPWrite "Supervisao Posicionamento Garra, Servos nao Abriram!";
            Stop;
            GOTO continue;
        ENDIF
        
        SetDO \Sync, PN_OUT_Solicita_Abertura, 0;
            
	ENDPROC
    
    !*************************************************************************************************************************
    !Rotinas de Garra: Fechar (Avançar Servos Para o Centro)
    !*************************************************************************************************************************
    PROC GARRA_FecharGarra()
    	!Inicio de ciclo de fechamento de garra
        
        verifica_novamente:   
            nNum_Fam := GInput(PN_IN_Numero_Familia);
            WaitTime 0.2;
            SetGO PN_GO_Modelo_Produto, nNum_Fam;
            WaitTime 0.2;
            
            IF GOutput (PN_GO_Modelo_Produto) = nNum_Fam THEN
                GOTO continue;
            ELSE
                TPWrite "CLP não carregou valor correto para fechamento de garra";
                StopMove;
                GOTO verifica_novamente;
            ENDIF              
            
        continue:

            !Revisa se cilindros estão recuados
            WaitDI DI_Fixa_Peça_1_Av, 0\MaxTime:= 5\TimeFlag:=timeout_rc1;
            WaitDI DI_Fixa_Peça_2_Av, 0\MaxTime:= 5\TimeFlag:=timeout_rc2;
            WaitDI DI_Fixa_Peça_1_Rc, 1\MaxTime:= 5\TimeFlag:=timeout_rc3;
            WaitDI DI_Fixa_Peça_2_Rc, 1\MaxTime:= 5\TimeFlag:=timeout_rc4;
            
            !Se inconsistente, avisa erro:
            IF (timeout_rc1 OR timeout_rc2 OR timeout_rc3 OR timeout_rc4) = TRUE THEN
                PulseDO\PLength:=1, PN_OUT_DO_Cil_NRc;
                TPWrite "Inconsistencia Processo, Travas nao estao recuadas!";
                Stop;
                GOTO continue;
            ENDIF
        
            !Solicita Fechamento Servos:
            SetDO \Sync, PN_OUT_Solicita_Fecha_Garra, 1;
            SetDO\Sync, PN_OUT_Solicita_Abertura, 0;    
            
            WaitDI PN_IN_Garra_Aberta, 0\MaxTime:= 5\TimeFlag:=timeout_av1;
            WaitDI PN_IN_Garra_Fechada, 1\MaxTime:= 5\TimeFlag:=timeout_av2;
            
            !Se não abriu, avisa erro:
            IF (timeout_av1 OR timeout_av2) = TRUE THEN
                PulseDO\PLength:=1, PN_OUT_DO_Cil_NAv;
                SetDO \Sync, PN_OUT_Solicita_Fecha_Garra, 0;
                TPWrite "Supervisao Posicionamento Garra, Servos nao Fecharam!";
                Stop;
                GOTO continue;
            ENDIF
            
            SetDO \Sync, PN_OUT_Solicita_Fecha_Garra, 0;                
	ENDPROC
    
    !*************************************************************************************************************************
    !Rotinas de Garra: Travar (Avançar Index Cilindros)
    !*************************************************************************************************************************
    PROC GARRA_TravarProduto()
     init_tp:    
        SetDO PN_OUT_DO_Cil_NAv, 0;
        
        !Trava Produto
        SetDO \Sync, DO_Rc_Fixação_Peça, 0;
        SetDO \Sync, DO_Av_Fixação_Peça, 1;
        !Wait sensores avançado
        WaitTime 1;
        WaitDI DI_Fixa_Peça_1_Rc, 0\MaxTime:= 5\TimeFlag:=timeout_av1;
        WaitDI DI_Fixa_Peça_2_Rc, 0\MaxTime:= 5\TimeFlag:=timeout_av2;
        WaitDI DI_Fixa_Peça_1_Av, 1\MaxTime:= 5\TimeFlag:=timeout_av3;
        WaitDI DI_Fixa_Peça_2_Av, 1\MaxTime:= 5\TimeFlag:=timeout_av4;
        IF (timeout_av1 OR timeout_av2 OR timeout_av3 OR timeout_av4) = TRUE THEN
            PulseDO\PLength:=1, PN_OUT_DO_Cil_NAv;
            TPWrite "Supervisao Sensores, Travas não Avançaram";
            Stop;
            GOTO init_tp;
        ENDIF
        
    ENDPROC
    
    !*************************************************************************************************************************
    !Rotinas de Garra: Destravar (Recuar Index Cilindros)
    !*************************************************************************************************************************
    PROC GARRA_DestravarProduto()
    init_dp:  
        SetDO PN_OUT_DO_Cil_NRc, 0;
    
        !Destrava produto na garra
        SetDO \Sync, DO_Av_Fixação_Peça, 0;
        SetDO \Sync, DO_Rc_Fixação_Peça, 1;
        WaitDI DI_Fixa_Peça_1_Av, 0\MaxTime:= 5\TimeFlag:=timeout_rc1;
        WaitDI DI_Fixa_Peça_2_Av, 0\MaxTime:= 5\TimeFlag:=timeout_rc2;
        WaitDI DI_Fixa_Peça_1_Rc, 1\MaxTime:= 5\TimeFlag:=timeout_rc3;
        WaitDI DI_Fixa_Peça_2_Rc, 1\MaxTime:= 5\TimeFlag:=timeout_rc4;
        IF (timeout_rc1 OR timeout_rc2 OR timeout_rc3 OR timeout_rc4) = TRUE THEN
            PulseDO\PLength:=1, PN_OUT_DO_Cil_NRc;
            TPWrite "Supervisao Sensores, Travas não Recuaram";
            Stop;
            GOTO init_dp;
        ENDIF       
    ENDPROC
    
    !*************************************************************************************************************************
    !Rotinas de Garra: Validar Sensor Laser
    !*************************************************************************************************************************
    PROC GARRA_VerificarLaser()
     inicio:
        IF DInput (DI_Pres_Peça_Berço_1) = 0 AND DInput (DI_Pres_Peça_Berço_2) = 1 GOTO Fim;
        
        PulseDO\PLength:=1, PN_OUT_Produto_Existente;
        TPErase;
        TPWrite "Sensor de presença de peça no berço acionado. Verifique";
        Stop;
        GOTO inicio;
        
    Fim:
        SetDO PN_OUT_Produto_Existente, 0;
    ENDPROC
    
    !*************************************************************************************************************************
    !Rotinas de Garra: Validar sensores garra / Garantir que a garra está vazia
    !*************************************************************************************************************************
    PROC GARRA_VerificarGarraVazia()
    !Verifica se robô tem peça na garra ou não 
    
    Verifica:
        IF DI_Pres_Peça_Garra_2 = 1 AND DI_Pres_Peça_Garra_1 = 0 THEN 
            GOTO Fim;
        ELSE
            TPErase;
            TPWrite "Deposite manualmente o produto encontrado na garra e reinicie o ciclo";
            TPWrite "Após depositar o produto, adicionar código do produto na IHM";
            IF GInput (PN_IN_Numero_Programa) = 2 THEN
                TPWrite "Programa 'Pega na Esteira de Entrada' necessita de garra vazia para iniciar";
                PulseDO\PLength:=2, PN_OUT_Pos_Home_Manual;
            ELSEIF GInput (PN_IN_Numero_Programa) = 4 THEN
                TPWrite "Programa 'Pega Peça no Buffer' necessita de garra vazia para iniciar";
                PulseDO\PLength:=2, PN_OUT_Pos_Home_Manual;
            ENDIF    
            WaitUntil DI_Pres_Peça_Garra_2 = 1 AND DI_Pres_Peça_Garra_1 = 0;
            GOTO Verifica;
        ENDIF
    Fim:
    ENDPROC

    !*************************************************************************************************************************
    !Função para ser chamada pela manutenção (retorno para home)
    !*************************************************************************************************************************
    PROC EXTRAS_PosicionaHomeManual()
        !Movimente manualmente o robô até uma posição em que esteja livre de colisão e acione os comandos abaixo.
        
    verif: 
        pPosição_Atual := CRobT(\Tool:=tGarra \WObj:=wobj0);
        
        nAux_Limite_Low := 550;
        IF (pPosição_Atual.trans.z > nAux_Limite_Low) THEN
            GOTO DoHome;
        ELSE
            TPErase;
            TPWrite "Posicione Robô mais Alto";
            Stop\NoRegain;
            GOTO verif;
        ENDIF
        
    DoHome:
        MoveJ pPosição_Trabalho, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=wobj0;
        SetDO PN_OUT_Pos_Home_Manual, 0;
        
        
    ENDPROC
    
    !*************************************************************************************************************************
    !*************************************************************************************************************************
    !*************************************************************************************************************************    
    !FUNÇÕES NÃO MAIS UTILIZADAS
    PROC DEPRECATED_VerificacaoInicial ()
        VAR num Passo_Verif_Inic;
        VAR num RespostaTP;
        CONST pos pOffset_Esteiras_Z := [0,0,300];
        CONST pos pOffset_Esteiras_XZ := [100,0,300];
     
    inicio:   
    
        !Verifica posição atual do robô
        pPosição_Atual := CRobT(\Tool:=tGarra \WObj:=wobj0);
        
        IF pPosição_Atual.extax.eax_a > 2700 AND pPosição_Atual.trans.x < -1700 THEN
            Passo_Verif_Inic := 10;
            GOTO Analise;
        ENDIF
        
        IF pPosição_Atual.trans.x < 650 THEN
            Passo_Verif_Inic := 20;    
        ENDIF
        
        IF pPosição_Atual = pHome_Position OR pPosição_Atual = pPosição_Trabalho THEN
            GOTO Final;
        ENDIF
        
        Passo_Verif_Inic := 30;
        
   Analise:     
        
        !****************************************************************!
        !               ANALISA O QUE FAZER EM CADA CASO                 !
        !****************************************************************!
        ! Passo_Verif_Inic = 10 - Acima das Esteiras                     !
        ! Passo_Verif_Inic = 20 - Abaixo região segura acima dos berços  !
        ! Passo_Verif_Inic = 30 - Demais regiões                         !
        !****************************************************************!
        
        TEST Passo_Verif_Inic
        
        CASE 10:
            !Verifica presença de peça na garra
            IF (DI_Pres_Peça_Garra_2 = 1 AND DI_Pres_Peça_Garra_1 = 0) OR (DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND DI_Fixa_Peça_1_Rc = 1 AND DI_Fixa_Peça_2_Rc = 1 AND PN_IN_Garra_Aberta = 1) OR (DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND DI_Fixa_Peça_1_Av = 1 AND DI_Fixa_Peça_2_Av = 1 AND PN_IN_Garra_Fechada = 1) THEN
                GOTO movimento_esteiras;
            ENDIF
            
            IF DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND ((DI_Fixa_Peça_1_Rc = 1 OR DI_Fixa_Peça_2_Rc = 1) AND (PN_IN_Garra_Fechada = 1 OR PN_IN_Garra_Aberta = 0)) THEN
                TPReadFK RespostaTP, "Garanta manualmente garra em condições de movimentação e pressione OK", stEmpty, stEmpty, stEmpty, stEmpty, "OK";
                IF (RespostaTP = 5 OR RespostaTP = 0) GOTO inicio;
            ENDIF
                       
    movimento_esteiras:
        
            pPosição_Desejada := pPosição_Atual;
            pPosição_Desejada.trans := pPosição_Desejada.trans + pOffset_Esteiras_Z;
            MoveL pPosição_Desejada, v30, z10, tGarra \WObj:=wobj0;
        
            pPosição_Desejada := pPosição_Atual;
            pPosição_Desejada.trans := pPosição_Desejada.trans + pOffset_Esteiras_XZ;
            MoveL pPosição_Desejada, v30, z10, tGarra \WObj:=wobj0;
            
            GOTO Final;
            
        CASE 20:
            !Verifica presença de peça na garra
            IF (DI_Pres_Peça_Garra_2 = 1 AND DI_Pres_Peça_Garra_1 = 0) OR (DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND DI_Fixa_Peça_1_Rc = 1 AND DI_Fixa_Peça_2_Rc = 1 AND PN_IN_Garra_Aberta = 1) OR (DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND DI_Fixa_Peça_1_Av = 1 AND DI_Fixa_Peça_2_Av = 1 AND PN_IN_Garra_Fechada = 1) THEN 
                GOTO movimento_berços;
            ENDIF
        
            IF DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND ((DI_Fixa_Peça_1_Rc = 1 OR DI_Fixa_Peça_2_Rc = 1) AND (PN_IN_Garra_Fechada = 1 OR PN_IN_Garra_Aberta = 0))  THEN !Falta sinal garra aberta
                TPReadFK RespostaTP, "Garanta manualmente garra em condições de movimentação e pressione OK", stEmpty, stEmpty, stEmpty, stEmpty, "OK";
                IF (RespostaTP = 5 OR RespostaTP = 0) GOTO inicio;
            ENDIF
                               
        movimento_berços:
        
            pPosição_Desejada := pPosição_Atual;
            pPosição_Desejada.trans.z := 660;
            MoveL pPosição_Desejada, v30, z10, tGarra \WObj:=wobj0;
            
            GOTO Final;
            
        CASE 30:
            
            !Verifica presença de peça na garra
            IF (DI_Pres_Peça_Garra_2 = 1 AND DI_Pres_Peça_Garra_1 = 0) OR (DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND DI_Fixa_Peça_1_Rc = 1 AND DI_Fixa_Peça_2_Rc = 1 AND PN_IN_Garra_Aberta = 1) OR (DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND DI_Fixa_Peça_1_Av = 1 AND DI_Fixa_Peça_2_Av = 1 AND PN_IN_Garra_Fechada = 1) THEN 
                GOTO Final;
            ENDIF
        
            IF DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND ((DI_Fixa_Peça_1_Rc = 1 OR DI_Fixa_Peça_2_Rc = 1) AND (PN_IN_Garra_Fechada = 1 OR PN_IN_Garra_Aberta = 0))  THEN !Falta sinal garra aberta
                TPReadFK RespostaTP, "Garanta manualmente garra em condições de movimentação e pressione OK", stEmpty, stEmpty, stEmpty, stEmpty, "OK";
                IF (RespostaTP = 5 OR RespostaTP = 0) GOTO inicio;
            ENDIF
                 
        DEFAULT:
            
            TPErase;
            TPWrite "Não foi possível localizar o robô. Movimente manualmente para a posição inicial";
            Stop;
            GOTO inicio;
            
        ENDTEST
   
   Final:  
        Passo_Verif_Inic := 0;
        
        !Se em posição inicial e não foi solicitada parada, encerra rotina
        IF pPosição_Atual = pPosição_Trabalho GOTO Fim;
        
        !Vai para posição de trabalho
        MoveJ pPosição_Trabalho, sMov_Geral_Com_Produto, fine, tGarra \WObj:=wobj0;
                
   Fim:     
    ENDPROC
    
    
    !*************************************************************************************************************************
    !FUNÇÕES EXTRAS: Movimenta Para o Angulo Zero de cada eixo
    !*************************************************************************************************************************
    PROC EXTRAS_MovimentaEixosZero()
      !Ponto Zero do Robo...  
      MoveAbsJ [[0,0,0,0,0,0],[0,9E+09,9E+09,9E+09,9E+09,9E+09]] \NoEOffs, v400, fine, tool0;
      !
	ENDPROC
    
    !*************************************************************************************************************************
    !FUNÇÕES EXTRAS: Teste do 7o eixo
    !*************************************************************************************************************************
    PROC EXTRAS_Teste7oEixo()
        CONST robtarget pPos1:=[[1782.23,-9.35,841.69],[0.0118043,0.0684442,-0.99757,-0.00543028],[-1,0,-1,0],[2708.4,9E+09,9E+09,9E+09,9E+09,9E+09]];
        CONST robtarget pPos2:=[[1782.23,-9.35,841.69],[0.0118043,0.0684442,-0.99757,-0.00543028],[-1,0,-1,0],[-2708.4,9E+09,9E+09,9E+09,9E+09,9E+09]];
        
        WHILE TRUE DO
            MoveL pPos1, v5000, z50, tGarra\WObj:=wobj0;
            MoveL pPos2, v5000, z50, tGarra\WObj:=wobj0;
        ENDWHILE
       
    ENDPROC
    
    
   
    
    
    !*************************************************************************************************************************
    !*************************************************************************************************************************
    !*************************************************************************************************************************    
    !FUNÇÕES NÃO MAIS UTILIZADAS

    
	PROC DEPRECATED_TesteEixo1()
		MoveJ [[4357.31,-1398.45,1978.14],[0.687563,0.27921,0.236299,0.627265],[-1,0,1,1],[2346.44,9E+09,9E+09,9E+09,9E+09,9E+09]], v2500, z50, tGarra\WObj:=wBuffer_Esq;
		WaitTime\InPos, 1;
		MoveJ [[3711.49,-1299.99,468.29],[0.0309804,-0.747554,-0.66329,0.0158269],[-1,0,1,0],[2346.44,9E+09,9E+09,9E+09,9E+09,9E+09]], v2500, z50, tGarra\WObj:=wBuffer_Esq;
		WaitTime\InPos, 1;
	ENDPROC
  
    PROC DEPRECATED_Routine1()
		pMov_Pega_Depos_Buffer := pPega_Esteira_Entrada_Fam_1;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + pOfst_Aprox_Berço_Est_Saida;
        MoveJ pMov_Pega_Depos_Buffer, v1000, fine, tGarra\WObj:=wBuffer_Esq;
        MoveL pPega_Esteira_Entrada_Fam_1, v200, fine, tGarra\WObj:=wBuffer_Esq;
        MoveL pMov_Pega_Depos_Buffer, v2500, fine, tGarra\WObj:=wBuffer_Esq;
        MoveJ pPosição_Trabalho, v1000, fine, tGarra\WObj:=wobj0;
	ENDPROC
    
    PROC DEPRECATED_TesteAfericao()
      !Ponto de Referencia p/ troca de lagarto..
      MoveJ pCheck_00,v500,z30,tGarra\WObj:=wobj0;
      MoveJ pCheck_01,v500,z30,tGarra\WObj:=wobj0;
      MoveJ pCheck_02,v500,z30,tGarra\WObj:=wobj0;
      MoveL Offs(pCheck,0,0,400),v500,z30,tGarra\WObj:=wobj0;
      MoveL Offs(pCheck,0,0,100), v200, z30, tGarra\WObj:=wobj0;
      MoveL Offs(pCheck,0,0,40), v40, z5, tGarra\WObj:=wobj0;
      MoveL pCheck, v20, fine, tGarra\WObj:=wobj0;
      WaitUntil\InPos,TRUE;
      WaitTime\InPos, 1.5;
      !Stop;
      MoveL Offs(pCheck,0,0,40),v100,z5,tGarra\WObj:=wobj0;
      MoveL Offs(pCheck,0,0,100),v400,z30,tGarra\WObj:=wobj0;
      MoveL Offs(pCheck,0,0,400),v500,z30,tGarra\WObj:=wobj0;
      MoveJ pCheck_02,v500,z30,tGarra\WObj:=wobj0;
      MoveJ pCheck_01,v500,z30,tGarra\WObj:=wobj0;
      MoveJ pCheck_00,v500,z30,tGarra\WObj:=wobj0;
      !
    ENDPROC
    
ENDMODULE