MODULE MODULE_T_ROB1
    !*************************************************************************************************************************
    !Declaração de Variáveis
    !*************************************************************************************************************************       
    PERS wobjdata gWOBJDATA_FrameAtual;
    
    !Áreas de Trabalho
    !São o elemento mais importante pois garante o posicionamento de cada ponto
    !Nota, este robô não faz o translado automático X/Y/Z de acordo com o 7o eixo
    TASK PERS wobjdata FRAME_BufferA:=[FALSE,TRUE,"",[[-1256.49,1438.58,160.877],[0.999979,0.000183924,0.000269214,0.006496]],[[0,0,0],[1,0,0,0]]];
    TASK PERS wobjdata FRAME_BufferB:=[FALSE,TRUE,"",[[1561.57,592.818,111.738],[0.713523,0.00206713,-0.00208162,-0.700626]],[[0,0,0],[1,0,0,0]]];
    TASK PERS wobjdata FRAME_BufferC:=[FALSE,TRUE,"",[[1630.62,-1257.46,116.35],[0.00373026,-0.000523822,-0.000211863,-0.999993]],[[0,0,0],[1,0,0,0]]];
    TASK PERS wobjdata FRAME_PalletEntrada:=[FALSE,TRUE,"",[[-2197.3,1274.56,425.547],[0.701353,0.0039156,-0.00227027,0.712799]],[[0,0,0],[1,0,0,0]]];
    TASK PERS wobjdata FRAME_PalletSaida:=[FALSE,TRUE,"",[[-2365.58,-1158.69,461.896],[0.701359,0.00301904,0.000504585,0.712801]],[[0,0,0],[1,0,0,0]]];
    
    
    !Posições de Trabalho criadas indivualmente de modo a facilitar a remarcação dos mesmos através do TP (Modo "Manobra")
	
    !Gerais: Em frente aos pallets
    PERS robtarget pFrente_PalletEntrada:=[[-1492.35,1351.85,676.90],[0.00777125,0.88054,-0.473907,0.00147931],[1,0,0,0],[2420.44,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pFrente_PalletSaida:=[[-1744.16,-520.98,857.74],[0.00855216,0.863021,0.505065,-0.00546725],[-2,0,-1,0],[2788.59,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pPosicaoHome:=[[1288.63,-99.78,689.27],[0.0038915,0.292324,0.956271,0.00878656],[-1,0,0,0],[2420.46,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    PERS jointtarget JOINTTARGET_PosicaoCalibracao:=[[0,0,0,0,0,0],[0,9E+09,9E+09,9E+09,9E+09,9E+09]];
        
    !Pontos de Pega Pallet Entrada
    PERS robtarget pPega_Esteira_Entrada_Fam_1:=[[52.48,332.60,-185.55],[0.0119072,-0.252716,-0.967462,-0.00293948],[1,0,1,0],[2699.95,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pPega_Esteira_Entrada_Fam_2:=[[84.59,253.95,-184.16],[0.0103448,-0.25981,-0.965602,-0.00199653],[1,0,0,0],[2788.58,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pPega_Esteira_Entrada_Fam_3:=[[80.61,213.00,-184.74],[0.00965391,-0.296568,-0.954958,-0.00307807],[1,0,1,0],[2785.91,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pPega_Esteira_Entrada_Fam_4:=[[112.59,219.02,-185.79],[0.00849077,-0.290116,-0.956942,-0.00460653],[1,0,1,0],[2780.34,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    !Pontos de Entrega Pallet Saída
    PERS robtarget pDepos_Esteira_Saída_Fam_1:=[[637.57,186.38,-208.88],[0.00636028,0.966235,-0.257345,-0.011075],[-2,0,-1,0],[2800,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pDepos_Esteira_Saída_Fam_2:=[[608.44,186.62,-208.53],[0.00494979,0.965276,-0.260952,-0.0110247],[-2,0,-1,0],[2788.59,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pDepos_Esteira_Saída_Fam_3:=[[612.87,239.89,-207.04],[0.00398511,0.954804,-0.296903,-0.0134354],[-2,0,-1,0],[2786.35,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pDepos_Esteira_Saída_Fam_4:=[[578.02,238.79,-208.10],[0.00481415,0.955245,-0.295495,-0.0128735],[-2,0,-1,0],[2780.31,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    !*************************************************************************************************
    !*************************************************************************************************
    !Pontos de Pega/Entrega no Buffer Família 1 (HL2)
    !*************************************************************************************************
    !*************************************************************************************************
    
    !Work Object / Frame / Area do Buffer "A" (Mesmo lado da Esteira de Entrada)
    PERS robtarget pBuffer_Pos_10_Fam_1:=[[2827.28,930.199,-316.757],[0.000838065,0.499669,-0.866178,-0.00812164],[0,0,-1,0],[-2793.47,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_11_Fam_1:=[[2822.83,331.34,-318.729],[0.0016995,-0.499688,0.866174,0.00721706],[0,0,-1,0],[-2793.46,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_12_Fam_1:=[[2814.88,-266.091,-322.542],[0.00309883,-0.496926,0.86777,0.0056035],[0,0,-1,0],[-2794.65,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_16_Fam_1:=[[2226.49,932.728,-317.244],[0.000551115,0.498256,-0.867023,-0.00358419],[0,0,0,0],[-2793.49,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_17_Fam_1:=[[2223.48,336.277,-317.779],[0.000531591,-0.497211,0.867612,0.00555667],[0,0,0,0],[-2793.47,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_18_Fam_1:=[[2258.7,-259.691,-316.433],[0.000971136,-0.489636,0.87191,0.00536962],[0,0,-1,0],[-2750.94,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_22_Fam_1:=[[1625.61,934.753,-313.691],[0.00315474,0.496814,-0.867849,-0.0020891],[0,0,0,0],[-2793.49,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_23_Fam_1:=[[1620.77,339.45,-314.98],[0.00373865,0.499653,-0.866218,-0.000590832],[0,0,0,0],[-2793.48,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_24_Fam_1:=[[2249.24,-258.325,-318.439],[0.000186622,-0.489828,0.871811,0.00381922],[0,0,-1,0],[-2159.69,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_28_Fam_1:=[[1384.53,936.888,-313.98],[0.00197184,0.496558,-0.868001,8.696E-05],[0,0,0,0],[-2432.95,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_29_Fam_1:=[[1414.58,340.22,-317.281],[0.00374635,0.488135,-0.87276,-0.000527408],[0,0,0,0],[-2394.78,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_30_Fam_1:=[[2227.62,-260.278,-317.704],[0.000832716,0.494097,-0.869401,-0.00322973],[0,0,-1,0],[-1581.5,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_34_Fam_1:=[[1368.09,938.618,-315.486],[0.00198914,0.496833,-0.867844,7.6419E-05],[0,0,0,0],[-1848.33,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_35_Fam_1:=[[1413,340.851,-314.885],[0.00586762,0.491814,-0.870681,0.000374932],[0,0,0,0],[-1799.87,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_36_Fam_1:=[[2228.62,-229.16,-319.48],[-0.000759435999999999,0.494097,-0.869418,-0.004150402],[0,0,-1,0],[-981.031,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_40_Fam_1:=[[1369.6,939.22,-312.185],[0.00392978,0.499202,-0.866471,-0.00332684],[0,0,0,0],[-1245.07,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_41_Fam_1:=[[1417.56,341.523,-314.317],[0.00271596,0.491791,-0.870708,-0.00142342],[0,0,0,0],[-1191.96,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_42_Fam_1:=[[2237.71,-257.857,-315.812],[0.000689185,-0.494067,0.869414,0.00414129],[0,0,-1,0],[-368.288,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_46_Fam_1:=[[1363.5,938.878,-314.297],[0.00517082,0.49764,-0.867364,-0.0025772],[0,0,0,0],[-651.84,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_47_Fam_1:=[[1411.38,341.614,-319.142],[0.0027068,0.491777,-0.870716,-0.0014191],[0,0,0,0],[-597.726,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_48_Fam_1:=[[2266.96,-260.851,-320.654],[0.000707845,-0.49405,0.869423,0.00416466],[0,0,-1,0],[259.321,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_52_Fam_1:=[[1354.16,938.735,-314.972],[0.00308698,0.49987,-0.866087,-0.00381076],[0,0,0,0],[-59.6107,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_53_Fam_1:=[[1417.75,339.456,-315.815],[0.0049295,0.498678,-0.866774,-0.000148885],[0,0,0,0],[7.90545,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_54_Fam_1:=[[2286.91,-260.602,-316.677],[0.00137324,0.497718,-0.867276,-0.0103731],[0,0,-1,0],[878.888,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_58_Fam_1:=[[1335.31,937.178,-316.509],[0.00314929,0.49694,-0.867771,-0.00378503],[0,0,0,0],[521.929,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_59_Fam_1:=[[1429.98,342.227,-316.719],[0.00374799,0.491798,-0.870701,-0.000788296],[0,0,0,0],[620.794,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_60_Fam_1:=[[2289.12,-259.206,-317.738],[0.00140559,0.496706,-0.867856,-0.0103743],[0,0,-1,0],[1482.09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_64_Fam_1:=[[1311.82,938.896,-317.507],[0.0031637,0.495523,-0.868581,-0.00376458],[0,0,0,0],[1099.02,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_65_Fam_1:=[[1429.01,339.07,-319.63],[0.00376459,0.494147,-0.86937,-0.000768544],[0,0,0,0],[1219.4,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_66_Fam_1:=[[2280.96,-262.45,-323.202],[0.0013677,0.497539,-0.867378,-0.010411],[0,0,-1,0],[2073.79,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_70_Fam_1:=[[1312.05,937.067,-315.018],[0.00216421,0.501943,-0.864887,-0.00432023],[0,0,0,0],[1698.81,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_71_Fam_1:=[[1439.05,340.939,-319.68],[0.00192148,0.491772,-0.870722,-0.00113572],[0,0,0,0],[1833.6,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_72_Fam_1:=[[2303.64,-258.888,-316.733],[0.000629365,-0.492386,0.870376,0.00130098],[0,0,-1,0],[2700.01,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_76_Fam_1:=[[1311.64,937.634,-316.993],[0.00157046,0.493781,-0.869572,-0.00473382],[0,0,0,0],[2298.72,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_77_Fam_1:=[[1451.54,339.208,-320.625],[0.00524425,0.490516,-0.871409,-0.00379576],[0,0,0,0],[2443.93,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_78_Fam_1:=[[551.586,-256.698,-318.758],[0.00606442,0.489559,-0.871939,0.00431487],[1,0,0,0],[1553,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_82_Fam_1:=[[1113.36,936.877,-315.58],[0.00440577,0.496239,-0.868169,-0.0031236],[1,0,0,0],[2698.72,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_83_Fam_1:=[[1105.63,341.83,-314.876],[0.00353852,0.489239,-0.872143,0.000785553],[1,0,0,0],[2699.9,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_84_Fam_1:=[[516.686,-255.996,-320.617],[0.00609841,0.493401,-0.86977,0.00428121],[1,0,0,0],[2115.16,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_88_Fam_1:=[[510.69,940.045,-315.366],[0.00494501,0.492649,-0.87021,-0.00280096],[1,0,0,0],[2698.7,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_89_Fam_1:=[[507.58,340.45,-321.26],[0.00622223,0.49729,-0.86755,0.00455743],[1,0,0,0],[2700,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_90_Fam_1:=[[499.038,-256.382,-316.771],[0.00819882,0.49311,-0.869922,0.00355176],[1,0,0,0],[2700,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_94_Fam_1:=[[-89.377,943.48,-316.356],[0.00607274,0.495949,-0.868329,0.00150089],[1,0,0,0],[2698.73,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_95_Fam_1:=[[-89.4085,345.094,-317.546],[0.00819508,0.497539,-0.867396,0.00344082],[1,0,0,0],[2700.04,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_96_Fam_1:=[[-94.97,-254.86,-319.99],[0.00816063,0.497529,-0.867402,0.00345152],[1,0,0,0],[2700,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    !Work Object / Frame / Area do Buffer "B" (Conjunto Isolado de 9 posições, no extremo do 7o eixo)
    PERS robtarget pBuffer_Pos_1_Fam_1:=[[-47.51,1234.21,-275.49],[0.0117074,0.494342,-0.869178,-0.00439054],[0,0,0,0],[-2731.18,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_2_Fam_1:=[[549.73,1232.64,-274.75],[0.0117116,0.494344,-0.869177,-0.00438275],[0,0,0,0],[-2731.18,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_3_Fam_1:=[[1155.92,1235.07,-274.32],[0.0105347,0.49721,-0.867559,-0.00363599],[-1,0,0,0],[-2731.16,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_4_Fam_1:=[[-47.86,635.32,-275.10],[0.00912507,0.49435,-0.86921,-0.00293197],[0,0,0,0],[-2731.18,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_5_Fam_1:=[[552.77,634.61,-276.77],[0.00595222,0.494353,-0.86924,-0.00113871],[0,0,0,0],[-2731.18,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_6_Fam_1:=[[1151.42,635.96,-276.72],[0.00341471,0.494374,-0.869225,-0.00560013],[-1,0,0,0],[-2731.18,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_7_Fam_1:=[[-52.16,39.55,-270.54],[0.00913057,0.494322,-0.869231,0.000469403],[0,0,0,0],[-2731.2,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_8_Fam_1:=[[547.95,37.91,-272.43],[0.00779702,0.494328,-0.869241,0.000279546],[0,0,0,0],[-2731.2,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_9_Fam_1:=[[1150.16,36.39,-274.82],[0.00341148,0.494372,-0.869226,-0.00560617],[-1,0,0,0],[-2731.18,9E+09,9E+09,9E+09,9E+09,9E+09]];

    !Work Object / Frame / Area do Buffer "C" (Mesmo lado da Esteira de Saída)
    PERS robtarget pBuffer_Pos_13_Fam_1:=[[-33.4414,-67.7406,-273.374],[0.00999911,0.499367,-0.866309,0.00642002],[-1,0,0,0],[-2796.99,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_14_Fam_1:=[[-31.1377,530.64,-271.414],[0.00855604,0.499253,-0.866409,0.00294368],[-1,0,0,0],[-2796.99,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_15_Fam_1:=[[-30.3818,1131.45,-275.185],[0.0118065,0.499487,-0.86624,0.00130216],[-1,0,0,0],[-2799.57,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_19_Fam_1:=[[372.523,-66.774,-277.283],[0.0077623,0.497867,-0.867215,0.00241794],[-1,0,0,0],[-2603.04,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_20_Fam_1:=[[557.94,530.798,-274.625],[0.00735695,0.499124,-0.866498,0.00157167],[-1,0,0,0],[-2787.53,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_21_Fam_1:=[[569.638,1131.57,-274.326],[0.00870063,0.499517,-0.86626,-0.000421994],[-1,0,0,0],[-2799.62,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_25_Fam_1:=[[371.196,-67.7863,-279.432],[0.00773691,0.497914,-0.867189,0.00243678],[-1,0,0,0],[-2001.29,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_26_Fam_1:=[[1166.3,536.786,-274.054],[0.00552082,0.499124,-0.866512,0.00125445],[-1,0,0,0],[-2796.8,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_27_Fam_1:=[[1169.84,1132.91,-276.858],[0.00597137,0.499485,-0.8663,-0.00195785],[-1,0,0,0],[-2799.62,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_31_Fam_1:=[[368.727,-65.5465,-283.206],[0.0077132,0.497942,-0.867172,0.00244153],[-1,0,0,0],[-1396.56,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_32_Fam_1:=[[1486.11,533.664,-283.008],[0.00448878,0.496113,-0.868244,-0.00218996],[-1,0,0,0],[-2513.26,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_33_Fam_1:=[[1440.16,1131.38,-276.051],[0.00578303,0.496598,-0.867959,-0.00202038],[-1,0,0,0],[-2468.66,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_37_Fam_1:=[[377.703,-65.0167,-285.109],[0.00767423,0.498013,-0.867132,0.00245889],[-1,0,0,0],[-807.594,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_38_Fam_1:=[[1492.36,534.264,-284.977],[0.00447971,0.496092,-0.868256,-0.00226083],[-1,0,0,0],[-1921.91,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_39_Fam_1:=[[1413.76,1132.86,-277.102],[0.00924324,0.496424,-0.867996,-0.00779978],[-1,0,0,0],[-1843.62,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_43_Fam_1:=[[369.469,-69.0626,-283.837],[0.0076351,0.498063,-0.867104,0.00247969],[-1,0,0,0],[-196.957,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_44_Fam_1:=[[1506.27,534.544,-284.193],[0.00448446,0.49475,-0.869021,-0.00230721],[-1,0,0,0],[-1334.48,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_45_Fam_1:=[[1401.5,1132.06,-282.311],[0.00576301,0.493777,-0.869567,-0.00197373],[-1,0,0,0],[-1228.35,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_49_Fam_1:=[[352.138,-69.2085,-271.942],[0.00995562,0.495102,-0.868753,0.00658035],[-1,0,0,0],[418.422,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_50_Fam_1:=[[1504.73,532.443,-278.823],[0.00455683,0.493008,-0.87001,-0.00231244],[-1,0,0,0],[-731.973,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_51_Fam_1:=[[1455.78,1130.76,-278.175],[0.00757715,0.495817,-0.868384,-0.00419566],[-1,0,0,0],[-681.224,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_55_Fam_1:=[[397.637,-73.4174,-272.724],[0.00758917,0.496464,-0.868021,0.0024668],[-1,0,0,0],[973.403,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_56_Fam_1:=[[1514.2,531.047,-286.201],[0.00456622,0.49269,-0.87019,-0.00235533],[-1,0,0,0],[-141.514,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_57_Fam_1:=[[1601.43,1129.33,-275.734],[0.00613447,0.496091,-0.868243,-0.00331651],[-1,0,0,0],[-227.843,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_61_Fam_1:=[[383.608,-71.9439,-286.12],[0.00754475,0.498203,-0.867024,0.00251956],[-1,0,0,0],[1589,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_62_Fam_1:=[[1539.1,529.49,-287.811],[0.00366212,0.493837,-0.869547,-0.00068099],[-1,0,0,0],[433.83,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_63_Fam_1:=[[1591.62,1127.07,-284.8],[0.00460728,0.499781,-0.866136,-0.00240159],[-1,0,0,0],[383.213,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_67_Fam_1:=[[404.679,-76.8446,-286.014],[0.00751911,0.498216,-0.867017,0.00256082],[-1,0,0,0],[2167.52,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_68_Fam_1:=[[1568.93,526.371,-287.571],[0.00363894,0.496774,-0.867872,-0.000713227],[-1,0,0,0],[1005.38,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_69_Fam_1:=[[1574.16,1124.41,-276.858],[0.00366144,0.496764,-0.867878,-0.000750583],[-1,0,0,0],[1001.87,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_73_Fam_1:=[[384.819,-75.1359,-285.376],[0.00751432,0.495215,-0.868735,0.00235727],[-1,0,0,0],[2786.11,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_74_Fam_1:=[[1146.99,524.843,-286.472],[0.00432828,0.495863,-0.86839,0.000504022],[-1,0,0,0],[2027.08,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_75_Fam_1:=[[1149.45,1121.86,-275.348],[0.00433483,0.494556,-0.869135,0.0004538],[-1,0,0,0],[2024.15,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_79_Fam_1:=[[2361.26,-70.5212,-288.842],[0.000407688,-0.495332,0.868701,0.00240878],[-2,0,-1,0],[1412.91,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_80_Fam_1:=[[1751.14,524.362,-287.595],[0.00238019,0.494214,-0.869337,-0.000747068],[-2,0,0,0],[2022.56,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_81_Fam_1:=[[1750.26,1120.84,-279.383],[0.00286625,0.500995,-0.865445,-0.000401329],[-2,0,0,0],[2024.17,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_85_Fam_1:=[[2348.18,-71.2283,-284.81],[0.0004382,-0.4952,0.868776,0.0024],[-2,0,-1,0],[2024.14,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_86_Fam_1:=[[1584.19,523.513,-286.864],[0.00308928,0.495478,-0.868612,-0.00244489],[-1,0,0,0],[2787.91,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_87_Fam_1:=[[1584.67,1121.74,-283.883],[0.00307691,0.497453,-0.867482,-0.00240506],[-1,0,0,0],[2790.39,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_91_Fam_1:=[[2595.08,-74.1934,-287.132],[0.000513642,0.494769,-0.869023,-0.00158785],[-2,0,-1,0],[2376.75,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_92_Fam_1:=[[2182.89,521.732,-285.92],[0.000540437,0.494725,-0.869048,-0.00160289],[-2,0,0,0],[2789.62,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_93_Fam_1:=[[2184.77,1121.38,-284.96],[0.00198099,0.498387,-0.866944,-0.00401164],[-2,0,0,0],[2790.37,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_97_Fam_1:=[[2786.62,-74.6257,-286.777],[0.000757705,0.50039,-0.865754,-0.00895475],[-2,0,-1,0],[2790.33,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_98_Fam_1:=[[2785.94,523.694,-278.928],[0.00200251,0.499763,-0.866137,-0.00636592],[-2,0,-1,0],[2790.32,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_99_Fam_1:=[[2788.06,1120.93,-277.24],[0.00166713,0.502728,-0.864441,-0.00209501],[-2,0,0,0],[2790.28,9E+09,9E+09,9E+09,9E+09,9E+09]];


    
    !*************************************************************************************************
    !*************************************************************************************************
    !Pontos de Pega/Entrega no Buffer Família 2 (HL4)
    !*************************************************************************************************
    !*************************************************************************************************
    
    !Work Object / Frame / Area do Buffer "A" (Mesmo lado da Esteira de Entrada)
    PERS robtarget pBuffer_Pos_10_Fam_2:=[[2818.05,959.917,-310.12],[0.00151254,0.496084,-0.868199,-0.0113901],[0,0,-1,0],[-2793.47,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_11_Fam_2:=[[2812.66,359.582,-314.148],[0.00344896,-0.49969,0.866193,0.00281596],[0,0,-1,0],[-2790.49,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_12_Fam_2:=[[2805.02,-235.682,-316.963],[0.00195107,0.497629,-0.867372,-0.00523026],[0,0,-1,0],[-2790.16,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_16_Fam_2:=[[2216.87,960.872,-311.714],[0.00739875,0.498171,-0.866961,-0.0122635],[0,0,0,0],[-2790.6,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_17_Fam_2:=[[2214.08,364.711,-315.164],[0.00487356,0.497206,-0.867617,-0.00206604],[0,0,0,0],[-2789.35,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_18_Fam_2:=[[2251.38,-228.687,-316.028],[0.000480222,0.492785,-0.870148,-0.00261209],[0,0,-1,0],[-2744.47,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_22_Fam_2:=[[1617.15,964.751,-309.766],[0.010596,0.496724,-0.86779,-0.00971039],[0,0,0,0],[-2790.54,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_23_Fam_2:=[[1611.47,368.172,-314.433],[0.0109035,0.499569,-0.86618,-0.00660736],[0,0,0,0],[-2793.49,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_24_Fam_2:=[[2239.08,-228.758,-313.633],[0.000771437,0.489864,-0.871795,-0.00264024],[0,0,-1,0],[-2161.99,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_28_Fam_2:=[[1375.14,964.822,-310.509],[0.011032,0.496456,-0.867939,-0.00958135],[0,0,0,0],[-2429.11,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_29_Fam_2:=[[1405.13,368.313,-311.787],[0.00925706,0.490831,-0.871165,-0.00838093],[0,0,0,0],[-2394.8,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_30_Fam_2:=[[2216.73,-230.467,-311.744],[0.00558054,0.494039,-0.869346,-0.0114568],[0,0,-1,0],[-1584.69,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_34_Fam_2:=[[1358.51,968.398,-309.069],[0.0101948,0.495222,-0.868683,-0.00651734],[0,0,0,0],[-1845.18,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_35_Fam_2:=[[1403.67,369.932,-310.12],[0.0122796,0.491749,-0.870612,-0.00824807],[0,0,0,0],[-1800.02,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_36_Fam_2:=[[2217.35,-229.221,-309.812],[0.00824006,0.493949,-0.869357,-0.0128875],[0,0,-1,0],[-984.308,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_40_Fam_2:=[[1359.43,967.553,-308.396],[0.0109322,0.49641,-0.867951,-0.0109389],[0,0,0,0],[-1244.74,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_41_Fam_2:=[[1408.22,370.577,-310.802],[0.00416062,0.491797,-0.870687,-0.00479794],[0,0,0,0],[-1192.14,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_42_Fam_2:=[[2224.96,-230.869,-314.271],[0.00375817,-0.494066,0.869414,-0.00207456],[0,-1,-1,0],[-371.537,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_46_Fam_2:=[[1353.18,966.504,-312.108],[0.0100373,0.497586,-0.867356,-0.00115308],[0,0,0,0],[-648.685,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_47_Fam_2:=[[1402.3,370.83,-312.484],[0.00386504,0.491789,-0.870694,-0.00445292],[0,0,0,0],[-598.295,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_48_Fam_2:=[[2253.43,-231.894,-316.307],[0.00309336,0.494061,-0.869422,0.000153675],[0,0,-1,0],[256.1,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_52_Fam_2:=[[1344.08,966.416,-312.116],[0.00577523,0.493003,-0.870004,-0.00274894],[0,0,0,0],[-59.2164,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_53_Fam_2:=[[1408.35,368.541,-313.621],[0.00552861,0.498639,-0.866785,-0.00345325],[0,0,0,0],[7.68146,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_54_Fam_2:=[[2272.86,-231.955,-314.363],[0.0010261,-0.497881,0.867222,0.00632341],[0,0,-1,0],[875.609,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_58_Fam_2:=[[1323.82,966.23,-314.909],[0.00613933,0.496972,-0.867744,0.0011688],[0,0,0,0],[522.374,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_59_Fam_2:=[[1413.46,370.787,-316.69],[0.00530315,0.49181,-0.870687,0.000196141],[0,0,0,0],[616.251,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_60_Fam_2:=[[2276.61,-229.448,-315.072],[3.70017E-05,-0.496729,0.867879,0.00689672],[0,0,-1,0],[1478.8,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_64_Fam_2:=[[1302.46,967.41,-314.371],[0.00702152,0.495489,-0.868572,-0.0049842],[0,0,0,0],[1099.24,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_65_Fam_2:=[[1413.02,367.684,-315],[0.00427292,0.494855,-0.86894,-0.00658277],[0,0,0,0],[1213.4,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_66_Fam_2:=[[2266.78,-233.692,-316.228],[0.000379695,0.497612,-0.867375,-0.00665348],[0,0,-1,0],[2070.48,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_70_Fam_2:=[[1294.36,963.653,-311.197],[0.0106873,0.498731,-0.866626,-0.0106605],[0,0,0,0],[1695.06,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_71_Fam_2:=[[1426.19,368.816,-314.847],[0.00469765,0.491674,-0.870763,-0.00247764],[0,0,0,0],[1828.57,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_72_Fam_2:=[[2289.78,-232.623,-314.335],[0.00173307,0.494393,-0.869237,0.000782813],[0,0,-1,0],[2696.69,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_76_Fam_2:=[[1296.16,964.825,-312.121],[0.010139,0.49018,-0.871514,-0.00915586],[0,0,0,0],[2295.41,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_77_Fam_2:=[[1430.46,369.116,-315.101],[0.00678681,0.490507,-0.871404,-0.00347203],[0,0,0,0],[2439.28,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_78_Fam_2:=[[543.305,-227.425,-314.459],[0.0108787,0.489522,-0.871918,-0.00300279],[1,0,0,0],[1555.68,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_82_Fam_2:=[[1092.12,962.577,-313.866],[0.00988802,0.491094,-0.871025,-0.00671983],[1,0,0,0],[2695.62,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_83_Fam_2:=[[1090.56,370.045,-315.579],[0.010827,0.485695,-0.87404,-0.00610776],[1,0,0,0],[2695.39,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_84_Fam_2:=[[508.631,-226.935,-315.308],[0.00929829,0.491789,-0.870665,0.000694981],[1,0,0,0],[2119.52,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_88_Fam_2:=[[500.942,968.156,-314.521],[0.012534,0.49254,-0.870114,-0.0122165],[1,0,0,0],[2698.71,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_89_Fam_2:=[[498.232,369.481,-317.071],[0.00971086,0.497273,-0.867531,-0.00405006],[1,0,0,0],[2700.01,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_90_Fam_2:=[[489.797,-225.768,-316.357],[0.00720873,0.493136,-0.869922,0.0011832],[1,0,0,0],[2700,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_94_Fam_2:=[[-98.6422,971.856,-316.6],[0.0124772,0.495876,-0.868285,-0.00574891],[1,0,0,0],[2698.72,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_95_Fam_2:=[[-99.0791,373.492,-317.943],[0.00830126,0.494778,-0.868971,0.00397538],[1,0,0,0],[2700.04,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_96_Fam_2:=[[-104.288,-226.353,-316.196],[0.0116303,0.497515,-0.867362,-0.00512237],[1,0,0,0],[2700,9E+09,9E+09,9E+09,9E+09,9E+09]];

    !Work Object / Frame / Area do Buffer "B" (Conjunto Isolado de 9 posições, no extremo do 7o eixo)
    PERS robtarget pBuffer_Pos_1_Fam_2:=[[-57.8023,1267.6,-270.748],[0.0135645,0.494372,-0.869119,-0.00674667],[0,0,0,0],[-2731.04,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_2_Fam_2:=[[541.965,1263.36,-273.565],[0.0129901,0.493198,-0.869799,-0.00606441],[0,0,0,0],[-2731.1,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_3_Fam_2:=[[1144.47,1264.38,-272.706],[0.00920049,0.49463,-0.869029,-0.00670869],[-1,0,0,0],[-2731.15,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_4_Fam_2:=[[-58.8229,667.216,-271.127],[0.010001,0.49029,-0.871487,-0.00510972],[0,0,0,0],[-2731.21,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_5_Fam_2:=[[541.572,666.254,-272.789],[0.00684212,0.490259,-0.871549,-0.0016213],[0,0,0,0],[-2731.17,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_6_Fam_2:=[[1138.49,667.297,-271.962],[0.0020794,0.490285,-0.871517,-0.00866654],[-1,0,0,0],[-2731.17,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_7_Fam_2:=[[-64.1139,70.8159,-271.18],[0.0106611,0.490252,-0.871516,-0.000212342],[0,0,0,0],[-2731.23,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_8_Fam_2:=[[535.28,69.3475,-272.074],[0.00799092,0.491768,-0.870688,-0.00178288],[0,0,0,0],[-2731.19,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_9_Fam_2:=[[1141.64,67.2529,-272.561],[0.00610422,0.495414,-0.86862,-0.00523317],[-1,0,0,0],[-2731.18,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    !Work Object / Frame / Area do Buffer "C" (Mesmo lado da Esteira de Saída)
    PERS robtarget pBuffer_Pos_13_Fam_2:=[[-53.6495,-34.8474,-274.915],[0.0105365,0.495301,-0.868649,0.00384869],[-1,0,0,0],[-2789.37,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_14_Fam_2:=[[-51.3353,562.837,-274.84],[0.00946117,0.495165,-0.868745,0.00227285],[-1,0,0,0],[-2789.39,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_15_Fam_2:=[[-50.536,1161.69,-274.075],[0.0116669,0.495384,-0.868596,-0.000520949],[-1,0,0,0],[-2791.77,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_19_Fam_2:=[[354.357,-36.4079,-275.425],[0.00870953,0.490838,-0.871207,-3.94018E-05],[-1,0,0,0],[-2596.63,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_20_Fam_2:=[[540.196,562.487,-275.966],[0.00944922,0.495026,-0.868825,-0.00189537],[-1,0,0,0],[-2779.4,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_21_Fam_2:=[[551.333,1161.68,-277.059],[0.0131798,0.492444,-0.870239,-0.00310896],[-1,0,0,0],[-2792.01,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_25_Fam_2:=[[356.08,-38.2628,-274.882],[0.0119449,0.496756,-0.867808,0.000874096],[-1,0,0,0],[-1998.78,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_26_Fam_2:=[[1145.06,564.468,-278.297],[0.00953637,0.49502,-0.868829,-0.000960406],[-1,0,0,0],[-2786.62,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_27_Fam_2:=[[1150.35,1162.23,-275.907],[0.0112091,0.501693,-0.864968,-0.00313878],[-1,0,0,0],[-2791,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_31_Fam_2:=[[358.207,-36.8618,-275.702],[0.0107894,0.498237,-0.866973,0.00150732],[-1,0,0,0],[-1396.27,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_32_Fam_2:=[[1464.1,561.872,-278.643],[0.00945253,0.495123,-0.868762,-0.00412179],[-1,0,0,0],[-2502.04,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_33_Fam_2:=[[1422.24,1157.9,-274.58],[0.00613421,0.4975,-0.867439,-0.00252024],[-1,0,0,0],[-2460.12,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_37_Fam_2:=[[361.817,-35.5903,-275.309],[0.0100135,0.499377,-0.866307,0.00597177],[-1,0,0,0],[-803.936,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_38_Fam_2:=[[1470.37,565.682,-277.606],[0.00900693,0.491988,-0.870522,-0.00765426],[-1,0,0,0],[-1910.52,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_39_Fam_2:=[[1393.22,1163.69,-275.212],[0.00811483,0.494942,-0.868847,-0.00849331],[-1,0,0,0],[-1835.11,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_43_Fam_2:=[[353.417,-39.0328,-272.702],[0.0126255,0.497973,-0.8671,0.000612471],[-1,0,0,0],[-193.491,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_44_Fam_2:=[[1483.06,563.769,-276.517],[0.00928039,0.490609,-0.871321,-0.0039907],[-1,0,0,0],[-1322.92,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_45_Fam_2:=[[1384.11,1161.64,-276.397],[0.0102865,0.489634,-0.871861,-0.00353352],[-1,0,0,0],[-1219.88,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_49_Fam_2:=[[337.975,-39.5268,-273.032],[0.0095575,0.491076,-0.871058,0.00335025],[-1,0,0,0],[421.9,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_50_Fam_2:=[[1481.78,561.591,-277.187],[0.0100218,0.490499,-0.871378,-0.00340112],[-1,0,0,0],[-720.688,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_51_Fam_2:=[[1439.02,1159.66,-277.418],[0.00962598,0.496945,-0.86772,-0.00387111],[-1,0,0,0],[-672.667,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_55_Fam_2:=[[379.224,-40.7941,-272.091],[0.00425635,0.492385,-0.870365,0.00210623],[-1,0,0,0],[976.964,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_56_Fam_2:=[[1491.31,562.018,-277.509],[0.00962966,0.488576,-0.872467,-0.00150591],[-1,0,0,0],[-127.918,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_57_Fam_2:=[[1581.28,1161.05,-277.308],[0.0085071,0.491962,-0.870564,-0.00442788],[-1,0,0,0],[-219.941,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_61_Fam_2:=[[363.69,-40.126,-274.34],[0.0114103,0.494059,-0.869351,0.00211495],[-1,0,0,0],[1595.85,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_62_Fam_2:=[[1515.42,559.387,-278.243],[0.00936292,0.489721,-0.871824,-0.00298026],[-1,0,0,0],[448.456,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_63_Fam_2:=[[1573.83,1158.81,-276.193],[0.00881434,0.494102,-0.869342,-0.0055449],[-1,0,0,0],[391.029,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_67_Fam_2:=[[384.459,-45.1365,-275.442],[0.0101719,0.494128,-0.86933,0.00097212],[-1,0,0,0],[2174.01,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_68_Fam_2:=[[1540.16,557.171,-279.625],[0.00644274,0.496463,-0.868032,-0.0020999],[-1,0,0,0],[1020.02,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_69_Fam_2:=[[1554.04,1156.02,-277.286],[0.00708163,0.49267,-0.870183,-0.00280275],[-1,0,0,0],[1009.5,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_73_Fam_2:=[[364.381,-43.1547,-279.965],[0.0100404,0.491104,-0.871043,-4.6521E-05],[-1,0,0,0],[2792.76,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_74_Fam_2:=[[1125.77,555.781,-278.036],[0.00702288,0.491761,-0.870702,-0.000970821],[-1,0,0,0],[2037.19,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_75_Fam_2:=[[1129.35,1153.42,-273.832],[0.00801421,0.490445,-0.87143,-0.00295594],[-1,0,0,0],[2031.79,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_79_Fam_2:=[[2339.5,-36.7007,-282.335],[0.00408245,0.499339,-0.866397,-9.29201E-05],[-2,0,-1,0],[1423.28,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_80_Fam_2:=[[1734.17,556.03,-280.224],[0.00460492,0.492388,-0.870356,-0.00368466],[-2,0,0,0],[2028.63,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_81_Fam_2:=[[1730.15,1152.46,-277.171],[0.00462659,0.496875,-0.867804,-0.00325309],[-2,0,0,0],[2031.81,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_85_Fam_2:=[[2327.77,-38.3992,-283.343],[0.000921177,0.499253,-0.866455,0.000664744],[-2,-1,0,0],[2031.74,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_86_Fam_2:=[[1566.84,554.818,-280.4],[0.00452179,0.496115,-0.868232,-0.00479058],[-1,0,0,0],[2790.6,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_87_Fam_2:=[[1564.53,1153.38,-276.18],[0.00650917,0.493359,-0.869784,-0.00545656],[-1,0,0,0],[2798.02,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_91_Fam_2:=[[2573.35,-40.6134,-284.342],[0.00220936,0.492651,-0.870214,-0.0041652],[-2,0,-1,0],[2386.39,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_92_Fam_2:=[[2162.2,553.771,-282.333],[0.00368234,0.4906,-0.87137,-0.00357272],[-2,0,0,0],[2796.47,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_93_Fam_2:=[[2164.77,1153.13,-277.895],[0.00729592,0.49422,-0.869283,-0.0064664],[-2,0,0,0],[2798.01,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_97_Fam_2:=[[2766.14,-42.1529,-281.942],[0.00356584,0.496239,-0.868092,-0.0122601],[-2,0,-1,0],[2797.9,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_98_Fam_2:=[[2765.77,554.388,-277.287],[0.000654011,0.495689,-0.868449,-0.00947837],[-2,0,-1,0],[2797.97,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_99_Fam_2:=[[2767.83,1152.53,-275.608],[0.000323699,0.498666,-0.866779,-0.0051886],[-2,0,0,0],[2797.9,9E+09,9E+09,9E+09,9E+09,9E+09]];

    !*************************************************************************************************
    !*************************************************************************************************
    !Pontos de Pega/Entrega no Buffer Família 3 (HL6)
    !*************************************************************************************************
    !*************************************************************************************************
    
    !Work Object / Frame / Area do Buffer "A" (Mesmo lado da Esteira de Entrada)    
    PERS robtarget pBuffer_Pos_10_Fam_3:=[[2863.01,956.312,-313.209],[0.00397026,0.467019,-0.884165,-0.0113717],[0,0,-1,0],[-2793.47,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_11_Fam_3:=[[2860.4,356.249,-314.686],[0.00357257,0.46638,-0.884573,-0.00286139],[0,0,-1,0],[-2793.45,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_12_Fam_3:=[[2858.01,-241.072,-319.213],[0.000937984,-0.464853,0.885363,0.00662407],[0,0,-1,0],[-2794.58,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_16_Fam_3:=[[2261.13,958.868,-316.202],[0.00593217,0.465571,-0.884944,-0.0091032],[0,0,0,0],[-2793.5,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_17_Fam_3:=[[2258.48,360.128,-316.831],[0.00573879,0.45945,-0.888173,-0.00463115],[0,0,0,0],[-2793.47,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_18_Fam_3:=[[2295.22,-236.012,-315.396],[0.00629589,-0.458991,0.888418,-0.000603857],[0,-1,-1,0],[-2750.94,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_22_Fam_3:=[[1660.23,960.888,-312.652],[0.00853913,0.464099,-0.88571,-0.00760337],[0,0,0,0],[-2793.5,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_23_Fam_3:=[[1655.44,365.56,-315.302],[0.00911806,0.464784,-0.885356,-0.00612141],[0,0,0,0],[-2793.49,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_24_Fam_3:=[[2287.14,-233.752,-315.62],[0.00448659,0.456238,-0.889841,-0.00321799],[0,0,-1,0],[-2159.66,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_28_Fam_3:=[[1419.14,963.031,-312.944],[0.00735749,0.463848,-0.885868,-0.00542738],[0,0,0,0],[-2432.95,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_29_Fam_3:=[[1449.19,366.343,-316.235],[0.00913172,0.455252,-0.890295,-0.0060349],[0,0,0,0],[-2394.78,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_30_Fam_3:=[[2262.22,-234.164,-316.67],[0.00622159,0.46133,-0.887164,-0.00874305],[0,0,-1,0],[-1581.44,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_34_Fam_3:=[[1402.7,964.742,-314.454],[0.00737966,0.464127,-0.885721,-0.00542804],[0,0,0,0],[-1848.33,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_35_Fam_3:=[[1447.62,366.95,-312.178],[0.0112636,0.45899,-0.888356,-0.00512414],[0,0,0,0],[-1799.87,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_36_Fam_3:=[[2268.71,-232.695,-311.916],[0.00458878,0.456801,-0.889504,-0.00968002],[0,0,-1,0],[-980.977,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_40_Fam_3:=[[1406.2,965.469,-308.903],[0.00925786,0.4591,-0.888292,-0.00890784],[0,0,0,0],[-1245.06,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_41_Fam_3:=[[1452.2,367.667,-313.871],[0.00393837,0.452196,-0.891898,-0.00460799],[0,0,0,0],[-1191.96,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_42_Fam_3:=[[2273.76,-232.65,-310.345],[0.0139444,-0.458056,0.888811,0.00229734],[0,-1,-1,0],[-368.288,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_46_Fam_3:=[[1400.22,965.758,-314.697],[0.00886121,0.459516,-0.88808,-0.00901204],[0,0,0,0],[-651.83,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_47_Fam_3:=[[1448.52,367.745,-315.71],[0.00809741,0.458949,-0.888399,-0.00692661],[0,0,0,0],[-597.726,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_48_Fam_3:=[[2302.28,-236.058,-316.128],[0.00405954,-0.456517,0.889703,0.00188264],[0,0,-1,0],[259.316,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_52_Fam_3:=[[1390.87,962.411,-316.354],[0.0084312,0.462647,-0.886453,-0.00935273],[0,0,0,0],[-59.6072,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_53_Fam_3:=[[1452.38,365.577,-316.888],[0.0103229,0.465992,-0.884711,-0.00565325],[0,0,0,0],[7.90767,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_54_Fam_3:=[[2321.53,-234.473,-315.644],[0.00675553,0.465006,-0.88514,-0.0158906],[0,0,-1,0],[878.89,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_58_Fam_3:=[[1369.92,963.295,-315.472],[0.0085311,0.464129,-0.885446,-0.0092981],[0,0,-1,0],[521.929,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_59_Fam_3:=[[1464.65,367.413,-316.659],[0.00913188,0.45896,-0.888388,-0.00630417],[0,0,0,0],[620.799,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_60_Fam_3:=[[2325.36,-233.624,-317.112],[0.0068084,0.46396,-0.885688,-0.0158882],[0,0,-1,0],[1482.09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_64_Fam_3:=[[1346.43,965.013,-316.47],[0.00854551,0.462712,-0.886256,-0.00927765],[0,0,-1,0],[1099.02,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_65_Fam_3:=[[1463.62,365.187,-318.593],[0.0091464,0.461336,-0.887045,-0.006281614],[0,0,-1,0],[1219.4,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_66_Fam_3:=[[2315.57,-236.333,-322.165],[0.00674951,0.464728,-0.885053,-0.01592407],[0,0,-1,0],[2073.79,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_70_Fam_3:=[[1346.66,963.184,-313.981],[0.00754602,0.469132,-0.882562,-0.0098333],[0,0,-1,0],[1698.81,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_71_Fam_3:=[[1473.65,367.053,-318.645],[0.00731095,0.458965,-0.8884,-0.00663843],[0,0,0,0],[1833.6,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_72_Fam_3:=[[2339.34,-234.487,-318.081],[0.00565726,-0.457992,0.888927,-0.00464574],[0,-1,-1,0],[2700.01,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_76_Fam_3:=[[1346.3,963.76,-313.87],[0.00695911,0.460975,-0.887327,-0.0102419],[0,0,0,0],[2298.72,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_77_Fam_3:=[[1486.16,365.296,-323.491],[0.0106352,0.457663,-0.889014,-0.00929247],[0,0,0,0],[2443.95,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_78_Fam_3:=[[586.221,-230.599,-321.873],[0.0114475,0.456701,-0.889546,-0.0011842],[1,0,0,0],[1553,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_82_Fam_3:=[[1148.04,962.959,-320.888],[0.00979795,0.46349,-0.886006,-0.00861874],[1,0,0,0],[2698.72,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_83_Fam_3:=[[1140.26,367.962,-321.689],[0.008925,0.456368,-0.889734,-0.00471904],[1,0,0,0],[2699.9,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_84_Fam_3:=[[551.318,-229.885,-320.033],[0.0114813,0.460617,-0.887524,-0.00122175],[1,0,0,0],[2115.14,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_88_Fam_3:=[[546.395,964.932,-319.795],[0.00807805,0.4626,-0.88648,-0.00946624],[1,0,0,0],[2698.7,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_89_Fam_3:=[[542.63,367.046,-320.478],[0.00915097,0.464586,-0.885478,-0.00227051],[1,0,0,0],[2700,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_90_Fam_3:=[[534.513,-230.795,-317.86],[0.0110323,0.456297,-0.889753,-0.00331431],[1,0,0,0],[2700.02,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_94_Fam_3:=[[-54.0006,969.678,-318.317],[0.00846737,0.463225,-0.886197,-0.00243624],[1,0,0,0],[2698.73,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_95_Fam_3:=[[-54.8044,371.243,-315.504],[0.0135827,0.464833,-0.885292,-0.00208564],[1,0,0,0],[2700.01,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_96_Fam_3:=[[-60.3646,-228.736,-318.87],[0.0116096,0.464819,-0.885324,-0.00308599],[1,0,0,0],[2700,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    !Work Object / Frame / Area do Buffer "B" (Conjunto Isolado de 9 posições, no extremo do 7o eixo)
    PERS robtarget pBuffer_Pos_1_Fam_3:=[[-9.664,1253.93,-277.149],[0.0118435,0.46046,-0.887583,-0.00573613],[0,0,0,0],[-2741.53,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_2_Fam_3:=[[590.844,1253.77,-276.253],[0.0118459,0.460449,-0.887589,-0.00575115],[0,0,0,0],[-2741.56,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_3_Fam_3:=[[1194.76,1254.2,-276.424],[0.0106751,0.463387,-0.886078,-0.00500389],[-1,0,0,0],[-2741.49,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_4_Fam_3:=[[-9.22197,653.329,-274.955],[0.00924731,0.460463,-0.88762,-0.00429085],[0,0,0,0],[-2741.53,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_5_Fam_3:=[[591.01,649.66,-278.096],[0.00607552,0.460469,-0.887652,-0.00253144],[0,0,0,0],[-2741.53,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_6_Fam_3:=[[1189.04,652.889,-278.062],[0.00355649,0.460493,-0.887629,-0.00696693],[-1,0,0,0],[-2741.56,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_7_Fam_3:=[[-15.8462,54.7245,-277.599],[0.00925718,0.460441,-0.887642,-0.000904617],[0,0,0,0],[-2741.56,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_8_Fam_3:=[[583.971,51.5208,-274.352],[0.00791806,0.460433,-0.887659,-0.00111204],[-1,0,0,0],[-2741.54,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_9_Fam_3:=[[1186.15,52.1046,-274.014],[0.00355028,0.460492,-0.887629,-0.00698455],[-1,0,0,0],[-2741.53,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    !Work Object / Frame / Area do Buffer "C" (Mesmo lado da Esteira de Saída)
    PERS robtarget pBuffer_Pos_13_Fam_3:=[[4.09377,-39.2618,-276.724],[0.0101293,0.465595,-0.884926,0.00503227],[-1,0,0,0],[-2799.72,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_14_Fam_3:=[[6.45685,559.074,-274.762],[0.00868004,0.46546,-0.885025,0.00157102],[-1,0,0,0],[-2799.72,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_15_Fam_3:=[[-16.5191,1158.17,-276.677],[0.00914703,0.465501,-0.884999,0.0013351],[-1,0,0,0],[-2777.06,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_19_Fam_3:=[[409.848,-37.6101,-280.636],[0.00789903,0.464052,-0.885772,0.00104436],[-1,0,0,0],[-2606.23,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_20_Fam_3:=[[595.341,558.879,-277.946],[0.00748495,0.465327,-0.885108,0.000188351],[-1,0,0,0],[-2789.66,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_21_Fam_3:=[[582.661,1157.76,-277.688],[0.0085799,0.465651,-0.884926,-0.00144086],[-1,0,0,0],[-2775.45,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_25_Fam_3:=[[408.957,-37.9802,-274.529],[0.00786818,0.464108,-0.885743,0.00104478],[-1,0,0,0],[-2006.16,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_26_Fam_3:=[[1202.83,564.553,-277.375],[0.00566657,0.465307,-0.885131,-0.000116383],[-1,0,0,0],[-2796.87,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_27_Fam_3:=[[1182.95,1159.49,-273.109],[0.00591255,0.465538,-0.885006,-0.00200802],[-1,0,0,0],[-2774.96,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_31_Fam_3:=[[407.453,-35.3667,-279.822],[0.00782937,0.464141,-0.885726,0.00105868],[-1,0,0,0],[-1403.33,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_32_Fam_3:=[[1521.93,561.275,-286.352],[0.00463795,0.46227,-0.88672,-0.00353855],[-1,0,0,0],[-2512.05,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_33_Fam_3:=[[1477.75,1159.76,-279.389],[0.00591569,0.462747,-0.886464,-0.00338009],[-1,0,0,0],[-2471.51,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_37_Fam_3:=[[412.704,-36.4683,-278.774],[0.0115385,0.464136,-0.885656,0.00765442],[-1,0,0,0],[-811.399,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_38_Fam_3:=[[1528.23,561.909,-278.206],[0.00464265,0.462239,-0.886736,-0.00359054],[-1,0,0,0],[-1920.66,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_39_Fam_3:=[[1451.39,1161.29,-275.873],[0.00935302,0.462571,-0.886486,-0.00914474],[-1,0,0,0],[-1846.56,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_43_Fam_3:=[[408.152,-41.7099,-274.072],[0.00775498,0.464248,-0.885671,0.00110507],[-1,0,0,0],[-200.95,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_44_Fam_3:=[[1542.19,562.202,-275.245],[0.00462948,0.460866,-0.88745,-0.00366374],[-1,0,0,0],[-1333.42,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_45_Fam_3:=[[1439.18,1160.57,-277.508],[0.00587578,0.459874,-0.887959,-0.00337114],[-1,0,0,0],[-1231.34,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_49_Fam_3:=[[389.73,-40.7147,-275.277],[0.0100713,0.461236,-0.887205,0.00520161],[-1,0,0,0],[414.445,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_50_Fam_3:=[[1540.61,560.133,-277.597],[0.00470774,0.459094,-0.888368,-0.00365783],[-1,0,0,0],[-730.738,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_51_Fam_3:=[[1493.42,1159.17,-277.251],[0.00769282,0.461943,-0.886859,-0.005562],[-1,0,0,0],[-684.069,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_55_Fam_3:=[[435.248,-44.9569,-273.881],[0.00770659,0.46263,-0.886517,0.00110105],[-1,0,0,0],[969.445,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_56_Fam_3:=[[1550.12,558.69,-276.952],[0.0047079,0.458775,-0.888533,-0.00371107],[-1,0,0,0],[-140.552,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_57_Fam_3:=[[1639.08,1157.7,-279.077],[0.00627146,0.462203,-0.88674,-0.00466418],[-2,0,0,0],[-230.294,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_61_Fam_3:=[[420.997,-43.0417,-274.385],[0.00770548,0.464366,-0.885609,0.0010115],[-1,0,0,0],[1585.38,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_62_Fam_3:=[[1574.98,557.136,-282.884],[0.00381374,0.459952,-0.887933,-0.00203593],[-1,0,0,0],[435.071,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_63_Fam_3:=[[1629.37,1155.61,-277.141],[0.00471419,0.46595,-0.88479,-0.00380569],[-1,0,0,0],[380.659,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_67_Fam_3:=[[442.258,-48.3042,-278.742],[0.0076398,0.464414,-0.885585,0.00117972],[-1,0,0,0],[2163.65,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_68_Fam_3:=[[1604.94,554.035,-278.616],[0.00378557,0.462911,-0.886394,-0.0020816],[-1,0,0,0],[1006.67,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_69_Fam_3:=[[1611.82,1152.81,-278.259],[0.00379872,0.462918,-0.886391,-0.00211539],[-1,0,0,0],[999.131,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_73_Fam_3:=[[422.222,-46.2995,-280.005],[0.0076639,0.461322,-0.887199,0.000876822],[-1,0,0,0],[2782.4,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_74_Fam_3:=[[1183.54,552.603,-279.902],[0.00447106,0.461998,-0.88687,-0.000874498],[-1,0,0,0],[2026.98,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_75_Fam_3:=[[1187.12,1150.24,-277.278],[0.00446896,0.460664,-0.887563,-0.000904876],[-1,0,0,0],[2021.45,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_79_Fam_3:=[[2398.03,-40.984,-284.687],[0.00243861,0.469719,-0.882809,0.00238105],[-2,-1,0,0],[1411.48,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_80_Fam_3:=[[1789.26,552.516,-281.188],[0.00250783,0.460356,-0.887728,-0.00211455],[-2,0,0,0],[2018.28,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_81_Fam_3:=[[1787.91,1149.28,-277.751],[0.00299768,0.467202,-0.884144,-0.00178218],[-2,0,0,0],[2021.47,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_85_Fam_3:=[[2385.64,-42.1609,-285.331],[0.00240361,0.469604,-0.882871,0.00238477],[-2,-1,0,0],[2021.4,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_86_Fam_3:=[[1622.84,551.31,-280.4],[0.0032159,0.461648,-0.887049,-0.00379855],[-1,0,0,0],[2782.58,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_87_Fam_3:=[[1622.29,1150.17,-277.281],[0.00320715,0.463621,-0.88602,-0.0037843],[-1,0,0,0],[2787.68,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_91_Fam_3:=[[2633.3,-47.0394,-284.36],[0.00180729,0.462547,-0.886552,-0.00857481],[-2,0,-1,0],[2375.01,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_92_Fam_3:=[[2223.03,548.991,-280.037],[0.00263941,0.463135,-0.886238,-0.00904764],[-2,0,0,0],[2786.12,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_93_Fam_3:=[[2222.54,1149.88,-278.08],[0.00209267,0.464543,-0.885532,-0.00541486],[-2,0,0,0],[2787.68,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_97_Fam_3:=[[2823.98,-45.7354,-282.981],[0.00146652,-0.460767,0.887478,0.0086566],[-2,0,-1,0],[2787.56,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_98_Fam_3:=[[2823.52,551.679,-278.281],[0.00214086,0.465976,-0.884761,-0.00775531],[-2,0,-1,0],[2787.61,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_99_Fam_3:=[[2825.62,1149.24,-280.582],[0.00182147,0.468998,-0.88319,-0.00348174],[-2,0,0,0],[2787.55,9E+09,9E+09,9E+09,9E+09,9E+09]];

    
    !*************************************************************************************************
    !*************************************************************************************************
    !Pontos de Pega/Entrega no Buffer Família 4 (HL8)
    !*************************************************************************************************
    !*************************************************************************************************
    
    !Work Object / Frame / Area do Buffer "A" (Mesmo lado da Esteira de Entrada)
    PERS robtarget pBuffer_Pos_12_Fam_4:=[[2877.77,-204.53,-315.72],[0.00224494,0.462545,-0.886552,-0.0085584],[0,0,-1,0],[-2768.51,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_18_Fam_4:=[[2276.94,-198.55,-319.62],[0.00220272,0.458802,-0.888495,-0.00856502],[0,0,-1,0],[-2768.51,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_24_Fam_4:=[[2241.27,-196.39,-316.88],[0.0021959,0.458806,-0.888493,-0.00856305],[0,0,-1,0],[-2204.94,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_30_Fam_4:=[[2243.00,-198.09,-314.31],[0.00223527,0.463555,-0.886024,-0.00854708],[0,0,-1,0],[-1601.91,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_36_Fam_4:=[[2261.67,-198.09,-312.61],[0.00223082,0.463555,-0.886024,-0.00854364],[0,0,-1,0],[-984.7,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_42_Fam_4:=[[277.66,-192.60,-314.20],[0.00584539,0.463499,-0.886076,0.00201228],[1,0,0,0],[-2357.85,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_48_Fam_4:=[[274.65,-194.69,-322.31],[0.00584354,0.45975,-0.888027,0.00199328],[1,0,0,0],[-1759.88,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_54_Fam_4:=[[254.54,-193.74,-317.82],[0.00582654,0.463638,-0.886003,0.00202376],[1,0,0,0],[-1181.92,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_60_Fam_4:=[[244.42,-192.86,-320.47],[0.00581708,0.465151,-0.88521,0.00203551],[1,0,0,0],[-591.532,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_66_Fam_4:=[[239.45,-194.85,-321.06],[0.00581676,0.463955,-0.885837,0.00202801],[1,0,0,0],[3.28808,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_72_Fam_4:=[[259.71,-194.33,-316.12],[0.00581808,0.460951,-0.887405,0.00201033],[1,0,0,0],[626.296,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_78_Fam_4:=[[401.819,-194.91,-317.637],[0.00581329,0.460961,-0.887399,0.00201852],[1,0,0,0],[1372.28,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_84_Fam_4:=[[295.387,-194.408,-319.536],[0.00578772,0.464482,-0.885559,0.00296774],[1,0,0,0],[1862.56,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_90_Fam_4:=[[91.7231,-193.026,-318.48],[0.00494757,0.460366,-0.887705,0.00430594],[1,0,0,0],[2255.63,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_96_Fam_4:=[[31.9498,-195.258,-318.495],[0.00425804,0.466106,-0.884716,0.00239858],[1,0,0,0],[2791.47,9E+09,9E+09,9E+09,9E+09,9E+09]];

    !Posições restritas para o modelo HL8 (longes de mais):
    PERS robtarget pBuffer_Pos_10_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_11_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_16_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_17_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_22_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_23_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_28_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_29_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_34_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_35_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_40_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_41_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_46_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_47_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_52_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_53_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_58_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_59_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_64_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_65_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_70_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_71_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_76_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_77_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_82_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_83_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_88_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_89_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_94_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_95_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];

    !Work Object / Frame / Area do Buffer "B" (Conjunto Isolado de 9 posições, no extremo do 7o eixo)
    CONST robtarget pBuffer_Pos_7_Fam_4:=[[-19.36,62.72,-274.59],[0.0130448,0.461346,-0.887124,0.00139156],[0,0,0,0],[-2768.52,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_8_Fam_4:=[[580.09,62.71,-275.83],[0.00631161,0.461404,-0.887161,-0.00351868],[0,0,0,0],[-2768.52,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_9_Fam_4:=[[1182.60,61.24,-274.78],[0.00482672,0.461421,-0.887146,-0.00637058],[-1,0,0,0],[-2768.5,9E+09,9E+09,9E+09,9E+09,9E+09]];
 
    !Posições restritas para o modelo HL8 (longes de mais):
    CONST robtarget pBuffer_Pos_1_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_2_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_3_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_4_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_5_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST robtarget pBuffer_Pos_6_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    !Work Object / Frame / Area do Buffer "C" (Mesmo lado da Esteira de Saída)
    PERS robtarget pBuffer_Pos_13_Fam_4:=[[-10.3498,-5.92971,-278.203],[0.00918399,0.464313,-0.885617,0.00341368],[-1,0,0,0],[-2786.72,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_19_Fam_4:=[[395.373,-4.25386,-282.104],[0.00695872,0.462774,-0.886449,-0.000587994],[-1,0,0,0],[-2593.23,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_25_Fam_4:=[[394.496,-4.63152,-275.999],[0.00692508,0.462827,-0.886421,-0.000579178],[-1,0,0,0],[-1993.16,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_31_Fam_4:=[[393.019,-2.06244,-281.289],[0.00688251,0.462862,-0.886403,-0.000546083],[-1,0,0,0],[-1390.33,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_37_Fam_4:=[[398.267,-3.13675,-280.246],[0.0105945,0.462861,-0.886347,0.00603879],[-1,0,0,0],[-798.398,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_43_Fam_4:=[[393.71,-8.37028,-275.54],[0.00681043,0.462965,-0.88635,-0.000510264],[-1,0,0,0],[-187.952,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_49_Fam_4:=[[375.307,-7.40671,-276.748],[0.00912341,0.459956,-0.887888,0.00359902],[-1,0,0,0],[427.446,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_55_Fam_4:=[[420.817,-11.6343,-275.35],[0.00676185,0.461347,-0.887194,-0.00051245],[-1,0,0,0],[982.446,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_61_Fam_4:=[[406.536,-9.68635,-275.85],[0.00676263,0.463085,-0.886288,-0.0006122],[-1,0,0,0],[1598.38,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_67_Fam_4:=[[427.834,-14.9869,-280.221],[0.00669343,0.463133,-0.886264,-0.000429833],[-1,0,0,0],[2176.65,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_73_Fam_4:=[[407.779,-12.9763,-281.48],[0.00671899,0.460039,-0.887873,-0.000735916],[-1,0,0,0],[2795.4,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_79_Fam_4:=[[2382.5,-7.64942,-286.167],[0.00151597,0.468457,-0.883485,0.000760744],[-2,-1,0,0],[1424.48,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_85_Fam_4:=[[2371.16,-8.84783,-286.799],[0.00148022,0.468328,-0.883553,0.000767807],[-2,-1,0,0],[2034.4,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_91_Fam_4:=[[2618.85,-13.6958,-285.827],[0.000871791,0.461254,-0.887209,-0.0102008],[-2,0,-1,0],[2388.01,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_97_Fam_4:=[[2826.78,-12.3886,-283.861],[0.000524024,-0.462058,0.886822,0.007036],[-2,0,-1,0],[2780.28,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    !Posições restritas para o modelo HL8 (longes de mais):
    PERS robtarget pBuffer_Pos_14_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_15_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_20_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_21_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_26_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_27_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_32_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_33_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_38_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_39_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_44_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_45_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_50_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_51_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_56_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_57_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_62_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_63_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_68_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_69_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_74_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_75_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_80_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_81_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_86_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_87_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_92_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_93_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_98_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pBuffer_Pos_99_Fam_4:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]]; 

    VAR bool timeout_av;
    VAR bool timeout_rc;
    
    PERS num gNUM_IteradorBuffer; !IMF-20180614: Precisei jogar para global, desta forma pode ser do tipo PERS e não perder o valor
    
    VAR robtarget pPosição_Desejada:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR robtarget pPosição_Final_Est_Entrada:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR robtarget pPosição_Final_Est_Saida:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR robtarget pPosição_Final_Buffer:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR robtarget pMov_Pega_Esteira_Entrada:=[[-892.63,-9.52,114.94],[0.00890601,0.506032,-0.862464,0.00290069],[1,0,1,0],[2789.87,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR robtarget pMov_Depos_Esteira_Saída:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR robtarget pMov_Pega_Depos_Buffer:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    VAR robtarget pMov_Posicionar_Home:=[[0.00,0.00,0.00],[0.707107,0,0.707107,0],[0,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];
    
    VAR num nPos_Buffer;
    VAR num nNum_Fam;
    
    CONST num nAcc_Mov_Pega_Depos := 50;
    CONST num nRamp_Mov_Pega_Depos := 40 ;
    CONST num nAcc_Mov_Geral := 80;
    CONST num nRamp_Mov_Geral := 40;
    CONST num nSens_Colid_Mov_Geral := 200;
    CONST num nSens_Colid_Aprox := 80;
    CONST num nLimite_Home := 20;

    
    PERS tooldata tGarra:=[TRUE,[[0,0,622.752],[1,0,0,0]],[65,[482,30,70],[1,0,0,0],0,0,0]];
	PERS loaddata lFamilia_1:=[170,[1,1,1],[1,0,0,0],0,0,0];
	PERS loaddata lFamilia_2:=[228,[1,1,1],[1,0,0,0],0,0,0];
	PERS loaddata lFamilia_3:=[260,[1,1,1],[1,0,0,0],0,0,0];
	PERS loaddata lFamilia_4:=[282,[1,1,1],[1,0,0,0],0,0,0];

	
    CONST jointtarget jposRecolhidoEsteira:=[[153.109,-47.1242,51.2209,1.422,85.748,93.2914],[2772.08,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST jointtarget jposRecolhidoEsteiraSaida:=[[-153.109,-47.1241,51.2209,1.42205,85.748,-28.8738],[2772.09,9E+09,9E+09,9E+09,9E+09,9E+09]];
	
    VAR bool timeout_av1:=FALSE;
	VAR bool timeout_av2:=FALSE;
	VAR bool timeout_av3:=FALSE;
	VAR bool timeout_av4:=FALSE;
	VAR bool timeout_rc1:=FALSE;
	VAR bool timeout_rc2:=FALSE;
	VAR bool timeout_rc3:=FALSE;
	VAR bool timeout_rc4:=FALSE;
    
	
    !Pontos de Afericao..
    PERS robtarget pCheck_00:=[[1572.55,-92.11,980.74],[0.00876174,-0.689037,-0.72434,-0.0219585],[-1,0,0,0],[255.75,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pCheck_01:=[[1572.56,-92.11,980.76],[0.00875702,-0.689037,-0.72434,-0.0219629],[-1,0,0,0],[-216.075,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pCheck_02:=[[1773.31,-1245.87,871.39],[0.00879832,0.40518,0.913936,0.0217377],[-1,0,0,0],[-1467.96,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget pCheck_03:=[[0,0,0],[1,0,0,0],[0,0,0,0],[9E9,9E9,9E9,9E9,9E9,9E9]];
    PERS robtarget pCheck_04:=[[0,0,0],[1,0,0,0],[0,0,0,0],[9E9,9E9,9E9,9E9,9E9,9E9]];
    PERS robtarget pCheck_05:=[[0,0,0],[1,0,0,0],[0,0,0,0],[9E9,9E9,9E9,9E9,9E9,9E9]];
    PERS robtarget pCheck_06:=[[0,0,0],[1,0,0,0],[0,0,0,0],[9E9,9E9,9E9,9E9,9E9,9E9]];
    PERS robtarget pCheck_07:=[[0,0,0],[1,0,0,0],[0,0,0,0],[9E9,9E9,9E9,9E9,9E9,9E9]];
    PERS robtarget pCheck_08:=[[0,0,0],[1,0,0,0],[0,0,0,0],[9E9,9E9,9E9,9E9,9E9,9E9]];
    PERS robtarget pCheck_09:=[[0,0,0],[1,0,0,0],[0,0,0,0],[9E9,9E9,9E9,9E9,9E9,9E9]];
    PERS robtarget pCheck:=[[1898.81,-1954.60,334.06],[0.00879221,0.405181,0.913936,0.0217398],[-1,0,0,0],[-2141.35,9E+09,9E+09,9E+09,9E+09,9E+09]];
    PERS robtarget RT_AuxFrames:=[[652.77,185.11,405.67],[0.00635674,0.966232,-0.257356,-0.0110758],[-2,0,-1,0],[2800,9E+09,9E+09,9E+09,9E+09,9E+09]];
    CONST zonedata z500:=[FALSE,500,600,600,60,600,60];
    
    
    
    
    
    !Parametros de velocidade por familia:
    !Como cada família possui pesos totalmente diferentes, 
    !Precisamos ajustar de forma a não executar movimentos bruscos
    !Arrays SPEEDDATA contém 4 informações: [vLINEAR, vJOINT, v7o_EIXO, TANTO FAZ]
    !ORIGINAIS
    CONST speeddata sMov_Geral_Sem_Produto := [1100, 100, 1700, 100];
    CONST speeddata sMov_Geral_Com_Produto := [800, 100, 1700, 100];
    CONST speeddata sMov_Aprox_Berço_Sem_Produto := [400, 100, 2000, 100];
    CONST speeddata sMov_Aprox_Berço_Com_Produto := [300, 100, 2000, 100];
    CONST speeddata SMov_Fina := [200, 100, 600, 100];
    CONST speeddata SMov_SuperFina := [10, 100, 50, 100];
    CONST speeddata SMov_Levanta_Com_Produto := [100, 100, 300, 100];

    
    !Movimentação Geral (Normalmente JOINT)
    CONST speeddata SPEEDDATA_GeralGarraVazia := [1100, 150, 1700, 100];
    CONST speeddata SPEEDDATA_Geral_Fam_1 := [1200,900,3000,100];
    CONST speeddata SPEEDDATA_Geral_Fam_2 := [700, 90, 1700, 100];
    CONST speeddata SPEEDDATA_Geral_Fam_3 := [600, 80, 1700, 100];
    CONST speeddata SPEEDDATA_Geral_Fam_4 := [500, 70, 1700, 100];
    
    !Movimentação Linear Ataque Seguro (robô se aproxima do ponto, ainda em segurança espacial)
    CONST speeddata SPEEDDATA_AtaqueLinSegGarraVazia := [700, 100, 2000, 100];
    CONST speeddata SPEEDDATA_AtaqueLinSeg_Fam_1 := [150,100,2000,100];
    CONST speeddata SPEEDDATA_AtaqueLinSeg_Fam_2 := [400, 100, 1000, 100];
    CONST speeddata SPEEDDATA_AtaqueLinSeg_Fam_3 := [40,100,1000,100];
    CONST speeddata SPEEDDATA_AtaqueLinSeg_Fam_4 := [30,100,1000,100];

    !Movimentação Linear Ataque Colisão (robô se aproxima do ponto, poderá haver colisões)
    CONST speeddata SPEEDDATA_AtaqueLinColGarraVazia := [400, 100, 2000, 100];
    CONST speeddata SPEEDDATA_AtaqueLinCol_Fam_1 := [20, 100, 500, 100];
    CONST speeddata SPEEDDATA_AtaqueLinCol_Fam_2 := [20,100,500,100];
    CONST speeddata SPEEDDATA_AtaqueLinCol_Fam_3 := [15,100,500,100];
    CONST speeddata SPEEDDATA_AtaqueLinCol_Fam_4 := [20,100,500,100];
    
    !Movimentação Linear Recuo Seguro (robô se afasta do ponto, ainda em segurança espacial)
    CONST speeddata SPEEDDATA_RecuoLinSegGarraVazia := [700, 100, 2000, 100];
    CONST speeddata SPEEDDATA_RecuoLinSeg_Fam_1 := [900, 100, 2000, 100];
    CONST speeddata SPEEDDATA_RecuoLinSeg_Fam_2 := [400, 100, 1000, 100];
    CONST speeddata SPEEDDATA_RecuoLinSeg_Fam_3 := [350, 100, 1000, 100];
    CONST speeddata SPEEDDATA_RecuoLinSeg_Fam_4 := [300, 100, 1000, 100];

    !Movimentação Linear Recuo Colisão (robô se afasta do ponto, poderá haver colisões)
    CONST speeddata SPEEDDATA_RecuoLinColGarraVazia := [400, 100, 2000, 100];
    CONST speeddata SPEEDDATA_RecuoLinCol_Fam_1 := [50, 100, 500, 100];
    CONST speeddata SPEEDDATA_RecuoLinCol_Fam_2 := [150, 100, 500, 100];
    CONST speeddata SPEEDDATA_RecuoLinCol_Fam_3 := [100, 100, 500, 100];
    CONST speeddata SPEEDDATA_RecuoLinCol_Fam_4 := [50, 100, 500, 100];
    
    PERS num gNUM_UltimoPedido := 0;
    
    !Controle de TRAPs:
    VAR intnum INT_TrapEntrada;
    VAR intnum INT_TrapSaida;
    VAR intnum INT_TrapPresencaGarraSaida;
    VAR intnum INT_TrapGarraAberta;
    
    
    
    !*************************************************************************************************************************
    !Main: Rotina Principal
    !*************************************************************************************************************************
	PROC main()
		!Inicio de Rotina Principal
        VAR bool EmPosicao;
        VAR bool ResultMsgBox;
        !Ajusta valores básicos de aceleração e colisão
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        MotionSup \On \TuneValue:= nSens_Colid_Mov_Geral;
        
        !Confirma se robô encontra-se em HOME POSITION
        !Caso contrário, pedir ao operador que o faça
        WHILE NOT IsRoboEmPosicao(pPosicaoHome, wobj0, nLimite_Home) DO
            SetDO PN_OUT_Pos_Home_Manual, 1;
            MsgBoxStop("Colocar Robô em Home Position Manualmente");
        ENDWHILE
            
        !Verifica se CLP ainda está pedindo programa
        !Se sim, pede confirmação ao usuário
        IF GInput(PN_IN_Numero_Programa) <> 0 THEN
            WHILE (NOT MsgBoxSimNao("CLP ainda está requisitando programa. Prosseguir?", "Sim", "Não")) AND ( GInput(PN_IN_Numero_Programa) <> 0) DO
            ENDWHILE
        ENDIF
        !Loop Principal: 
        !Enquanto CLP não pedir parada, executa normalmente
        WHILE PN_IN_Parada_Solicitada <> 1 DO
            
            !Desativa Traps (Estas devem estar ativas somente durante as rotinas de Entrada/Saída)
            DesativaTrapEntrada;
            DesativaTrapSaida;
            DesativaTrapPresencaGarraSaida;
            DesativaTrapGarraAberta;
            
            !Aguarda clp enviar número de programa
            WaitGI PN_IN_Numero_Programa \NOTEQ, 0;
            
            CICLO_ResetFlags;
            
            !Verifica qual rotina executar
            TEST GInput (PN_IN_Numero_Programa)
                CASE 1:
                    !Home Position (Retirado)
                    MsgBoxStop("Realizar Home Manualmente");
            
                CASE 2:
                    !Pega Diferencial no Pallet de Entrada
                    GARRA_VerificarGarraVazia;
                    CICLO_P02_PegaEsteiraEntrada;
                
                CASE 3:
                    !Deposita Diferencial (já na garra) No Buffer
                    !GARRA_VerificarLaser;
                    CICLO_P03_04_PegaDepositaBuffer;
                
                CASE 4:
                    !Busca Diferencial (Garra deve estar Vazia) No Buffer
                    GARRA_VerificarGarraVazia;
                    CICLO_P03_04_PegaDepositaBuffer;
                
                CASE 5:
                    !Deposita Diferencial no Pallet de Saída
                    CICLO_P05_DepositaEsteiraSaida;
                    MoveJ pPosicaoHome, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=wobj0; 
                
                DEFAULT:
                    !Erro
                    MsgBoxStop("CLP Pediu por Rotina Inexistente!");
            ENDTEST
            
        ENDWHILE
        
        !Se chegou até aqui, é por que houve uma solicitação de parada
        
        MoveJ pPosicaoHome, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=wobj0;

    ENDPROC
	
	!*************************************************************************************************************************
    !Pega Redutor na Esteira de Entrada de Peças
    !*************************************************************************************************************************
    PROC CICLO_P02_PegaEsteiraEntrada()
		VAR num NUM_Familia;
		
		!Inicio de ciclo de pega peça na esteira de entrada
        
        !Aguarda número de família diferente de 0
        WaitGI PN_IN_Numero_Familia \NOTEQ, 0;
        
		!Registra Família Recebida pelo CLP
		NUM_Familia := GInput (PN_IN_Numero_Familia);
		
        !Verifica se a garra está vazia
        GARRA_VerificarGarraVazia;
               
        !Vai para posição em frente à esteira
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        MoveJ pFrente_PalletEntrada, sMov_Geral_Sem_Produto, z500, tGarra \WObj:=wobj0;
        
        !Abre Garra
        GARRA_DestravarProduto;
        GARRA_AbrirGarra;
        
        !Verifica Segurança do Pallet
        WaitDI PN_IN_SegurancaPalletEntrada, 1;
        
        !Ativa Trap
        AtivaTrapEntrada;
                
        !Verifica qual o ponto (um por família)
        TEST NUM_Familia
            CASE 1:
                !Família 1 = HL2
                pPosição_Final_Est_Entrada := pPega_Esteira_Entrada_Fam_1;
                
            CASE 2:
                !Família 2 = HL4
                pPosição_Final_Est_Entrada := pPega_Esteira_Entrada_Fam_2;
                
            CASE 3:
                !Família 3 = HL6
                pPosição_Final_Est_Entrada := pPega_Esteira_Entrada_Fam_3;
               
            CASE 4:
                !Família 4 = HL8
                pPosição_Final_Est_Entrada := pPega_Esteira_Entrada_Fam_4;
                
            DEFAULT:
                !Erro
                MsgBoxStop("Número da Família recebida pelo CLP Inexistente!");
				EXIT;
        ENDTEST
   
		!*******************************
		!Movimentação comum
		!*******************************
	   
		!Acima do Pallet
		pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
		pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + [0,0,450];
		MoveJ pMov_Pega_Esteira_Entrada, sMov_Aprox_Berço_Sem_Produto, z80, tGarra \WObj:=FRAME_PalletEntrada;
		
		!Ativa Maior Sensibilidade
		MotionSup \On \TuneValue:= nSens_Colid_Aprox;
		
		!Próximo da Peça
		pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
		pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + [0,0,150];
		MoveL pMov_Pega_Esteira_Entrada, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=FRAME_PalletEntrada;
		
		!A partir daqui desativa TRAP pois o próprio robô poderá ativar os sensores de segurança
		DesativaTrapEntrada;
		
		!Antes do ponto final
		pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
		pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + [0,0,50];
		MoveL pMov_Pega_Esteira_Entrada, SMov_Fina, z20, tGarra \WObj:=FRAME_PalletEntrada;
		
		!Ponto de Pega
		pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
		AccSet 50, 25;
		MoveL pMov_Pega_Esteira_Entrada, SMov_SuperFina, fine, tGarra \WObj:=FRAME_PalletEntrada;
		
		!Pega Produto
		GARRA_FecharGarra;
		
		!Configura Carga da Garra
		GARRA_ConfigurarCarga NUM_Familia;
				
		!Mov para atualizar após configuração da carga
		pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
		pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + [0,0,0];
		MoveL pMov_Pega_Esteira_Entrada, SMov_SuperFina, z1, tGarra \WObj:=FRAME_PalletEntrada;
		
		!Trava o produto
		GARRA_TravarProduto;
		
		!Levante inicial lento
		pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
		pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + [0,0,40];
		MoveL pMov_Pega_Esteira_Entrada, SMov_SuperFina, z50, tGarra \WObj:=FRAME_PalletEntrada;
		
		!Sai do Pallet dependendo da família:
		TEST NUM_Familia
			CASE 1, 2:
				!Produto 1 e 2 (HL2 e HL4) saem em linha reta
				pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
				pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + [0,0,450];
				MoveL pMov_Pega_Esteira_Entrada, SMov_Levanta_Com_Produto, z80, tGarra \WObj:=FRAME_PalletEntrada;
				
			CASE 3:
				!Produto 3(HL6) precisa de uma jogadinha para escapar do pallet, antes de subir em linha reta
							 
				!Para o lado
				pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
				pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + [10,0,40];
				MoveL pMov_Pega_Esteira_Entrada, SMov_SuperFina, z10, tGarra\WObj:=FRAME_PalletEntrada;
					
				!Sai				
				pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
				pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + [0,0,450];
				MoveL pMov_Pega_Esteira_Entrada, SMov_Fina, z80, tGarra \WObj:=FRAME_PalletEntrada;		
				
			CASE 4:
				!Para o lado
				pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
				pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + [12,4,45];
				MoveL pMov_Pega_Esteira_Entrada, SMov_SuperFina, z10, tGarra\WObj:=FRAME_PalletEntrada;
						
				!Sai
				pMov_Pega_Esteira_Entrada := pPosição_Final_Est_Entrada;
				pMov_Pega_Esteira_Entrada.trans := pMov_Pega_Esteira_Entrada.trans + [0,0,450];
				MoveL pMov_Pega_Esteira_Entrada, SMov_Fina, z80, tGarra \WObj:=FRAME_PalletEntrada;
			
			DEFAULT:
				!Erro
				MsgBoxStop("Número da Família recebida pelo CLP Inexistente!");
				EXIT;
		ENDTEST
		
		!Sai da área de esteiras
		AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
		MotionSup \On \TuneValue:= nSens_Colid_Mov_Geral;
		MoveJ pFrente_PalletEntrada, sMov_Geral_Com_Produto, z200, tGarra \WObj:=wobj0;
		
		!Avisa clp que finalizou rotina
		CICLO_ComunicaCLP;
        
	ENDPROC
	
    !*************************************************************************************************************************
    !Deposita Redutor na Esteira de Saída de Peças
    !*************************************************************************************************************************
    PROC CICLO_P05_DepositaEsteiraSaida()
		VAR num NUM_Familia;
		
		!Inicio de ciclo de deposita peça na esteira de saida
        
        !Aguarda número de família diferente de 0
        WaitGI PN_IN_Numero_Familia \NOTEQ, 0;
        
		!Registra Família Recebida pelo CLP
		NUM_Familia := GInput (PN_IN_Numero_Familia);
		
        !Vai para posição em frente à esteira
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        MoveAbsJ jposRecolhidoEsteiraSaida, sMov_Geral_Com_Produto, z200, tGarra; 
      
        MoveJ pFrente_PalletSaida, sMov_Geral_Com_Produto, z100, tGarra \WObj:=wobj0;
    
        !Verifica Segurança do Pallet
        WaitDI PN_IN_SegurancaPalletSaida, 1;
        
		!Ativa Trap Segurança da Esteira
        AtivaTrapSaida;
		
		!Verifica qual o ponto (um por família)
        TEST NUM_Familia
            CASE 1:
                !Família 1 = HL2
                pPosição_Final_Est_Saida := pDepos_Esteira_Saída_Fam_1;
                
            CASE 2:
                !Família 2 = HL4
                pPosição_Final_Est_Saida := pDepos_Esteira_Saída_Fam_2;
                
            CASE 3:
                !Família 3 = HL6
                pPosição_Final_Est_Saida := pDepos_Esteira_Saída_Fam_3;
               
            CASE 4:
                !Família 4 = HL8
                pPosição_Final_Est_Saida := pDepos_Esteira_Saída_Fam_4;
                
            DEFAULT:
                !Erro
                MsgBoxStop("Número da Família recebida pelo CLP Inexistente!");
				EXIT;
        ENDTEST
		
		!Acima do Pallet
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + [0,0,500];
        MoveJ pMov_Depos_Esteira_Saída, sMov_Aprox_Berço_Com_Produto, z80, tGarra \WObj:=FRAME_PalletSaida;
		
        !Ajusta Aceleração e Sensibilidade
		AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
		MotionSup \On \TuneValue:= nSens_Colid_Aprox;
        
        !Entra no Pallet dependendo da família:
		TEST NUM_Familia
			CASE 1, 2:
				!Produtos 1 e 2 (HL2 e HL4) descem em linha reta
				pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
				pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + [0,0,50];
				MoveL pMov_Depos_Esteira_Saída, SMov_Fina, z50, tGarra \WObj:=FRAME_PalletSaida;
				
				!A partir daqui desativa TRAP pois o próprio robô poderá ativar os sensores de segurança
				DesativaTrapSaida;
				
			CASE 3:
				!Produto 3(HL6) precisa de uma jogadinha para escapar do pallet 
				
				!Aproxima do produto
				pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
				pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + [-10,0,90];
				MoveL pMov_Depos_Esteira_Saída, SMov_Fina, z50, tGarra\WObj:=FRAME_PalletSaida;
				
				!A partir daqui desativa TRAP pois o próprio robô poderá ativar os sensores de segurança
				DesativaTrapSaida;
				
				!Aproximação 1
				AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
				MotionSup \On \TuneValue:= nSens_Colid_Aprox;
				pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
				pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + [-10,0,40];
				MoveL pMov_Depos_Esteira_Saída, SMov_Fina, z10, tGarra\WObj:=FRAME_PalletSaida;
				
				!Aproximação 2
				pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
				pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + [0,0,40];
				MoveL pMov_Depos_Esteira_Saída, SMov_SuperFina, z10, tGarra\WObj:=FRAME_PalletSaida;

			CASE 4:
				!Produto 4(HL8) precisa de uma jogadinha para escapar do pallet 

				!Aproxima do produto
				pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
				pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + [15,-4,90];
				MoveL pMov_Depos_Esteira_Saída, SMov_Fina, z50, tGarra \WObj:=FRAME_PalletSaida;
				
				!A partir daqui desativa TRAP pois o próprio robô poderá ativar os sensores de segurança
				DesativaTrapSaida;
				
				!Aproximação 1
				AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
				MotionSup \On \TuneValue:= nSens_Colid_Aprox;
				pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
				pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + [15,-4,45];
				MoveL pMov_Depos_Esteira_Saída, SMov_SuperFina, z10, tGarra \WObj:=FRAME_PalletSaida;
				
				!Aproximação 2
				pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
				pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + [0,0,45];
				MoveL pMov_Depos_Esteira_Saída, SMov_SuperFina, z10, tGarra \WObj:=FRAME_PalletSaida;

			DEFAULT:
				!Erro
				MsgBoxStop("Número da Família recebida pelo CLP Inexistente!");

				DesativaTrapSaida;
				EXIT;
		ENDTEST
		
		!Minimamente acima do ponto
		pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + [0,0,5];
        MoveL pMov_Depos_Esteira_Saída, SMov_SuperFina, z1, tGarra \WObj:=FRAME_PalletSaida;
        
        !Destrava o produto
        GARRA_DestravarProduto;
        
        !Ponto de Deposita
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        MoveL pMov_Depos_Esteira_Saída, SMov_SuperFina, fine, tGarra \WObj:=FRAME_PalletSaida;
    
        !Abre Garra e Deposita Peça
        GARRA_AbrirGarra;
        
		!Zera Carga
        GripLoad load0;
        
        !Sai do Pallet
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + [0,0,350];
        MoveL pMov_Depos_Esteira_Saída, SMov_Fina, z20, tGarra \WObj:=FRAME_PalletSaida;
        
        !À partir daqui podemos ter uma peça enroscada na garra, ativamos a TRAP:
 !!!!TESTE!!!!       AtivaTrapPresencaGarraSaida;
        
        !teste
        WaitTime 1;
        
        !Termina de sair do Pallet
        pMov_Depos_Esteira_Saída := pPosição_Final_Est_Saida;
        pMov_Depos_Esteira_Saída.trans := pMov_Depos_Esteira_Saída.trans + [0,0,500];
        MoveL pMov_Depos_Esteira_Saída, sMov_Aprox_Berço_Sem_Produto, z200, tGarra \WObj:=FRAME_PalletSaida;
        
		!Reajusta sensibilidade
        MotionSup \On \TuneValue:= nSens_Colid_Mov_Geral;
		
		!Sai da área do transfer
        MoveJ pFrente_PalletSaida, sMov_Geral_Sem_Produto, z100, tGarra \WObj:=wobj0;
        
        !Aqui não precisamos mais da TRAP
        DesativaTrapPresencaGarraSaida;
        
        !Avisa clp que finalizou rotina
        CICLO_ComunicaCLP;
            
	ENDPROC
    
    !*************************************************************************************************************************
    !Pega Redutor nas posições do Buffer
    !*************************************************************************************************************************
    PROC CICLO_P03_04_PegaDepositaBuffer()
		VAR robtarget pIntermedCentroMassa;
	    VAR jointtarget jposIntermedCentroMassa;
        VAR jointtarget jposRecolhidoAux;
        VAR num f;
        !Inicio de ciclo de buffer
        
        !Aguarda número da família e posição do buffer
        WaitGI PN_IN_Numero_Familia \NOTEQ, 0;
        WaitGI PN_IN_Posição_Buffer \NOTEQ, 0;
            
        
        MotionSup \On \TuneValue:= nSens_Colid_Mov_Geral;
        
        !Verifica a posição do buffer selecionada
        !Lê o valor da posição através da descrição da tag
        nPos_Buffer := GInput (PN_IN_Posição_Buffer);
        f:=GInput (PN_IN_Numero_Familia);
        
        pPosição_Final_Buffer := GetPosicaoBuffer(nPos_Buffer, f);
        
        !Lê qual o frame da posição atual
        gWOBJDATA_FrameAtual := GetWObjBuffer(nPos_Buffer);

        !Verifica Produto
        IF GInput (PN_IN_Numero_Familia) = 3 GOTO ver_fam_3;
        IF GInput (PN_IN_Numero_Familia) = 4 GOTO ver_Fam_4;
        
        !Verifica se ciclo é de pega peça ou deposita peça no buffer
        IF GInput (PN_IN_Numero_Programa) = 3 GOTO deposita_fam_1_2;
        IF GInput (PN_IN_Numero_Programa) = 4 GOTO pega_fam_1_2;
        
    ver_fam_3:
        !Verifica se ciclo é de pega peça ou deposita peça no buffer
        IF GInput (PN_IN_Numero_Programa) = 3 GOTO deposita_fam_3;
        IF GInput (PN_IN_Numero_Programa) = 4 GOTO pega_fam_3;
   
    ver_fam_4:
        !Verifica se ciclo é de pega peça ou deposita peça no buffer
        IF GInput (PN_IN_Numero_Programa) = 3 GOTO deposita_fam_4;
        IF GInput (PN_IN_Numero_Programa) = 4 GOTO pega_fam_4;
        
!*********************************************************************************************************************************************
!  DEPOSITA PRODUTO NO BUFFER FAMILIAS 1 E 2
!*********************************************************************************************************************************************

    deposita_fam_1_2:
        !Ciclo para depositar peça no buffer
        
        !Ponto intermediario centro de massa
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=FRAME_BufferC);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
        
        
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferC; 
        GOTO inpos_fam_1_2;
        ENDIF
        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=FRAME_BufferB);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferB; 
        GOTO inpos_fam_1_2;
        ELSE
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=FRAME_BufferA);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferA; 
        ENDIF 
             
        
inpos_fam_1_2:
        !Agora sim, vai para posição acima do local de deposita
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [  0,0,850];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=FRAME_BufferC;
        GOTO verifica_fam_1_2;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=FRAME_BufferB;
        GOTO verifica_fam_1_2;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    verifica_fam_1_2:   
        !Verifica se já existe peça na posição selecionada
        IF DInput (DI_Pres_Peça_Berço_1) = 0 AND DInput (DI_Pres_Peça_Berço_2) = 1 GOTO a_berço;
        
        !Caso exista produto no berço selecionado
        TPWrite "Já existe um produto na posição "\num:= nPos_Buffer;
        SetDO PN_OUT_Produto_Existente, 1;
        Stop;
        GOTO inpos_fam_1_2;
        
    a_berço:
        SetDO PN_OUT_Produto_Existente, 0;
    
        !Ponto acima do berço
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,300];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=FRAME_BufferC;
        GOTO p_aprox;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=FRAME_BufferB;
        GOTO p_aprox;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=FRAME_BufferA;
        ENDIF
                   
    p_aprox:
        !Ponto de aproximação
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        MotionSup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,30];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=FRAME_BufferC;
        GOTO p_ant_ag_1_2;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=FRAME_BufferB;
        GOTO p_ant_ag_1_2;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    p_ant_ag_1_2:    
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,5];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra\WObj:=FRAME_BufferC;
        GOTO  p_depos;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=FRAME_BufferB;
        GOTO  p_depos;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=FRAME_BufferA;
        ENDIF
    
    p_depos:
        !Destrava o produto
        GARRA_DestravarProduto;
        
        !Ponto final para depositar
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra\WObj:=FRAME_BufferC;
        GOTO a_garra;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=FRAME_BufferB;
        GOTO a_garra;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
        
      a_garra:
        !Deposita Produto
        GARRA_AbrirGarra;
        
        GripLoad load0;
        
        !Movimento de Recuo
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,300];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=FRAME_BufferC;
        GOTO ad_buffer;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=FRAME_BufferB;
        GOTO ad_buffer;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    ad_buffer:
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        MotionSup \On \TuneValue:= nSens_Colid_Mov_Geral;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,600];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z200, tGarra \WObj:=FRAME_BufferC;
        GOTO inposf_fam_1_2;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z200, tGarra \WObj:=FRAME_BufferB;
        GOTO inposf_fam_1_2;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z200, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        GOTO inposf_fam_1_2;
        
    inposf_fam_1_2:
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=FRAME_BufferC;
        GOTO final;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=FRAME_BufferB;
        GOTO final;
        ELSE
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=FRAME_BufferA;
        ENDIF
        GOTO final;
        
!*********************************************************************************************************************************************
!  PEGA PRODUTO NO BUFFER FAMILIAS 1 E 2
!*********************************************************************************************************************************************
    pega_fam_1_2:
        !Ciclo para pegar peça no buffer
        
        GARRA_VerificarGarraVazia;
        
        
        !Vai para posição intermediária no centro de massa
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=gWOBJDATA_FrameAtual);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z500, tGarra\WObj:=gWOBJDATA_FrameAtual; 
        
        !Abre Garra
        GARRA_DestravarProduto;
        GARRA_AbrirGarra;
        
        !Ponto acima da posição
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,600];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=FRAME_BufferC;
        GOTO  ap_berço;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=FRAME_BufferB;
        GOTO  ap_berço;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra\WObj:=FRAME_BufferA;
        ENDIF
      
     ap_berço:
        !Ponto acima do berço
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,300];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z100, tGarra \WObj:=FRAME_BufferC;
        GOTO  pp_aprox;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z100, tGarra \WObj:=FRAME_BufferB;
        GOTO  pp_aprox;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z100, tGarra\WObj:=FRAME_BufferA;
        ENDIF
        
    pp_aprox:        
        !Ponto de aproximação
        MotionSup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,30];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=FRAME_BufferC;
        GOTO  p_peça;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=FRAME_BufferB;
        GOTO  p_peça;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra\WObj:=FRAME_BufferA;
        ENDIF
          
    p_peça:
        !Ponto de pega
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        !IMF-20180619: um pouco mais baixo que o ponto marcado
        pPosição_Final_Buffer.trans.z := pPosição_Final_Buffer.trans.z - 3;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=FRAME_BufferC;
        GOTO f_garra;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=FRAME_BufferB;
        GOTO f_garra;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra\WObj:=FRAME_BufferA;
        ENDIF
        
    f_garra:        
        !Pega Produto
        GARRA_FecharGarra;
        
        TEST nNum_Fam
          CASE 1:        
            GripLoad lFamilia_1;
          CASE 2:
            GripLoad lFamilia_2;
          DEFAULT:
            EXIT;
        ENDTEST
        
        !Movimento de Recuo
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,0];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=FRAME_BufferC;
        GOTO  tp_ac_1_2;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=FRAME_BufferB;
        GOTO  tp_ac_1_2;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra\WObj:=FRAME_BufferA;
        ENDIF
        
    tp_ac_1_2:
        !Trava o produto
        GARRA_TravarProduto;
        
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,30];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z50, tGarra \WObj:=FRAME_BufferC;
        GOTO  tp_buffer;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z50, tGarra \WObj:=FRAME_BufferB;
        GOTO  tp_buffer;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z50, tGarra\WObj:=FRAME_BufferA;
        ENDIF
       
    tp_buffer:
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,300];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z80, tGarra\WObj:=FRAME_BufferC;
        GOTO  ap_buffer;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z80, tGarra \WObj:=FRAME_BufferB;
        GOTO  ap_buffer;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z80, tGarra\WObj:=FRAME_BufferA;
        ENDIF
        
    ap_buffer:        
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        MotionSup \On \TuneValue:= nSens_Colid_Mov_Geral;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,850];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z100, tGarra \WObj:=FRAME_BufferC;
        GOTO  inpegaposf_fam_1_2;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z100, tGarra \WObj:=FRAME_BufferB;
        GOTO  inpegaposf_fam_1_2;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z100, tGarra\WObj:=FRAME_BufferA;
        ENDIF
        GOTO inpegaposf_fam_1_2;
        
    inpegaposf_fam_1_2:
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferC;
        GOTO  final;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferB;
        GOTO  final;
        ELSE
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferA;
        ENDIF
        GOTO final;
          
!*********************************************************************************************************************************************
!  DEPOSITA PRODUTO NO BUFFER FAMILIA 3
!*********************************************************************************************************************************************

    deposita_fam_3:
        !Ciclo para depositar peça no buffer
        
        !Ponto intermediario centro de massa
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=FRAME_BufferC);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferC; 
        GOTO inpos_fam_3;
        ENDIF
        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=FRAME_BufferB);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferB; 
        GOTO inpos_fam_3;
        ELSE
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=FRAME_BufferA);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferA; 
        ENDIF
        
inpos_fam_3:        
        !Ponto acima da posição
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,850];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=FRAME_BufferC;
        GOTO verifica_fam_3;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=FRAME_BufferB;
        GOTO verifica_fam_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    verifica_fam_3:   
        !Verifica se já existe peça na posição selecionada
        IF DInput (DI_Pres_Peça_Berço_1) = 0 AND DInput (DI_Pres_Peça_Berço_2) = 1 GOTO a_berço_3;
        
        !Caso exista produto no berço selecionado
        TPWrite "Já existe um produto na posição "\num:= nPos_Buffer;
        SetDO PN_OUT_Produto_Existente, 1;
        Stop;
        GOTO inpos_fam_3;
        
    a_berço_3:
        SetDO PN_OUT_Produto_Existente, 0;
        
        !Ponto acima do berço
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,300] + [0,10,40];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=FRAME_BufferC;
        GOTO p_aprox_3;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=FRAME_BufferB;
        GOTO p_aprox_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=FRAME_BufferA;
        ENDIF
                   
    p_aprox_3:
        !Ponto de aproximação
        MotionSup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,10,40];
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z10, tGarra \WObj:=FRAME_BufferC;
        GOTO p_a_dep_fam_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z10, tGarra \WObj:=FRAME_BufferB;
        GOTO p_a_dep_fam_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z10, tGarra \WObj:=FRAME_BufferA;
        ENDIF
                
    p_a_dep_fam_3:
        !Ponto antes de depositar
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,40];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferC;
        GOTO p_ant_ag_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferB;
        GOTO p_ant_ag_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    p_ant_ag_3:
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,5];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=FRAME_BufferC;
        GOTO p_depos_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=FRAME_BufferB;
        GOTO p_depos_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    p_depos_3:
        !Destrava o produto
        GARRA_DestravarProduto;
        
        !Ponto final para depositar
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=FRAME_BufferC;
        GOTO a_garra_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=FRAME_BufferB;
        GOTO a_garra_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
        
      a_garra_3:
        !Deposita Produto
        GARRA_AbrirGarra;
        
        GripLoad load0;
        
        !Movimento de Recuo
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,300];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=FRAME_BufferC;
        GOTO ad_buffer_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=FRAME_BufferB;
        GOTO ad_buffer_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=FRAME_BufferA;
        ENDIF
               
    ad_buffer_3:
        MotionSup \On \TuneValue:= nSens_Colid_Mov_Geral;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,600];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z100, tGarra \WObj:=FRAME_BufferC;
        GOTO inposf_fam_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z100, tGarra \WObj:=FRAME_BufferB;
        GOTO inposf_fam_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z100, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        GOTO inposf_fam_3;
        
inposf_fam_3:
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=FRAME_BufferC;
        GOTO final;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=FRAME_BufferB;
        GOTO final;
        ELSE
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=FRAME_BufferA;
        ENDIF
        GOTO final;

!*********************************************************************************************************************************************
!  PEGA PRODUTO NO BUFFER FAMILIA 3
!*********************************************************************************************************************************************

     pega_fam_3:
        !Ciclo para pegar peça no buffer
    
        GARRA_VerificarGarraVazia;
        
        
        !Vai para posição intermediária no centro de massa
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=gWOBJDATA_FrameAtual);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z500, tGarra\WObj:=gWOBJDATA_FrameAtual; 

        !Abre Garra
        GARRA_DestravarProduto;
        GARRA_AbrirGarra;
        
        !Ponto acima da posição
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,600];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=FRAME_BufferC;
        GOTO  ap_berço_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=FRAME_BufferB;
        GOTO  ap_berço_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=FRAME_BufferA;
        ENDIF
      
      ap_berço_3:
        !Ponto acima do berço
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,300];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z100, tGarra \WObj:=FRAME_BufferC;
        GOTO  pp_aprox_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z100, tGarra \WObj:=FRAME_BufferB;
        GOTO  pp_aprox_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z100, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    pp_aprox_3:        
        !Ponto de aproximação
        MotionSup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,30];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=FRAME_BufferC;
        GOTO  p_peça_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=FRAME_BufferB;
        GOTO  p_peça_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=FRAME_BufferA;
        ENDIF
          
    p_peça_3:
        !Ponto de pega
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=FRAME_BufferC;
        GOTO f_garra_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=FRAME_BufferB;
        GOTO f_garra_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    f_garra_3:        
        !Pega Produto
        GARRA_FecharGarra;
        
        GripLoad lFamilia_3;
        
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,0];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=FRAME_BufferC;
        GOTO   tp_ac_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=FRAME_BufferB;
        GOTO   tp_ac_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=FRAME_BufferA;
        ENDIF
    
    tp_ac_3:
        !Trava o produto
        GARRA_TravarProduto;
    
        !Movimento 1 de Recuo
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,40];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferC;
        GOTO   m_1_p_fam_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferB;
        GOTO   m_1_p_fam_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    m_1_p_fam_3:
        !Movimento 2 de Recuo
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,10,40];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferC;
        GOTO   m_2_p_fam_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferB;
        GOTO   m_2_p_fam_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferA;
        ENDIF    
    
    m_2_p_fam_3:    
        !Movimento de Recuo
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,300];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z100, tGarra \WObj:=FRAME_BufferC;
        GOTO  ap_buffer_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z100, tGarra \WObj:=FRAME_BufferB;
        GOTO  ap_buffer_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z100, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    ap_buffer_3:     
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        MotionSup \On \TuneValue:= nSens_Colid_Mov_Geral;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,850];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, z100, tGarra \WObj:=FRAME_BufferC;
        GOTO  inpegaposf_fam_3;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, z100, tGarra \WObj:=FRAME_BufferB;
        GOTO  inpegaposf_fam_3;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, z100, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        GOTO inpegaposf_fam_3;
        
    inpegaposf_fam_3:
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferC;
        GOTO  final;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferB;
        GOTO  final;
        ELSE
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferA;
        ENDIF
        GOTO final;

!*********************************************************************************************************************************************
!  DEPOSITA PRODUTO NO BUFFER FAMILIA 4
!*********************************************************************************************************************************************

    deposita_fam_4:
        !Ciclo para depositar peça no buffer
        
        !Ponto intermediario centro de massa
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=FRAME_BufferC);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferC; 
        GOTO inpos_fam_4;
        ENDIF
        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=FRAME_BufferB);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferB; 
        GOTO inpos_fam_4;
        ELSE
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=FRAME_BufferA);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferA; 
        ENDIF
        
inpos_fam_4:        
        !Ponto acima da posição
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,850];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveJ pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=FRAME_BufferC;
        GOTO verifica_fam_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveJ pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=FRAME_BufferB;
        GOTO verifica_fam_4;
        ELSE
        MoveJ pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, fine, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    verifica_fam_4:   
        !Verifica se já existe peça na posição selecionada
        IF DInput (DI_Pres_Peça_Berço_1) = 0 AND DInput (DI_Pres_Peça_Berço_2) = 1 GOTO a_berço_4;
        
        !Caso exista produto no berço selecionado
        TPWrite "Já existe um produto na posição "\num:= nPos_Buffer;
        SetDO PN_OUT_Produto_Existente, 1;
        Stop;
        GOTO inpos_fam_4;
        
    a_berço_4:
        SetDO PN_OUT_Produto_Existente, 0;
    
        !Ponto acima do berço
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,300] + [-4,-12,45];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=FRAME_BufferC;
        GOTO p_aprox_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=FRAME_BufferB;
        GOTO p_aprox_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Com_Produto, z50, tGarra \WObj:=FRAME_BufferA;
        ENDIF
                   
    p_aprox_4:
        !Ponto de aproximação
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        MotionSup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [-4,-12,45];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z10, tGarra \WObj:=FRAME_BufferC;
        GOTO p_a_dep_fam_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z10, tGarra \WObj:=FRAME_BufferB;
        GOTO p_a_dep_fam_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z10, tGarra \WObj:=FRAME_BufferA;
        ENDIF
                
    p_a_dep_fam_4:
        !Ponto antes de depositar
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,45];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferC;
        GOTO p_ant_ag_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferB;
        GOTO p_ant_ag_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    p_ant_ag_4:
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,5];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=FRAME_BufferC;
        GOTO p_depos_4;
        ENDIF
       IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=FRAME_BufferB;
        GOTO p_depos_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    p_depos_4:
        !Destrava o produto
        GARRA_DestravarProduto;
        
        !Ponto final para depositar
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=FRAME_BufferC;
        GOTO a_garra_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=FRAME_BufferB;
        GOTO a_garra_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
        
      a_garra_4:
        !Deposita Produto
        GARRA_AbrirGarra;
        
        GripLoad load0;
        
        !Movimento de Recuo
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,300];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=FRAME_BufferC;
        GOTO ad_buffer_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveJ pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z50, tGarra \WObj:=FRAME_BufferB;
        GOTO ad_buffer_4;
        ELSE
        MoveJ pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=FRAME_BufferA;
        ENDIF
               
    ad_buffer_4:
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        MotionSup \On \TuneValue:= nSens_Colid_Mov_Geral;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,600];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z50, tGarra \WObj:=FRAME_BufferC;
        GOTO inposf_fam_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z50, tGarra \WObj:=FRAME_BufferB;
        GOTO inposf_fam_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, z50, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        GOTO inposf_fam_4;
        
    inposf_fam_4:
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=FRAME_BufferC;
        GOTO final;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=FRAME_BufferB;
        GOTO final;
        ELSE
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z200, tGarra\WObj:=FRAME_BufferA;
        ENDIF
        GOTO final;
      
!*********************************************************************************************************************************************
!  PEGA PRODUTO NO BUFFER FAMILIA 4
!*********************************************************************************************************************************************

     pega_fam_4:
        !Ciclo para pegar peça no buffer
        
        GARRA_VerificarGarraVazia;
                
        !Ponto acima da posição
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        
        pIntermedCentroMassa := pPosição_Final_Buffer;
	    jposIntermedCentroMassa := CalcJointT(pIntermedCentroMassa, tGarra \WObj:=gWOBJDATA_FrameAtual);
        jposIntermedCentroMassa.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
        jposIntermedCentroMassa.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
        jposIntermedCentroMassa.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
        jposIntermedCentroMassa.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;
                
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Sem_Produto, z500, tGarra\WObj:=gWOBJDATA_FrameAtual; 
  
        !Abre Garra
        GARRA_DestravarProduto;
        GARRA_AbrirGarra;
        
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,850];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=FRAME_BufferC;
        GOTO  ap_berço_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=FRAME_BufferB;
        GOTO  ap_berço_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    ap_berço_4:    
        !Ponto acima do berço
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,300];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=FRAME_BufferC;
        GOTO  pp_aprox_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=FRAME_BufferB;
        GOTO  pp_aprox_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, sMov_Aprox_Berço_Sem_Produto, z50, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    pp_aprox_4:        
        !Ponto de aproximação
        MotionSup \On \TuneValue:= nSens_Colid_Aprox;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,30];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=FRAME_BufferC;
        GOTO  p_peça_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=FRAME_BufferB;
        GOTO  p_peça_4;
        ELSE
        MoveL pMov_Pega_Depos_Buffer, SMov_Fina, z50, tGarra \WObj:=FRAME_BufferA;
        ENDIF
          
    p_peça_4:
        !Ponto de pega
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=FRAME_BufferC;
        GOTO f_garra_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveJ pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=FRAME_BufferB;
        GOTO f_garra_4;
        ELSE
        MoveJ pMov_Pega_Depos_Buffer, SMov_SuperFina, fine, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    f_garra_4:        
        !Pega Produto
        GARRA_FecharGarra;
        
        GripLoad lFamilia_4;
        
        AccSet nAcc_Mov_Pega_Depos, nRamp_Mov_Pega_Depos;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,0];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=FRAME_BufferC;
        GOTO   tp_ac_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveJ pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=FRAME_BufferB;
        GOTO   tp_ac_4;
        ELSE
        MoveJ pMov_Pega_Depos_Buffer, SMov_SuperFina, z1, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    tp_ac_4:
        !Trava o produto
        GARRA_TravarProduto;   
    
        !Movimento 1 de Recuo
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,45];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferC;
        GOTO   m_1_p_fam_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveJ pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferB;
        GOTO   m_1_p_fam_4;
        ELSE
        MoveJ pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    m_1_p_fam_4:   
        !Movimento 2 de Recuo
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [-4,-12,45];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferC;
        GOTO   m_2_p_fam_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveJ pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferB;
        GOTO   m_2_p_fam_4;
        ELSE
        MoveJ pMov_Pega_Depos_Buffer, SMov_SuperFina, z10, tGarra \WObj:=FRAME_BufferA;
        ENDIF    
    
    m_2_p_fam_4:    
        !Movimento de Recuo
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,300];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z50, tGarra \WObj:=FRAME_BufferC;
        GOTO  ap_buffer_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveJ pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z50, tGarra \WObj:=FRAME_BufferB;
        GOTO  ap_buffer_4;
        ELSE
        MoveJ pMov_Pega_Depos_Buffer, SMov_Levanta_Com_Produto, z50, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        
    ap_buffer_4:
        AccSet nAcc_Mov_Geral, nRamp_Mov_Geral;
        MotionSup \On \TuneValue:= nSens_Colid_Mov_Geral;
        pMov_Pega_Depos_Buffer := pPosição_Final_Buffer;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,850];
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveL pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, z50, tGarra \WObj:=FRAME_BufferC;
        GOTO  inpegaposf_fam_4;
        ENDIF
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveJ pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, z50, tGarra \WObj:=FRAME_BufferB;
        GOTO  inpegaposf_fam_4;
        ELSE
        MoveJ pMov_Pega_Depos_Buffer, sMov_Geral_Com_Produto, z50, tGarra \WObj:=FRAME_BufferA;
        ENDIF
        GOTO inpegaposf_fam_4;
        
    inpegaposf_fam_4:
        IF (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferC;
        GOTO  final;
        ENDIF        
        IF (nPos_Buffer >= 1 AND nPos_Buffer <= 9) THEN
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferB;
        GOTO  final;
        ELSE
        MoveAbsJ jposIntermedCentroMassa, sMov_Geral_Com_Produto, z200, tGarra\WObj:=FRAME_BufferA;
        ENDIF
        GOTO final;
 
    final:
        IF GInput (PN_IN_Numero_Programa) = 3 THEN
        !Vai Posição de Trabalho
        MoveJ pPosicaoHome, sMov_Geral_Sem_Produto, z200, tGarra \WObj:=wobj0;
        GOTO fim;
        ENDIF
    
        IF (GInput (PN_IN_Numero_Programa) = 4 AND (nPos_Buffer >= 13 AND nPos_Buffer <= 15) OR (nPos_Buffer >= 19 AND nPos_Buffer <= 21) OR (nPos_Buffer >= 25 AND nPos_Buffer <= 27) OR (nPos_Buffer >= 31 AND nPos_Buffer <=33) OR (nPos_Buffer >= 37 AND nPos_Buffer <= 39) OR (nPos_Buffer >= 43 AND nPos_Buffer <= 45) OR (nPos_Buffer >= 49 AND nPos_Buffer <= 51) OR (nPos_Buffer >= 55 AND nPos_Buffer <=57) OR (nPos_Buffer >= 61 AND nPos_Buffer <= 63) OR (nPos_Buffer >= 67 AND nPos_Buffer <= 69) OR (nPos_Buffer >= 73 AND nPos_Buffer <= 75) OR (nPos_Buffer >= 79 AND nPos_Buffer <= 81) OR (nPos_Buffer >= 85 AND nPos_Buffer <= 87) OR (nPos_Buffer >= 91 AND nPos_Buffer <= 93) OR (nPos_Buffer >= 97 AND nPos_Buffer <= 99)) GOTO fim;
   
        !Vai Posição de Trabalho
        MoveJ pPosicaoHome, sMov_Geral_Com_Produto, z200, tGarra \WObj:=wobj0;
              
    fim:
        !Avisa clp que finalizou rotina
        CICLO_ComunicaCLP;
        
	ENDPROC
        
    !*************************************************************************************************************************
    !Troca de Dados CLP
    !*************************************************************************************************************************
    PROC CICLO_ComunicaCLP()
        !Avisa clp que finalizou rotina
        Set PN_OUT_Programa_Finalizado;
        WaitGI PN_IN_Numero_Programa, 0;
        Reset PN_OUT_Programa_Finalizado;
    ENDPROC

    !*************************************************************************************************************************
    !Reset de flags
    !*************************************************************************************************************************
    PROC CICLO_ResetFlags()
        SetDO \Sync, PN_OUT_Solicita_Abertura, 0;
        SetDO \Sync, PN_OUT_Solicita_Fecha_Garra, 0;
        SetDO\Sync, PN_OUT_Programa_Finalizado, 0;
    ENDPROC
    
    !*************************************************************************************************************************
    !TRAP (Interrupção) de segurança Esteira Entrada
    !*************************************************************************************************************************
    !Desativa Trap
    PROC DesativaTrapEntrada()
        IDelete INT_TrapEntrada;
    ENDPROC
    
    !Ativa Trap
    PROC AtivaTrapEntrada()
        !Trap deve ser ativada uma vez só. Portanto, garante que ela está desativada antes
        DesativaTrapEntrada;
        
        !Agora sim, conecta a função
        CONNECT INT_TrapEntrada WITH TRAP_SegurancaPalletEntrada;
        ISignalDI PN_IN_SegurancaPalletEntrada, 0, INT_TrapEntrada;
    ENDPROC

    !Trap propriamente dita
    TRAP TRAP_SegurancaPalletEntrada
        !Avisa e para.
        MsgBoxStop("Segurança Perdida no Pallet de Entrada");
    ENDTRAP
    
    !*************************************************************************************************************************
    !TRAP (Interrupção) de segurança Esteira Saída
    !*************************************************************************************************************************
    !Desativa Trap
    PROC DesativaTrapSaida()
        IDelete INT_TrapSaida;
    ENDPROC
    
    !Ativa Trap
    PROC AtivaTrapSaida()
        !Trap deve ser ativada uma vez só. Portanto, garante que ela está desativada antes
        DesativaTrapSaida;
        
        !Agora sim, conecta a função
        CONNECT INT_TrapSaida WITH TRAP_SegurancaPalletSaida;
        ISignalDI PN_IN_SegurancaPalletSaida, 0, INT_TrapSaida;
    ENDPROC

    !Trap propriamente dita
    TRAP TRAP_SegurancaPalletSaida
        !Avisa e para.
        MsgBoxStop("Segurança Perdida no Pallet de Saída");
    ENDTRAP
    
    !*************************************************************************************************************************
    !TRAP (Interrupção) de segurança Sensor de Presença Garra na Saída
    !*************************************************************************************************************************
    !Desativa Trap
    PROC DesativaTrapPresencaGarraSaida()
        IDelete INT_TrapPresencaGarraSaida;
    ENDPROC
    
    !Ativa Trap
    PROC AtivaTrapPresencaGarraSaida()
        !Trap deve ser ativada uma vez só. Portanto, garante que ela está desativada antes
        DesativaTrapPresencaGarraSaida;
        
        !Agora sim, conecta a função
        CONNECT INT_TrapPresencaGarraSaida WITH TRAP_SegurancaPresencaGarraSaida;
        ISignalDI DI_Pres_Peça_Garra_1, 1, INT_TrapPresencaGarraSaida;
    ENDPROC

    !Trap propriamente dita
    TRAP TRAP_SegurancaPresencaGarraSaida
        !Avisa e para.
        MsgBoxStop("Presença de Peça na Garra Continua Ativa. Peça Enroscou ou Sensor está sujo?");
    ENDTRAP
    
    !*************************************************************************************************************************
    !TRAP (Interrupção) de segurança Garra Aberta
    !*************************************************************************************************************************
    !Desativa Trap
    PROC DesativaTrapGarraAberta()
        IDelete INT_TrapGarraAberta;
    ENDPROC
    
    !Ativa Trap
    PROC AtivaTrapGarraAberta()
        !Trap deve ser ativada uma vez só. Portanto, garante que ela está desativada antes
        DesativaTrapGarraAberta;
        
        !Agora sim, conecta a função
        CONNECT INT_TrapGarraAberta WITH TRAP_SegurancaGarraAberta;
        ISignalDI PN_IN_Garra_Aberta, 0, INT_TrapGarraAberta;
    ENDPROC

    !Trap propriamente dita
    TRAP TRAP_SegurancaGarraAberta
        !Avisa e para.
        MsgBoxStop("Segurança: Garra não está aberta");
    ENDTRAP
    
    !*************************************************************************************************************************
    !Retorna wObjData (Frame) de um index qualquer do Buffer
    !*************************************************************************************************************************
     FUNC wobjdata GetWObjBuffer(Num i)
            
         !Area C (Robô de Costas para Esteira, à Direita
            IF (i >= 13 AND i <= 15) OR (i >= 19 AND i <= 21) OR (i >= 25 AND i <= 27) OR (i >= 31 AND i <=33) OR (i >= 37 AND i <= 39) OR (i >= 43 AND i <= 45) OR (i >= 49 AND i <= 51) OR (i >= 55 AND i <=57) OR (i >= 61 AND i <= 63) OR (i >= 67 AND i <= 69) OR (i >= 73 AND i <= 75) OR (i >= 79 AND i <= 81) OR (i >= 85 AND i <= 87) OR (i >= 91 AND i <= 93) OR (i >= 97 AND i <= 99) THEN
                Return FRAME_BufferC;
            
            !Area B (Robô de Costas para Esteira, à sua Frente
            ELSEIF (i >= 1 AND i <= 9) THEN
                RETURN FRAME_BufferB;

            !Area A (Robô de Costas para Esteira, à sua Esquerda
            ELSE
                RETURN FRAME_BufferA;
            ENDIF
     ENDFUNC
     

    !*************************************************************************************************************************
    !Verifica se robô encontra-se em um cubo cujo centro é um ponto conhecido
    !*************************************************************************************************************************
    FUNC bool IsRoboEmPosicao(robtarget pTarget, wobjdata pFrame, num pLimite)
        VAR bool lBOOL_EmPosicao;
        VAR robtarget lROBTARGET_PosicaoAtual;
        VAR num lNUM_LimiteMax;
        VAR num lNUM_LimiteMin;
        
        gWOBJDATA_FrameAtual := pFrame;
        lROBTARGET_PosicaoAtual := CRobT(\Tool:=tGarra \WObj:=gWOBJDATA_FrameAtual);
        lBOOL_EmPosicao := FALSE;
        
        !Verifica Limites X:
        lNUM_LimiteMin := lROBTARGET_PosicaoAtual.trans.x - pLimite;
        lNUM_LimiteMax := lROBTARGET_PosicaoAtual.trans.x + pLimite;
        lBOOL_EmPosicao := (pTarget.trans.x > lNUM_LimiteMin) AND (pTarget.trans.x < lNUM_LimiteMax);
            
        !Verifica Limites Y:
        lNUM_LimiteMin := lROBTARGET_PosicaoAtual.trans.y - pLimite;
        lNUM_LimiteMax := lROBTARGET_PosicaoAtual.trans.y + pLimite;
        lBOOL_EmPosicao := lBOOL_EmPosicao AND (pTarget.trans.y > lNUM_LimiteMin) AND (pTarget.trans.y < lNUM_LimiteMax);
        
        !Verifica Limites Z:
        lNUM_LimiteMin := lROBTARGET_PosicaoAtual.trans.z - pLimite;
        lNUM_LimiteMax := lROBTARGET_PosicaoAtual.trans.z + pLimite;
        lBOOL_EmPosicao := lBOOL_EmPosicao AND (pTarget.trans.z > lNUM_LimiteMin) AND (pTarget.trans.z < lNUM_LimiteMax);
        
        RETURN lBOOL_EmPosicao;
     ENDFUNC
     
     
    !*************************************************************************************************************************
    !Retorna área de um index qualquer do Buffer
    !*************************************************************************************************************************
     FUNC string GetAreaBuffer(Num i)
            
         !Area C (Robô de Costas para Esteira, à Direita
            IF (i >= 13 AND i <= 15) OR (i >= 19 AND i <= 21) OR (i >= 25 AND i <= 27) OR (i >= 31 AND i <=33) OR (i >= 37 AND i <= 39) OR (i >= 43 AND i <= 45) OR (i >= 49 AND i <= 51) OR (i >= 55 AND i <=57) OR (i >= 61 AND i <= 63) OR (i >= 67 AND i <= 69) OR (i >= 73 AND i <= 75) OR (i >= 79 AND i <= 81) OR (i >= 85 AND i <= 87) OR (i >= 91 AND i <= 93) OR (i >= 97 AND i <= 99) THEN
                Return "C";
            
            !Area B (Robô de Costas para Esteira, à sua Frente
            ELSEIF (i >= 1 AND i <= 9) THEN
                RETURN "B";

            !Area A (Robô de Costas para Esteira, à sua Esquerda
            ELSE
                RETURN "A";
            ENDIF
     ENDFUNC
    
    !*************************************************************************************************************************
    !Retorna indexes somente da familia 4
    !*************************************************************************************************************************
     FUNC bool IsIndexHL8(Num i)
            
         !Area C (Robô de Costas para Esteira, à Direita
         TEST i
            CASE 7,8,9,12,13,18,19,24,25,30,31,36,37,42,43,48,49,54,55,60,61,66,67,72,73,78,79,84,85,90,91,96,97:
                RETURN TRUE;
             DEFAULT:
                RETURN FALSE;
         ENDTEST
     ENDFUNC     
     
    !*************************************************************************************************************************
    !Retorna a Posição Específica no Buffer (i= Index Buffer, f= Familia)
    !*************************************************************************************************************************
     FUNC robtarget GetPosicaoBuffer(Num i, Num f)
         VAR robtarget RT_PosicaoBuffer;
         
         GetDataVal "pBuffer_Pos_" + NumToStr(i, 0) + "_Fam_" + NumToStr(f, 0), RT_PosicaoBuffer;
         
         RETURN RT_PosicaoBuffer;
     ENDFUNC
 
    !*************************************************************************************************************************
    !Retorna a velocidade por familia (f= Familia)
    !*************************************************************************************************************************
     FUNC speeddata GetSpeedDataFamilia(string s, num f)
         VAR speeddata SPEEDDATA_aux;
         
         GetDataVal s + "_Fam_" + NumToStr(f, 0), SPEEDDATA_aux;
         
         RETURN SPEEDDATA_aux;
     ENDFUNC     
     
    !*************************************************************************************************************************
    !Grava as coordenadas x y, ângulos e 7o eixo atuais em um posição específica no Buffer (i= Index Buffer, f= Familia)
    !A altura "Z" não será afetada. Isso permite que o usuário mexa o robô "mais ou menos" na posição, mesmo sem manter a
    !altura final
    !*************************************************************************************************************************
    PROC SetPosicaoBuffer(Num i, Num f, robtarget pos)
        SetDataVal "pBuffer_Pos_" + NumToStr(i, 0) + "_Fam_" + NumToStr(f, 0), pos;
    ENDPROC
    
    
    !Teste
    FUNC bool WriteWaitFeedback(VAR signalgo o, VAR signalgi i, num n)
        VAR num NUM_Timeout;
        !Primeiro escreve a tag
        SetGO o, n;
        
        !Agora aguarda o CLP copiar a tag, confirmando que já foi recebido o valor
        WaitGI i, n \MaxTime:=5 \ValueAtTimeout:=NUM_Timeout;
        
        !Se passou é pq já copiou
        RETURN TRUE;
        
        !Se caiu no CATCH é pq não copiou
        !Catch de erros desta rotina
        ERROR
            IF ERRNO=ERR_WAIT_MAXTIME THEN
                RETURN FALSE;
            ENDIF
    ENDFUNC
    
    !*************************************************************************************************************************
    !Rotinas de Garra: Abrir (Recuar Servos Para Fora)
    !*************************************************************************************************************************
    PROC GARRA_AbrirGarra()
        VAR num NUM_Familia;
        VAR num NUM_TIMEOUT_Familia;
        VAR bool CopyFamiliaOk;
        VAR bool ERRO;
        
		!Inicio de ciclo de abertura de garra

        verifica_novamente:
        
            !Reset Erro
            ERRO := FALSE;
            
            !Verifica qual a família
            NUM_Familia := GInput(PN_IN_Numero_Familia);
        
            !Escreve e aguarda o CLP copiar de volta a tag, confirmando que já foi recebida
            CopyFamiliaOk := WriteWaitFeedback(PN_GO_Modelo_Produto, PN_IN_GI_Reserva, NUM_Familia);
            
            !Problema ao escrever-e-ler o valor no/do CLP
            IF NOT CopyFamiliaOk THEN
                MsgBoxStop("CLP não copiou família p/ garra (" + ValToStr(GInput(PN_IN_GI_Reserva)) + " ao invés de " + ValToStr(NUM_Familia) + ")");
                ERRO := TRUE;
                GOTO verifica_novamente;
            ENDIF
            
        continue:  
            
            
            !Revisa se cilindros estão recuados
            WaitDI DI_Fixa_Peça_1_Av, 0\MaxTime:= 5\TimeFlag:=timeout_rc1;
            WaitDI DI_Fixa_Peça_2_Av, 0\MaxTime:= 5\TimeFlag:=timeout_rc2;
            WaitDI DI_Fixa_Peça_1_Rc, 1\MaxTime:= 5\TimeFlag:=timeout_rc3;
            WaitDI DI_Fixa_Peça_2_Rc, 1\MaxTime:= 5\TimeFlag:=timeout_rc4;
            
            !Se inconsistente, avisa erro:
            IF (timeout_rc1 OR timeout_rc2 OR timeout_rc3 OR timeout_rc4) = TRUE THEN
                PulseDO\PLength:=1, PN_OUT_DO_Cil_NRc;
                TPWrite "Inconsistencia Processo, Travas nao estao recuadas!";
                Stop;
                GOTO continue;
            ENDIF
            
            !Solicita Abertura de Garra
            SetDO PN_OUT_Solicita_Abertura, 1;
            WaitTime 0.5;
            
            WaitDI PN_IN_Garra_Fechada, 0\MaxTime:= 5\TimeFlag:=timeout_rc1;
            WaitDI PN_IN_Garra_Aberta, 1\MaxTime:= 5\TimeFlag:=timeout_rc2;
            
            !Se não abriu, avisa erro:
            IF (timeout_rc1 OR timeout_rc2) = TRUE THEN
                PulseDO\PLength:=1, PN_OUT_DO_Cil_NRc;
                SetDO \Sync, PN_OUT_Solicita_Abertura, 0;
                TPWrite "Supervisao Posicionamento Garra, Servos nao Abriram!";
                Stop;
                GOTO continue;
            ENDIF
            
            !Reseta pedido
            SetDO PN_OUT_Solicita_Abertura, 0;
            
        
	ENDPROC
    
    !*************************************************************************************************************************
    !Rotinas de Garra: Fechar (Avançar Servos Para o Centro)
    !*************************************************************************************************************************
    PROC GARRA_FecharGarra()
    	!Inicio de ciclo de fechamento de garra
        
        verifica_novamente:   
            nNum_Fam := GInput(PN_IN_Numero_Familia);
            WaitTime 0.2;
            SetGO PN_GO_Modelo_Produto, nNum_Fam;
            WaitTime 0.2;
            
            IF GOutput (PN_GO_Modelo_Produto) = nNum_Fam THEN
                GOTO continue;
            ELSE
                TPWrite "CLP não carregou valor correto para fechamento de garra";
                StopMove;
                GOTO verifica_novamente;
            ENDIF              
            
        continue:

            !Revisa se cilindros estão recuados
            WaitDI DI_Fixa_Peça_1_Av, 0\MaxTime:= 5\TimeFlag:=timeout_rc1;
            WaitDI DI_Fixa_Peça_2_Av, 0\MaxTime:= 5\TimeFlag:=timeout_rc2;
            WaitDI DI_Fixa_Peça_1_Rc, 1\MaxTime:= 5\TimeFlag:=timeout_rc3;
            WaitDI DI_Fixa_Peça_2_Rc, 1\MaxTime:= 5\TimeFlag:=timeout_rc4;
            
            !Se inconsistente, avisa erro:
            IF (timeout_rc1 OR timeout_rc2 OR timeout_rc3 OR timeout_rc4) = TRUE THEN
                PulseDO\PLength:=1, PN_OUT_DO_Cil_NRc;
                TPWrite "Inconsistencia Processo, Travas nao estao recuadas!";
                Stop;
                GOTO continue;
            ENDIF
        
            !Solicita Fechamento Servos:
            SetDO \Sync, PN_OUT_Solicita_Fecha_Garra, 1;
            SetDO\Sync, PN_OUT_Solicita_Abertura, 0;    
            
            WaitDI PN_IN_Garra_Aberta, 0\MaxTime:= 5\TimeFlag:=timeout_av1;
            WaitDI PN_IN_Garra_Fechada, 1\MaxTime:= 5\TimeFlag:=timeout_av2;
            
            !Se não abriu, avisa erro:
            IF (timeout_av1 OR timeout_av2) = TRUE THEN
                PulseDO\PLength:=1, PN_OUT_DO_Cil_NAv;
                SetDO \Sync, PN_OUT_Solicita_Fecha_Garra, 0;
                TPWrite "Supervisao Posicionamento Garra, Servos nao Fecharam!";
                Stop;
                GOTO continue;
            ENDIF
            
            SetDO \Sync, PN_OUT_Solicita_Fecha_Garra, 0;                
	ENDPROC
    
    !*************************************************************************************************************************
    !Rotinas de Garra: Travar (Avançar Index Cilindros)
    !*************************************************************************************************************************
    PROC GARRA_TravarProduto()
     init_tp:    
        SetDO PN_OUT_DO_Cil_NAv, 0;
        
        !Trava Produto
        SetDO \Sync, DO_Rc_Fixação_Peça, 0;
        SetDO \Sync, DO_Av_Fixação_Peça, 1;
        !Wait sensores avançado
        WaitTime 1;
        WaitDI DI_Fixa_Peça_1_Rc, 0\MaxTime:= 5\TimeFlag:=timeout_av1;
        WaitDI DI_Fixa_Peça_2_Rc, 0\MaxTime:= 5\TimeFlag:=timeout_av2;
        WaitDI DI_Fixa_Peça_1_Av, 1\MaxTime:= 5\TimeFlag:=timeout_av3;
        WaitDI DI_Fixa_Peça_2_Av, 1\MaxTime:= 5\TimeFlag:=timeout_av4;
        IF (timeout_av1 OR timeout_av2 OR timeout_av3 OR timeout_av4) = TRUE THEN
            PulseDO\PLength:=1, PN_OUT_DO_Cil_NAv;
            TPWrite "Supervisao Sensores, Travas não Avançaram";
            Stop;
            GOTO init_tp;
        ENDIF
        
    ENDPROC
    
    !*************************************************************************************************************************
    !Rotinas de Garra: Destravar (Recuar Index Cilindros)
    !*************************************************************************************************************************
    PROC GARRA_DestravarProduto()
    init_dp:  
        SetDO PN_OUT_DO_Cil_NRc, 0;
    
        !Destrava produto na garra
        SetDO \Sync, DO_Av_Fixação_Peça, 0;
        SetDO \Sync, DO_Rc_Fixação_Peça, 1;
        WaitDI DI_Fixa_Peça_1_Av, 0\MaxTime:= 5\TimeFlag:=timeout_rc1;
        WaitDI DI_Fixa_Peça_2_Av, 0\MaxTime:= 5\TimeFlag:=timeout_rc2;
        WaitDI DI_Fixa_Peça_1_Rc, 1\MaxTime:= 5\TimeFlag:=timeout_rc3;
        WaitDI DI_Fixa_Peça_2_Rc, 1\MaxTime:= 5\TimeFlag:=timeout_rc4;
        IF (timeout_rc1 OR timeout_rc2 OR timeout_rc3 OR timeout_rc4) = TRUE THEN
            PulseDO\PLength:=1, PN_OUT_DO_Cil_NRc;
            TPWrite "Supervisao Sensores, Travas não Recuaram";
            Stop;
            GOTO init_dp;
        ENDIF       
    ENDPROC
    
    !*************************************************************************************************************************
    !Rotinas de Garra: Validar Sensor Laser
    !*************************************************************************************************************************
    PROC GARRA_VerificarLaser()
     inicio:
        IF DInput (DI_Pres_Peça_Berço_1) = 0 AND DInput (DI_Pres_Peça_Berço_2) = 1 GOTO Fim;
        
        PulseDO\PLength:=1, PN_OUT_Produto_Existente;
        TPErase;
        TPWrite "Sensor de presença de peça no berço acionado. Verifique";
        Stop;
        GOTO inicio;
        
    Fim:
        SetDO PN_OUT_Produto_Existente, 0;
    ENDPROC
    
    !*************************************************************************************************************************
    !Rotinas de Garra: Validar sensores garra / Garantir que a garra está vazia
    !*************************************************************************************************************************
    PROC GARRA_VerificarGarraVazia()
    !Verifica se robô tem peça na garra ou não 
    
    Verifica:
        IF DI_Pres_Peça_Garra_2 = 1 AND DI_Pres_Peça_Garra_1 = 0 THEN 
            GOTO Fim;
        ELSE
            TPErase;
            TPWrite "Deposite manualmente o produto encontrado na garra e reinicie o ciclo";
            TPWrite "Após depositar o produto, adicionar código do produto na IHM";
            IF GInput (PN_IN_Numero_Programa) = 2 THEN
                TPWrite "Programa 'Pega na Esteira de Entrada' necessita de garra vazia para iniciar";
                PulseDO\PLength:=2, PN_OUT_Pos_Home_Manual;
            ELSEIF GInput (PN_IN_Numero_Programa) = 4 THEN
                TPWrite "Programa 'Pega Peça no Buffer' necessita de garra vazia para iniciar";
                PulseDO\PLength:=2, PN_OUT_Pos_Home_Manual;
            ENDIF    
            WaitUntil DI_Pres_Peça_Garra_2 = 1 AND DI_Pres_Peça_Garra_1 = 0;
            GOTO Verifica;
        ENDIF
    Fim:
    ENDPROC

    
    !*************************************************************************************************************************
    !Rotinas de Garra: Define Grip Load da família
    !*************************************************************************************************************************
    PROC GARRA_ConfigurarCarga(Num f)
        TEST f
			CASE 1:
				GripLoad lFamilia_1;
			CASE 2:
				GripLoad lFamilia_2;
			CASE 3:
				GripLoad lFamilia_3;
			CASE 4:
				GripLoad lFamilia_4;

			DEFAULT:
				!Erro
				MsgBoxStop("Número da Família recebida pelo CLP Inexistente!");
				EXIT;
		ENDTEST
    ENDPROC
    
    !*************************************************************************************************************************
    !Função para ser chamada pela manutenção (retorno para home)
    !*************************************************************************************************************************
    PROC EXTRAS_PosicionaHomeManual()
        VAR robtarget pPosição_Atual;
        VAR num nAux_Limite_Low;
        
        !Movimente manualmente o robô até uma posição em que esteja livre de colisão e acione os comandos abaixo.
        
    verif: 
        pPosição_Atual := CRobT(\Tool:=tGarra \WObj:=wobj0);
        
        nAux_Limite_Low := 550;
        IF (pPosição_Atual.trans.z > nAux_Limite_Low) THEN
            GOTO DoHome;
        ELSE
            TPErase;
            TPWrite "Posicione Robô mais Alto";
            Stop\NoRegain;
            GOTO verif;
        ENDIF
        
    DoHome:
        MoveJ pPosicaoHome, sMov_Geral_Sem_Produto, fine, tGarra \WObj:=wobj0;
        SetDO PN_OUT_Pos_Home_Manual, 0;
        
        
    ENDPROC
    
!*****************************************************************************************************************************
    !FUNÇÕES EXTRAS: Teste de Posições no Buffer (Área "A" - à esquerda do robô quando de costas para as esteiras )
    !*****************************************************************************************************************************
    PROC EXTRAS_TesteBufferAreas()
        !Este programa irá enviar o robô à partir de home, index-por-index (de trás para frente) relacionados às áreas do Buffer
        
        
        VAR num f;
        VAR num zLoopValida;
        VAR num zFinal;
        VAR num i_ini;
        VAR num InputUsuarioArea;
        VAR num InputUsuario3Opcoes;

        VAR bool InputUsuarioSim;
        VAR bool InputUsuarioDescer;
        VAR bool init;
        VAR bool SaiLoopValida;
        VAR bool InputUsuarioCrescente;
        
        VAR robtarget RT_PosicaoBuffer;
        VAR robtarget RT_PosicaoAuxiliar;
        VAR jointtarget RJ_PosicaoAuxiliar;
        
        VAR speeddata SPEEDDATA_VelocidadeAuxiliar;
        VAR string STR_AreaSelecionada;
        
        !Considerações iniciais
        TPErase;
        TPWrite "Este programa irá enviar o robô index-por-index. Já deve existir peça na garra!";
        TPWrite "Para sobrescrever os pontos, garanta que foram renomeados de CONST para PERS.";
        Stop;
        TPErase;
        
        StartMove;
        
        !Pergunta ao usuário qual família
        f := MsgBoxInputUsuarioModelo();
        
        !Se usuário cancelou, encerra
        IF f = 5 THEN
            EXIT;
        ENDIF
        
        !Pergunta ao usuário qual área de trabalho
        !(1=Pallet Entrada, 2=Pallet Saída, 3=A, 4=B, 5=C)
        InputUsuarioArea := MsgBoxInputUsuarioWorkObject();
        
        TEST InputUsuarioArea
            CASE 3:
                STR_AreaSelecionada := "A";
            CASE 4:
                STR_AreaSelecionada := "B";
            CASE 5: 
                STR_AreaSelecionada := "C";
            DEFAULT:
                MsgBoxStop("Função Ainda Não Suportada!");
                EXIT;
        ENDTEST
        
        !Pergunta ao usuário por qual index começar
        gNUM_IteradorBuffer := MsgBoxInputNumericoUsuario("Qual local do Buffer iniciar? (de 1 a 99). 0 = 'Cancelar'");
        
        !Se usuário cancelou, encerra
        IF (gNUM_IteradorBuffer = 0) OR (gNUM_IteradorBuffer > 99) THEN
            EXIT;
        ENDIF

        !Pergunta ao usuário se adiciona ou decrementa os indexes
        InputUsuarioCrescente := MsgBoxSimNao("Iterar de forma Crescente ou Decrescente?", "Crescente", "Decrescente");
        
        !Inicializa Parametros
        AccSet 60, 40;
        MotionSup \On \TuneValue:= 200;
        
        !Vai pra Home?
        IF MsgBoxSimNao("Retornar para Home?", "Sim", "Não") THEN
            SPEEDDATA_VelocidadeAuxiliar := GetSpeedDataFamilia("SPEEDDATA_Geral", f);
            MoveJ pPosicaoHome, SPEEDDATA_VelocidadeAuxiliar, z500, tGarra\WObj:=wobj0;
        ENDIF
        
        init := TRUE;        
        
        !index-por-index (de trás para frente)
        WHILE gNUM_IteradorBuffer > 0 DO
            !Verifica se index corresponde à área selecionada (A, B ou C)
            IF GetAreaBuffer(gNUM_IteradorBuffer) <> STR_AreaSelecionada THEN
                GOTO break_a;
            ENDIF
            
            !Se família HL8, verifica se posição corresponde
            IF (f = 4) AND (NOT IsIndexHL8(gNUM_IteradorBuffer)) THEN
                GOTO break_a;
            ENDIF
            
            
            !Lê o valor da posição através da descrição da tag
            RT_PosicaoBuffer := GetPosicaoBuffer(gNUM_IteradorBuffer, f);
            
            !Lê qual o frame da posição atual
            gWOBJDATA_FrameAtual := GetWObjBuffer(gNUM_IteradorBuffer);
            
            
            IF init THEN
                !Vai para centro de massa
                !Ponto intermediario centro de massa
                RT_PosicaoAuxiliar := RT_PosicaoBuffer;
        	    RJ_PosicaoAuxiliar := CalcJointT(RT_PosicaoAuxiliar, tGarra \WObj:=gWOBJDATA_FrameAtual);
                RJ_PosicaoAuxiliar.robax.rax_2 := jposRecolhidoEsteira.robax.rax_2;
                RJ_PosicaoAuxiliar.robax.rax_3 := jposRecolhidoEsteira.robax.rax_3;
                RJ_PosicaoAuxiliar.robax.rax_4 := jposRecolhidoEsteira.robax.rax_4;
                RJ_PosicaoAuxiliar.robax.rax_5 := jposRecolhidoEsteira.robax.rax_5;

                SPEEDDATA_VelocidadeAuxiliar := GetSpeedDataFamilia("SPEEDDATA_Geral", f);
                MoveAbsJ RJ_PosicaoAuxiliar, SPEEDDATA_VelocidadeAuxiliar, z500, tGarra\WObj:=gWOBJDATA_FrameAtual;        
                init := false; 
            ENDIF
            
            
            !Vai para posição acima do local de deposita
            RT_PosicaoAuxiliar := RT_PosicaoBuffer;
            RT_PosicaoAuxiliar.trans.z := RT_PosicaoAuxiliar.trans.z + 450;
            
            SPEEDDATA_VelocidadeAuxiliar := GetSpeedDataFamilia("SPEEDDATA_Geral", f);
            MoveL RT_PosicaoAuxiliar, SPEEDDATA_VelocidadeAuxiliar, z20, tGarra\WObj:=gWOBJDATA_FrameAtual;
        
            !Ponto acima do berço (seguro)
            RT_PosicaoAuxiliar := RT_PosicaoBuffer;
            RT_PosicaoAuxiliar.trans.z := RT_PosicaoAuxiliar.trans.z + 300;
            
            SPEEDDATA_VelocidadeAuxiliar := GetSpeedDataFamilia("SPEEDDATA_Geral", f);
            MoveL RT_PosicaoAuxiliar, SPEEDDATA_VelocidadeAuxiliar, z50, tGarra\WObj:=gWOBJDATA_FrameAtual;
        
            !Aqui já temos uma boa idéia se irá entrar sem bater. 
            !Se precisar de algum ajuste, usuário poderá fazê-lo e confirmar
            StopMove;
            
            ClearPath;
            !InputUsuarioSim := MsgBoxSimNao("Ajustar a posição de entrada e confirmar para prosseguir", "Prosseguir", "Cancelar");
            MsgBoxStop("Ajustar a posição de entrada. Aperte 'Play' para prosseguir");
            StartMove;
                        
            !Ponto de aproximação
            AccSet 30, 40;
            MotionSup \On \TuneValue:= 80;
            
            !Parte-se do princípio que usuário alterou a posição relativa
            !Pega posição atual e altera Z para bater com a posição do buffer
            RT_PosicaoAuxiliar := CRobT(\Tool:=tGarra \WObj:=gWOBJDATA_FrameAtual);
            RT_PosicaoAuxiliar.trans.z := RT_PosicaoBuffer.trans.z + 55;
            
            SPEEDDATA_VelocidadeAuxiliar := GetSpeedDataFamilia("SPEEDDATA_AtaqueLinSeg", f);
            MoveL RT_PosicaoAuxiliar, SPEEDDATA_VelocidadeAuxiliar, z0, tGarra\WObj:=gWOBJDATA_FrameAtual;
        
            !Registra Z original do ponto em questão
            zFinal := RT_PosicaoBuffer.trans.z;
            
            !Aqui já temos uma boa idéia se irá entrar sem bater. 
            !Se precisar de algum ajuste, usuário poderá fazê-lo e confirmar
            
            StopMove;
            ClearPath;
            InputUsuario3Opcoes := MsgBox3Opcoes("Ajustar posição. Selecionar Opção:", "Descer 5mm", "Pular", "Descer Posição Final");
            StartMove;
            
            If InputUsuario3Opcoes <> 2 THEN
                SaiLoopValida := FALSE;
            ELSE
                SaiLoopValida := TRUE;
            ENDIF
            
            !Agora entra em loop, decrementando Z e perguntando input do usuário
            WHILE NOT SaiLoopValida DO
            
                !Parte-se do princípio que usuário alterou a posição relativa
                !Pega posição atual e altera Z para bater com a posição do buffer
                RT_PosicaoAuxiliar := CRobT(\Tool:=tGarra \WObj:=gWOBJDATA_FrameAtual);
                
                TEST InputUsuario3Opcoes
                    CASE 1: !Desce 5mm
                        RT_PosicaoAuxiliar.trans.z := RT_PosicaoAuxiliar.trans.z - 5;
                    CASE 3: !Desce ao final
                        RT_PosicaoAuxiliar.trans.z := zFinal;
                    DEFAULT: !Erro
                        MsgBoxStop("Algo deu errado.");
                ENDTEST
                
                SPEEDDATA_VelocidadeAuxiliar := GetSpeedDataFamilia("SPEEDDATA_AtaqueLinCol", f);
                MoveL RT_PosicaoAuxiliar, SPEEDDATA_VelocidadeAuxiliar, fine, tGarra\WObj:=gWOBJDATA_FrameAtual;
                
                zLoopValida := RT_PosicaoAuxiliar.trans.z - 5;
                !Segue somente se ainda podemos descer
                IF zLoopValida >= zFinal THEN
                    !Novamente pergunta ao usuário se pode continuar
                    !Se precisar de algum ajuste, usuário poderá fazê-lo e confirmar
                    
                    StopMove;
                    ClearPath;
                    InputUsuario3Opcoes := MsgBox3Opcoes("Ajustar posição. Selecionar Opção:", "Descer 5mm", "Pular", "Descer Posição Final");
                    StartMove;
                    
                    !Se usuário pediu para registrar, encerra
                    IF InputUsuario3Opcoes = 2 THEN
                        SaiLoopValida := TRUE;
                    ENDIF
                ELSE
                    SaiLoopValida := TRUE;
                ENDIF
                
            ENDWHILE
            
            
            StopMove;
            ClearPath;          
            InputUsuario3Opcoes := MsgBox3Opcoes("Robô na posição " + NumToStr(gNUM_IteradorBuffer, 0) + "(Família " + NumToStr(f, 0) + "). Registrar Nova Posição?", "Registrar", "Prosseguir Sem Registrar", "Testar Garra Abre/Fecha");
            StartMove;
            
            !Aqui usuário alterou a posição do robô e pediu para sobrescrevê-la
            TEST InputUsuario3Opcoes
                    CASE 1: !Registrar
                        SetPosicaoBuffer gNUM_IteradorBuffer, f, CRobT(\Tool:=tGarra \WObj:=gWOBJDATA_FrameAtual);
                    CASE 2:
                        !Pula
                    CASE 3: !Teste de Garra
                        !Fazer!
                    DEFAULT: !Erro
                        MsgBoxStop("Algo deu errado.");
                ENDTEST
            
            !Usuário deu sequência: Sobe Garra Lentamente 
            RT_PosicaoAuxiliar := CRobT(\Tool:=tGarra \WObj:=gWOBJDATA_FrameAtual);
            RT_PosicaoAuxiliar.trans.z := RT_PosicaoAuxiliar.trans.z + 50;
            
            SPEEDDATA_VelocidadeAuxiliar := GetSpeedDataFamilia("SPEEDDATA_RecuoLinCol", f);
            MoveL RT_PosicaoAuxiliar, SPEEDDATA_VelocidadeAuxiliar, z5, tGarra\WObj:=gWOBJDATA_FrameAtual;
            
            !Usuário deu sequência: Sobe Garra Mais rápido e segue p/ próximo ponto
            RT_PosicaoAuxiliar.trans.z := RT_PosicaoAuxiliar.trans.z + 350;
            
            SPEEDDATA_VelocidadeAuxiliar := GetSpeedDataFamilia("SPEEDDATA_RecuoLinSeg", f);
            MoveL RT_PosicaoAuxiliar, SPEEDDATA_VelocidadeAuxiliar, z5, tGarra\WObj:=gWOBJDATA_FrameAtual;
            
            break_a:
            
            !Inc/Dec iterador
            IF InputUsuarioCrescente THEN
                gNUM_IteradorBuffer := gNUM_IteradorBuffer +1;
            ELSE
                gNUM_IteradorBuffer := gNUM_IteradorBuffer -1;
            ENDIF
        ENDWHILE
       
    ENDPROC
    
    !*****************************************************************************************************************************
    !Retorna um texto contendo o nome do tipo para mensagens no TP
    !*****************************************************************************************************************************
    FUNC string GetModelo(Num i)
        TEST i
            CASE 1:
                RETURN "HL2 (1)";
            CASE 2:
                RETURN "HL4 (2)";
            CASE 3:
                RETURN "HL6 (3)";
            CASE 4:
                RETURN "HL8 (4)";
            DEFAULT :
                RETURN "?";
        ENDTEST
    ENDFUNC
    
    !*****************************************************************************************************************************
    !Lança Mensagem na Tela e Aguarda Usuário Selecionar o Modelo (de 1 a 4). Retorno = 5 significa usuário cancelou a rotina
    !*****************************************************************************************************************************
    FUNC num MsgBoxInputUsuarioModelo()
        VAR num NUM_RespostaTP;
        
        TPErase;
        TPReadFK NUM_RespostaTP, "Indicar Qual o Modelo:", "HL2 (1)", "HL4 (2)", "HL6 (3)", "HL8 (4)", "Cancelar!";
        RETURN NUM_RespostaTP;
            
    ENDFUNC

    !*****************************************************************************************************************************
    !Lança Mensagem na Tela e Aguarda Usuário Selecionar o Work Object(de 1 a 5)
    !1=Pallet Entrada, 2=Pallet Saída, 3=A, 4=B, 5=C
    !*****************************************************************************************************************************
    FUNC num MsgBoxInputUsuarioWorkObject()
        VAR num NUM_RespostaTP;
        
        TPErase;
        TPReadFK NUM_RespostaTP, "Indicar Qual a Área de Trabalho (Work Object):", "Pallet Entrada", "Pallet Saída", "Buffer A", "Buffer B", "Buffer C";
        RETURN NUM_RespostaTP;
            
    ENDFUNC    
    
    !*****************************************************************************************************************************
    !Lança Mensagem na Tela (configurável) e Aguarda Usuário entrar um valor qualquer
    !*****************************************************************************************************************************
    FUNC num MsgBoxInputNumericoUsuario(string pSTR_Msg)
        VAR num NUM_RespostaTP;
        
        TPErase;
        TPReadNum  NUM_RespostaTP, pSTR_Msg;
        RETURN NUM_RespostaTP;
            
    ENDFUNC

    !*****************************************************************************************************************************
    !Lança Mensagem na Tela e Para Execução do Programa (Usuário poderá retornar execução normalmente com um "play"
    !*****************************************************************************************************************************
    PROC MsgBoxStop(string pSTR_msg)
        VAR NUM lNUM_RespostaUsuario;
        
        TPErase;
        TPWrite pSTR_msg;
        Stop;
        TPErase;
        
    ENDPROC    
    
    !*****************************************************************************************************************************
    !Lança Mensagem na Tela e Aguarda Usuário apertar "Ok"
    !*****************************************************************************************************************************
    PROC MsgBoxOk(string pSTR_msg)
        VAR NUM lNUM_RespostaUsuario;
        
        TPErase;
        TPReadFK lNUM_RespostaUsuario, pSTR_msg, stEmpty, stEmpty, stEmpty, stEmpty, "Ok";
    ENDPROC
    
    !*****************************************************************************************************************************
    !Lança Mensagem na Tela e Retorna "true" se usuário apertou "sim"
    !*****************************************************************************************************************************
    FUNC bool MsgBoxSimNao(string pSTR_Msg, string pSTR_Sim, string pSTR_Nao)
        VAR NUM lNUM_RespostaUsuario;
        
        TPErase;
        TPReadFK lNUM_RespostaUsuario, pSTR_Msg, pSTR_Nao, stEmpty, stEmpty, stEmpty, pSTR_Sim;
        
        IF lNUM_RespostaUsuario = 5 THEN
            RETURN TRUE;
        ELSE
            RETURN FALSE;
        ENDIF
        
    ENDFUNC    

    !*****************************************************************************************************************************
    !Lança Mensagem na Tela Com 3 Opções. Retorna 1,2,3
    !*****************************************************************************************************************************
    FUNC Num MsgBox3Opcoes(string pSTR_Msg, string pSTR_Opcao1, string pSTR_Opcao2, string pSTR_Opcao3)        
        VAR num lNUM_RespostaUsuario;
        
        TPErase;
        TPReadFK lNUM_RespostaUsuario, pSTR_Msg, pSTR_Opcao1, pSTR_Opcao2, pSTR_Opcao3, stEmpty, stEmpty;
        TPErase;
        
        RETURN lNUM_RespostaUsuario;
        
    ENDFUNC      
    
    !*************************************************************************************************************************
    !*************************************************************************************************************************
    !*************************************************************************************************************************    
    !FUNÇÕES NÃO MAIS UTILIZADAS
    PROC Z_OLD_VerificacaoInicial ()
        VAR num Passo_Verif_Inic;
        VAR num RespostaTP;
        CONST pos pOffset_Esteiras_Z := [0,0,300];
        CONST pos pOffset_Esteiras_XZ := [100,0,300];
     
        VAR robtarget pPosição_Atual;
    inicio:   
    
        !Verifica posição atual do robô
        pPosição_Atual := CRobT(\Tool:=tGarra \WObj:=wobj0);
        
        IF pPosição_Atual.extax.eax_a > 2700 AND pPosição_Atual.trans.x < -1700 THEN
            Passo_Verif_Inic := 10;
            GOTO Analise;
        ENDIF
        
        IF pPosição_Atual.trans.x < 650 THEN
            Passo_Verif_Inic := 20;    
        ENDIF
        
        IF pPosição_Atual = pPosicaoHome THEN
            GOTO Final;
        ENDIF
        
        Passo_Verif_Inic := 30;
        
   Analise:     
        
        !****************************************************************!
        !               ANALISA O QUE FAZER EM CADA CASO                 !
        !****************************************************************!
        ! Passo_Verif_Inic = 10 - Acima das Esteiras                     !
        ! Passo_Verif_Inic = 20 - Abaixo região segura acima dos berços  !
        ! Passo_Verif_Inic = 30 - Demais regiões                         !
        !****************************************************************!
        
        TEST Passo_Verif_Inic
        
        CASE 10:
            !Verifica presença de peça na garra
            IF (DI_Pres_Peça_Garra_2 = 1 AND DI_Pres_Peça_Garra_1 = 0) OR (DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND DI_Fixa_Peça_1_Rc = 1 AND DI_Fixa_Peça_2_Rc = 1 AND PN_IN_Garra_Aberta = 1) OR (DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND DI_Fixa_Peça_1_Av = 1 AND DI_Fixa_Peça_2_Av = 1 AND PN_IN_Garra_Fechada = 1) THEN
                GOTO movimento_esteiras;
            ENDIF
            
            IF DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND ((DI_Fixa_Peça_1_Rc = 1 OR DI_Fixa_Peça_2_Rc = 1) AND (PN_IN_Garra_Fechada = 1 OR PN_IN_Garra_Aberta = 0)) THEN
                TPReadFK RespostaTP, "Garanta manualmente garra em condições de movimentação e pressione OK", stEmpty, stEmpty, stEmpty, stEmpty, "OK";
                IF (RespostaTP = 5 OR RespostaTP = 0) GOTO inicio;
            ENDIF
                       
    movimento_esteiras:
        
            pPosição_Desejada := pPosição_Atual;
            pPosição_Desejada.trans := pPosição_Desejada.trans + pOffset_Esteiras_Z;
            MoveL pPosição_Desejada, v30, z10, tGarra \WObj:=wobj0;
        
            pPosição_Desejada := pPosição_Atual;
            pPosição_Desejada.trans := pPosição_Desejada.trans + pOffset_Esteiras_XZ;
            MoveL pPosição_Desejada, v30, z10, tGarra \WObj:=wobj0;
            
            GOTO Final;
            
        CASE 20:
            !Verifica presença de peça na garra
            IF (DI_Pres_Peça_Garra_2 = 1 AND DI_Pres_Peça_Garra_1 = 0) OR (DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND DI_Fixa_Peça_1_Rc = 1 AND DI_Fixa_Peça_2_Rc = 1 AND PN_IN_Garra_Aberta = 1) OR (DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND DI_Fixa_Peça_1_Av = 1 AND DI_Fixa_Peça_2_Av = 1 AND PN_IN_Garra_Fechada = 1) THEN 
                GOTO movimento_berços;
            ENDIF
        
            IF DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND ((DI_Fixa_Peça_1_Rc = 1 OR DI_Fixa_Peça_2_Rc = 1) AND (PN_IN_Garra_Fechada = 1 OR PN_IN_Garra_Aberta = 0))  THEN !Falta sinal garra aberta
                TPReadFK RespostaTP, "Garanta manualmente garra em condições de movimentação e pressione OK", stEmpty, stEmpty, stEmpty, stEmpty, "OK";
                IF (RespostaTP = 5 OR RespostaTP = 0) GOTO inicio;
            ENDIF
                               
        movimento_berços:
        
            pPosição_Desejada := pPosição_Atual;
            pPosição_Desejada.trans.z := 660;
            MoveL pPosição_Desejada, v30, z10, tGarra \WObj:=wobj0;
            
            GOTO Final;
            
        CASE 30:
            
            !Verifica presença de peça na garra
            IF (DI_Pres_Peça_Garra_2 = 1 AND DI_Pres_Peça_Garra_1 = 0) OR (DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND DI_Fixa_Peça_1_Rc = 1 AND DI_Fixa_Peça_2_Rc = 1 AND PN_IN_Garra_Aberta = 1) OR (DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND DI_Fixa_Peça_1_Av = 1 AND DI_Fixa_Peça_2_Av = 1 AND PN_IN_Garra_Fechada = 1) THEN 
                GOTO Final;
            ENDIF
        
            IF DI_Pres_Peça_Garra_1 = 1 OR DI_Pres_Peça_Garra_2 = 0 AND ((DI_Fixa_Peça_1_Rc = 1 OR DI_Fixa_Peça_2_Rc = 1) AND (PN_IN_Garra_Fechada = 1 OR PN_IN_Garra_Aberta = 0))  THEN !Falta sinal garra aberta
                TPReadFK RespostaTP, "Garanta manualmente garra em condições de movimentação e pressione OK", stEmpty, stEmpty, stEmpty, stEmpty, "OK";
                IF (RespostaTP = 5 OR RespostaTP = 0) GOTO inicio;
            ENDIF
                 
        DEFAULT:
            
            TPErase;
            TPWrite "Não foi possível localizar o robô. Movimente manualmente para a posição inicial";
            Stop;
            GOTO inicio;
            
        ENDTEST
   
   Final:  
        Passo_Verif_Inic := 0;
        
        !Se em posição inicial e não foi solicitada parada, encerra rotina
        IF pPosição_Atual = pPosicaoHome GOTO Fim;
        
        !Vai para posição de trabalho
        MoveJ pPosicaoHome, sMov_Geral_Com_Produto, fine, tGarra \WObj:=wobj0;
                
   Fim:     
    ENDPROC
    
    
    !*************************************************************************************************************************
    !FUNÇÕES EXTRAS: Movimenta Para o Angulo Zero de cada eixo
    !*************************************************************************************************************************
    PROC EXTRAS_MovimentaEixosZero()
      !Ponto Zero do Robo...  
      MoveAbsJ [[0,0,0,0,0,0],[0,9E+09,9E+09,9E+09,9E+09,9E+09]] \NoEOffs, v400, fine, tool0;
      !
	ENDPROC
    
    !*************************************************************************************************************************
    !FUNÇÕES EXTRAS: Teste do 7o eixo
    !*************************************************************************************************************************
    PROC EXTRAS_Teste7oEixo()
        CONST robtarget pPos1:=[[1782.23,-9.35,841.69],[0.0118043,0.0684442,-0.99757,-0.00543028],[-1,0,-1,0],[2708.4,9E+09,9E+09,9E+09,9E+09,9E+09]];
        CONST robtarget pPos2:=[[1782.23,-9.35,841.69],[0.0118043,0.0684442,-0.99757,-0.00543028],[-1,0,-1,0],[-2708.4,9E+09,9E+09,9E+09,9E+09,9E+09]];
        
        WHILE TRUE DO
            MoveL pPos1, v5000, z50, tGarra\WObj:=wobj0;
            MoveL pPos2, v5000, z50, tGarra\WObj:=wobj0;
        ENDWHILE
       
    ENDPROC
    
    
   
    
    
    !*************************************************************************************************************************
    !*************************************************************************************************************************
    !*************************************************************************************************************************    
    !FUNÇÕES NÃO MAIS UTILIZADAS

    
	PROC Z_OLD_TesteEixo1()
		MoveJ [[4357.31,-1398.45,1978.14],[0.687563,0.27921,0.236299,0.627265],[-1,0,1,1],[2346.44,9E+09,9E+09,9E+09,9E+09,9E+09]], v2500, z50, tGarra\WObj:=FRAME_BufferA;
		WaitTime\InPos, 1;
		MoveJ [[3711.49,-1299.99,468.29],[0.0309804,-0.747554,-0.66329,0.0158269],[-1,0,1,0],[2346.44,9E+09,9E+09,9E+09,9E+09,9E+09]], v2500, z50, tGarra\WObj:=FRAME_BufferA;
		WaitTime\InPos, 1;
	ENDPROC
  
    PROC Z_OLD_Routine1()
		pMov_Pega_Depos_Buffer := pPega_Esteira_Entrada_Fam_1;
        pMov_Pega_Depos_Buffer.trans := pMov_Pega_Depos_Buffer.trans + [0,0,500];
        MoveJ pMov_Pega_Depos_Buffer, v1000, fine, tGarra\WObj:=FRAME_BufferA;
        MoveL pPega_Esteira_Entrada_Fam_1, v200, fine, tGarra\WObj:=FRAME_BufferA;
        MoveL pMov_Pega_Depos_Buffer, v2500, fine, tGarra\WObj:=FRAME_BufferA;
        MoveJ pPosicaoHome, v1000, fine, tGarra\WObj:=wobj0;
	ENDPROC
    
    PROC Z_OLD_TesteAfericao()
      !Ponto de Referencia p/ troca de lagarto..
      MoveJ pCheck_00,v500,z30,tGarra\WObj:=wobj0;
      MoveJ pCheck_01,v500,z30,tGarra\WObj:=wobj0;
      MoveJ pCheck_02,v500,z30,tGarra\WObj:=wobj0;
      MoveL Offs(pCheck,0,0,400),v500,z30,tGarra\WObj:=wobj0;
      MoveL Offs(pCheck,0,0,100), v200, z30, tGarra\WObj:=wobj0;
      MoveL Offs(pCheck,0,0,40), v40, z5, tGarra\WObj:=wobj0;
      MoveL pCheck, v20, fine, tGarra\WObj:=wobj0;
      WaitUntil\InPos,TRUE;
      WaitTime\InPos, 1.5;
      !Stop;
      MoveL Offs(pCheck,0,0,40),v100,z5,tGarra\WObj:=wobj0;
      MoveL Offs(pCheck,0,0,100),v400,z30,tGarra\WObj:=wobj0;
      MoveL Offs(pCheck,0,0,400),v500,z30,tGarra\WObj:=wobj0;
      MoveJ pCheck_02,v500,z30,tGarra\WObj:=wobj0;
      MoveJ pCheck_01,v500,z30,tGarra\WObj:=wobj0;
      MoveJ pCheck_00,v500,z30,tGarra\WObj:=wobj0;
      !
    ENDPROC
    
ENDMODULE